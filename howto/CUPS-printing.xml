<?xml version="1.0" encoding="ISO-8859-1"?>
<chapter id="CUPS-printing">

<chapterinfo>

	<author>
		<firstname>Kurt</firstname><surname>Pfeifle</surname>
		<affiliation>
			<orgname>Danka Deutschland GmbH </orgname>
                        <address><email>kpfeifle@danka.de</email></address>
		</affiliation>
	</author>
	<author>
		<firstname>Ciprian</firstname><surname>Vizitiu</surname>
		<affiliation>
			<address><email>CVizitiu@gbif.org</email></address>
		</affiliation>
		<contrib>drawings</contrib>
	</author>

	<author>&person.jelmer;<contrib>drawings</contrib></author>
        <author>&person.sgw;<contrib>Deutsche Übersetzung</contrib></author>
</chapterinfo>

<title>Unterstützung des CUPS-Drucksystems</title>

<sect1>

	<title>Einleitung</title>

	<sect2>
		<title>Eigenschaften und Vorzüge</title>

		<para>
		Das Common UNIX Print System (<ulink url="http://www.cups.org/">CUPS</ulink>)
		ist mittlerweile sehr populär geworden. Alle großen
		Linux Distributionen liefern dieses als das Standard-Drucksystem
		aus. Für viele ist es ein mystisches Tool.
		Meistens funktioniert es einfach. Daher wird es
		oft als <quote>Black Box</quote> angesehen, und solange
		es funktioniert, möchte sich auch niemand damit
		befassen. Sobald aber ein kleines Problem auftritt,
		bekommt man Schwierigkeiten damit, herauszufinden, wie man mit
		der Fehlersuche beginnt. Sehr viele Informationen, welche
		auch für CUPS relevant sind, finden Sie im Kapitel
		<quote>Klassische Druckerunterstützung</quote>.
		</para>

		<para>
		CUPS bietet einige mächtige und einmalige Möglichkeiten.
		Neu ist auch die sehr einfache Handhabung der
		grundsätzlichen Funktionen. Da diese Funktionen anders
		sind als in den mehr traditionell orientierten
		Drucksystemen, wenden Sie am besten nicht ihr
		bisheriges Wissen bzgl. Drucken an.
		Versuchen Sie eher, CUPS von Grund auf zu
		vestehen. Diese Dokumentation möchte Sie zu einem
		kompletten Verständniss von CUPS führen.
		Beginnen wir mit den grundsätzlichen Dingen.
		</para>


	</sect2>

	<sect2>
		<title>Überblick</title>

		<para>
		CUPS ist mehr als nur ein System für das Printspooling. Es ist
		ein komplettes Drucker-Management-System, welches das
		neue Internet Printing Protocol (IPP) erfüllt. IPP ist
		ein IETF- (Industry-and-Internet-Engineering Task Force) Standard für
		das Drucken in Netzwerken. Viele seiner Funktionen können
		remote oder lokal über einen Webbrowser verwaltet
		werden (Bereitstellung eines plattform-unabhängigen
		Zugriffs auf den CUPS-Printserver). Zusätzlich hat es die
		traditionellen Kommandozeilen-Tools und weitere moderne
		GUI-Schnittstellen. (GUI-Schnittstellen von
		Drittherstellern, wie etwa das überwältigende, in KDE
		enthaltene <ulink url="http://printing.kde.org/">KDEPrint</ulink>).
		</para>
		
		<para>
		CUPS erlaubt das Anlegen von <quote>raw</quote>-
		Druckern (keine Übersetzung der Druckdaten) genauso wie
		von <quote>smarten</quote> Druckern (Cups übersetzt das
		Dateiformat in das benötigte Druckerformat). Diese
		gibt CUPS auf vielfache Arten ähnliche Fähigkeiten wie das MS
		Windows Print Monitoring System. Sind Sie ein CUPS-
		Verfechter, dann werden Sie sicher argumentieren, daß CUPS
		sogar besser ist! Wie auch immer, lassen Sie uns
		damit weitermachen, wie man CUPS für eine Zusammenarbeit
		mit MS Windows Druckclients über SAMBA konfigurieren kann.
		</para>

	</sect2>
</sect1>

<sect1>
	<title>Grundlegende Konfiguration für die CUPS-Unterstützung</title>

	<para>
	In Samba-3.0 (gilt auch für 2.2.x) sind für das grundlegende
	Drucken mit CUPS nur 2 Einträge nötig:
	<smbconfoption><name>printing</name><value>cups</value></smbconfoption>
	and
	<smbconfoption><name>printcap</name><value>cups</value></smbconfoption>.
	CUPS benötigt keine printcap-Datei.
	Dennoch gibt es in der Konfigurationsdatei
	<filename>cupsd.conf</filename> zwei zugehörige Einträge, die
	kontrollieren, wie diese Datei anzulegen und zu verwalten ist, damit
	Anwendungen von Drittherstellern damit umgehen können (Beispiel:
	<parameter>Printcap /etc/printcap</parameter> and
	<parameter>PrintcapFormat BSD</parameter>).
	Ältere Programme benötigen oft diese printcap-Datei mit den
	Namen der Drucker, um drucken zu können. Stellen Sie daher sicher, daß CUPS so
	konfiguriert wurde, daß diese printcap-Datei erstellt und
	gewartet wird. Für Details sehen Sie die man-Page
	<command>man cupsd.conf</command>, die CUPS-relevanten
	Dokumentationen, sowie die vielen Infos vom CUPS Server
	selbst: <ulink noescape="1" url="http://localhost:631/documentation.html">http://localhost:631/documentation.html</ulink>.
	</para>

	<sect2>
		<title>Das Verlinken von smbd mit libcups.so</title>

		<para>
		Samba hat eine spezielle Beziehung zu CUPS. Samba kann
		mit Unterstützung für die CUPS-Library übersetzt werden. Die meisten
		aktuellen Installationen haben diesen Support bereits
		per default in smbd und den anderen Samba-Binaries
		integriert. Sie können CUPS auch benutzen, wenn Samba
		nicht gegen die <filename>libcups.so</filename>
		&smbmdash; gelinkt ist, aber es gibt einige Unterschiede in
		den benötigten oder unterstützten Konfigurationen.
		</para>
		
		<para>
		Wenn Samba mit <filename>libcups</filename> kompiliert
		wurde, verwendet <smbconfoption><name>printcap</name><value>cups</value></smbconfoption>
		die CUPS-API, um Drucker aufzufinden, Jobs zu übergeben,
		Queues abzufragen usw.
		Sonst wird dies auf die System V Druck-Kommandos mit der zusätzlichen
		<command>-oraw</command>-Option umgesetzt.
		Auf einem Linux-System können Sie mit dem
		<command>ldd</command> Utility nähere Details erfahren
		(ldd muss nicht auf allen Plattformen vorhanden sein,
		oder dessen Funktion kann in einem vergleichbarem
		Programm inkludiert sein).
		</para>


<para><screen>
&rootprompt;<userinput>ldd `which smbd`</userinput>
libssl.so.0.9.6 =&gt; /usr/lib/libssl.so.0.9.6 (0x4002d000)
libcrypto.so.0.9.6 =&gt; /usr/lib/libcrypto.so.0.9.6 (0x4005a000)
libcups.so.2 =&gt; /usr/lib/libcups.so.2 (0x40123000)
[....]
</screen></para>

		<para>
		Die Zeile
		<computeroutput>libcups.so.2 =&gt; /usr/lib/libcups.so.2 (0x40123000)</computeroutput>
		bedeutet, daß der CUPS-Support in Samba einkompiliert wurde.
		In diesem Fall, und bei gesetztem printing = cups,
		<emphasis>werden anderweitige manuell gesetzte print
		Kommandos in &smb.conf; ignoriert</emphasis>.
		Bitte merken Sie sich diesen wichtigen Punkt !
		</para>

		<tip><para>Sollte es aus irgendeinem Grund nötig sein,
		Ihre eigenen Druck-Kommandos zu setzen, können sie
		dies erreichen, in dem sie die Option
		<smbconfoption><name>printing</name><value>sysv</value></smbconfoption>
		verwenden.
		Sie verlieren so jedoch die Unterstützung der engen CUPS/Samba-Integration.
		Wenn Sie das vorhaben, müssen Sie folgende Druckkommandos manuell konfigurieren
		(am wichtigsten:	
		<smbconfoption><name>print command</name></smbconfoption>; andere Kommandos sind
		<smbconfoption><name>lppause command</name></smbconfoption>,
	        <smbconfoption><name>lpresume command</name></smbconfoption>,
                <smbconfoption><name>lpq command</name></smbconfoption>,
	        <smbconfoption><name>lprm command</name></smbconfoption>,
                <smbconfoption><name>queuepause command</name></smbconfoption> und
                <smbconfoption><name>queue resume command</name></smbconfoption>).</para></tip>
        </sect2>

	<sect2>
		<title>Einfache &smb.conf; Einstellungen für CUPS</title>

		<para>
		Als Zusammenfassung <link linkend="cups-exam-simple">
		zeigt das folgende Beispiel</link>
		ein einfaches Drucker-relevantes Setup
		für &smb.conf;, um den grundlegenden Support für CUPS zu erhalten:
		</para>


		<para><smbconfexample id="cups-exam-simple">
		<title>Einfachste Drucker-bezogene smb.conf</title>
		<smbconfsection>[global]</smbconfsection>
		<smbconfoption><name>load printers</name><value>yes</value></smbconfoption>
		<smbconfoption><name>printing</name><value>cups</value></smbconfoption>
		<smbconfoption><name>printcap name</name><value>cups</value></smbconfoption>

		<smbconfsection>[printers]</smbconfsection>
		<smbconfoption><name>comment</name><value>Alle Drucker</value></smbconfoption>
		<smbconfoption><name>path</name><value>/var/spool/samba</value></smbconfoption>
		<smbconfoption><name>browseable</name><value>no</value></smbconfoption>
		<smbconfoption><name>public</name><value>yes</value></smbconfoption>
		<smbconfoption><name>guest ok</name><value>yes</value></smbconfoption>
		<smbconfoption><name>writable</name><value>no</value></smbconfoption>
		<smbconfoption><name>printable</name><value>yes</value></smbconfoption>
		<smbconfoption><name>printer admin</name><value>root, @ntadmins</value></smbconfoption>

		</smbconfexample></para>

		<para>
		Das ist alles, was Sie an grundlegenden Einstellungen
		zum Drucken mit CUPS benötigen. Dies wird alle Grafik-,
		Text-, PDF-, und Postscript-Dateien drucken, die von Ihren Windows-Clients
		übermittelt werden. Aber die meisten Ihrer Windows-Benutzer
		würden nicht wissen, wie sie solche Dateien ohne einen
		grafischen Druckerdialog übermitteln können. Windows
		Clients haben meist lokale Druckertreiber
		installiert, welche in den Anwendungen durch den Druck-Button
		aktiviert werden. Ihre Benutzer drucken auch selten
		Dateien aus der Kommandozeile. Im Gegensatz zu Unix
		Client's senden sie kaum Grafik-, Text- oder PDF-
		formatierte Dateien direkt zum Spooler. Sie
		drucken fast ausschließlich aus GUI-Anwendungen über den
		<quote>Druckertreiber</quote>, welcher zwischen der
		nativen Ausgabe des Programms und dem Druckdatenstrom
		sitzt. Ist das Ausgabegerät kein PostScript-Drucker, so
		ist der Druckdatenstrom in einem <quote>Binärformat</quote>
		welches nur der betreffende Drucker versteht.
		Lesen Sie bitte weiter, um zu verstehen, welche Probleme
		dabei entstehen und wie Sie diese vermeiden.	
		</para>
	</sect2>

	<sect2>
	<title>Komplexere CUPS-Einstellungen in der &smb.conf;</title>
	<para>
	<link linkend="overridesettings">Die nächste Konfiguration</link>
	beschreibt ein etwas komplexeres Drucker-Setup der &smb.conf;.
	Es aktiviert generellen CUPS-Druck-Support für alle Drucker, definiert aber einen
	Drucker, der davon abweichend konfiguriert wird.
	</para>

	<para><smbconfexample id="overridesettings">
	<title>Das Aufheben globaler CUPS-Einstellungen für einen Drucker</title>
	<smbconfsection>[global]</smbconfsection>
	<smbconfoption><name>printing</name><value>cups</value></smbconfoption>
	<smbconfoption><name>printcap name</name><value>cups</value></smbconfoption>
	<smbconfoption><name>load printers</name><value>yes</value></smbconfoption>

	<smbconfsection>[printers]</smbconfsection>
	<smbconfoption><name>comment</name><value>Alle Drucker</value></smbconfoption>
	<smbconfoption><name>path</name><value>/var/spool/samba</value></smbconfoption>
	<smbconfoption><name>public</name><value>yes</value></smbconfoption>
	<smbconfoption><name>guest ok</name><value>yes</value></smbconfoption>
	<smbconfoption><name>writable</name><value>no</value></smbconfoption>
	<smbconfoption><name>printable</name><value>yes</value></smbconfoption>
	<smbconfoption><name>printer admin</name><value>root, @ntadmins</value></smbconfoption>

	<smbconfsection>[special_printer]</smbconfsection>
	<smbconfoption><name>comment</name><value>Ein spezieller Drucker mit seinen eigenen Einstellungen</value></smbconfoption>
	<smbconfoption><name>path</name><value>/var/spool/samba-special</value></smbconfoption>
	<smbconfoption><name>printing</name><value>sysv</value></smbconfoption>
	<smbconfoption><name>printcap</name><value>lpstat</value></smbconfoption>
	<smbconfoption><name>print command</name><value>echo "NEW: `date`: printfile %f" \</value></smbconfoption>
	<member><parameter> >> /tmp/smbprn.log ; \</parameter></member>
	<member><parameter>echo "     `date`: p-%p s-%s f-%f" >> /tmp/smbprn.log ; \</parameter></member>
	<member><parameter>echo "     `date`: j-%j J-%J z-%z c-%c" >> /tmp/smbprn.log : rm %f</parameter></member>
	<smbconfoption><name>public</name><value>no</value></smbconfoption>
	<smbconfoption><name>guest ok</name><value>no</value></smbconfoption>
	<smbconfoption><name>writable</name><value>no</value></smbconfoption>
	<smbconfoption><name>printable</name><value>yes</value></smbconfoption>
	<smbconfoption><name>printer admin</name><value>kurt</value></smbconfoption>
	<smbconfoption><name>hosts deny</name><value>0.0.0.0</value></smbconfoption>
	<smbconfoption><name>hosts allow</name><value>turbo_xp, 10.160.50.23, 10.160.51.60</value></smbconfoption>
	</smbconfexample></para>

	<para>
	Diese spezielle Freigabe ist nur für Testzwecke gedacht. Sie schreibt den Druckauftrag nicht
	in eine Datei, sondern protokolliert nur die Auftrags-Parameter, die Samba bekannt sind, in die
	Datei <filename>/tmp/smbprn.log</filename> und löscht die Auftrags-Datei. Außerdem ist der
	Parameter <smbconfoption><name>printer admin</name></smbconfoption> dieser Freigabe
	<quote>kurt</quote> (nicht die Gruppe <quote>@ntadmins</quote>), Gast-Zugriff ist nicht erlaubt,
	die Freigabe wird nicht in der Netzwerkumgebung angezeigt (also müssen Sie wissen, daß es sie
	gibt), und sie erlaubt nur den Zugriff von nur drei Hosts. Um CUPS daran zu hindern, sich
	hier einzumischen und die Druckjobs dieser Freigabe zu übernehmen, müssen wir dies setzen:
	<smbconfoption><name>printing</name><value>sysv</value></smbconfoption> und
	<smbconfoption><name>printcap</name><value>lpstat</value></smbconfoption>.
	</para>
	</sect2>
</sect1>

<sect1>
	<title>Erweiterte Konfiguration</title>

	<para>
	Bevor wir in all die Konfigurations-Optionen eintauchen, lassen Sie uns ein paar Punkte
	klären. <emphasis>Netzwerk-Druck muß organisiert und korrekt eingerichtet werden</emphasis>.
	Dies passiert meistens nicht. Bestehenden alten Systemen oder
	LAN-Umgebungen in kleinen Firmen mangelt es oft an Design und guter Wartung.
	</para>


	<sect2>
	<title>Zentrales Spooling vs. <quote>Peer-to-Peer</quote>-Druck</title>


	<para>
<indexterm><primary>spooling</primary><secondary>central</secondary></indexterm>
<indexterm><primary>spooling</primary><secondary>peer-to-peer</secondary></indexterm>
	Viele kleine Büro- oder Heim-Netzwerke, genauso wie schlecht organisierte grössere
	Umgebungen, erlauben jedem Client direkten Zugriff auf verfügbare Netzwerkdrucker.
	Dies ist im Allgemeinen eine schlechte Idee. Es blockiert oft den Zugriff eines Clients
	auf den Drucker, wenn der Auftrag eines anderen Clients gedruckt wird. Dies könnte
	die Applikation des ersten Clients "einfrieren", während diese darauf wartet, den
	Auftrag loszuwerden. Es gibt auch immer wieder Beschwerden darüber, daß Aufträge
	gedruckt werden, deren Seiten miteinander vermischt sind. Ein besseres Konzept
	ist die Verwendung eines Druck-Servers; er routet alle Aufträge durch ein zentrales
	System, welches unverzüglich antwortet, Aufträge von mehreren verschiedenen Clients
	zur selben Zeit annimmt, und diese danach in der korrekten Reihenfolge an die Drucker
	weiterleitet.
	</para>
	</sect2>

	<sect2>
	<title>"Raw" Print Serving &smbmdash; Hersteller-Treiber auf den Windows Clients</title>


	<para>
	<indexterm><primary>spooling-only</primary></indexterm>
	<indexterm><primary>"raw" printing</primary></indexterm>
	Die meisten traditionell konfigurierten UNIX-Druck-Server, die für Samba's Windows clients
	arbeiten, zeigen ein wirklich simples Setup. Ihre einzige Aufgabe war die Verwaltung des
	<quote>raw spooling</quote> aller Jobs, die ihnen von Samba übergeben wurde. Dieser Ansatz bedeutete,
	daß von den Windows Clients erwartet wurde, daß sie die Druckauftrags-Datei so vorbereiten, daß
	diese bereit zum Versenden an das Drucker-Gerät ist. Hier muß ein nativer (vom Hersteller
	bereitgestellter) Windows Druckertreiber für das Zielgerät auf jedem einzelnen Client installiert werden.
	</para>

	<para>
	Es ist möglich, CUPS, Samba und Ihre Windows Clients in derselben traditionellen und simplen Art zu
	konfigurieren. Wenn CUPS-Drucker für RAW-print-through Betriebsart konfiguriert sind, ist es die
	Verantwortung des Samba-Clients, den Druckauftrag (die Datei) vollständig wiederzugeben. Die Datei muß in
	einem Format gesendet werden, die passend für die direkte Weitergabe an den Drucker ist. Clients müssen
	dafür die vom Hersteller bereitgestellten Treiber verwenden, CUPS wird keinerlei Format-Wandlung
	durchführen.
	</para>

	<para>
	Die einfachste mögliche Druck-Konfiguration ist die Verwendung von "raw print-through".	
	Dies wird dadurch erreicht, daß der Drucker so installiert wird, als ob er physisch an den
	Windows client angeschlossen wäre. Sie leiten dann die Ausgabe auf eine raw-Netzwerk-Druck-Warteschlange
	um. Folgender Ablauf erzielt dies:
	</para>

	<procedure>
		<step><para>
		Editieren Sie <filename>/etc/cups/mime.types</filename>, um die Zeile nahe dem Dateiende
		auszukommentieren, die dies enthält:
<screen>
#application/octet-...
</screen>
		</para></step>

		<step><para>
		Machen Sie dasselbe mit der Datei <filename>/etc/cups/mime.convs</filename>.
		</para></step>

		<step><para>
		Fügen Sie mittels Web interface einen raw-Drucker hinzu. Gehen Sie mit Ihrem Browser auf
		<constant>http://localhost:631</constant>. Klicken Sie auf Administration und fügen Sie den
		Drucker gemäß der Aufforderungen hinzu. Installieren Sie keine Treiber dafür. Wählen Sie Raw.
		Wählen Sie den Queue-Namen <constant>Raw Queue</constant>.
                </para></step>

		<step><para>
		Im Abschnitt <constant>[printers]</constant> der Datei &smb.conf; fügen Sie hinzu:
		<smbconfoption><name>use client driver</name><value>Yes</value></smbconfoption>,
		und im Abschnitt <constant>[global]</constant>:
		<smbconfoption><name>printing</name><value>CUPS</value></smbconfoption>, plus
		<smbconfoption><name>printcap</name><value>CUPS</value></smbconfoption>.
		</para></step>

		<step><para>
		Installieren Sie den Drucker, als ob er ein lokaler Drucker wäre. Z.B.:
		Drucken auf <constant>LPT1:</constant>.
                </para></step>

		<step><para>
		Editieren Sie die Konfiguration im Tab <guimenu>Detail</guimenu>, legen Sie einen
		<constant>local port</constant> an, der auf die raw-Druck-Queue zeigt, die Sie oben
		angelegt haben. Beispiel: <constant>\\server\raw_q</constant>.
		Hier ist <constant>raw_q</constant> der Name, den Sie der Drucker-Warteschlange in der
		CUPS-Umgebung gegeben haben.
		</para></step>
	</procedure>

	</sect2>

	<sect2>
	<title>Installation von Windows Client Treibern</title>

	<para>
	Die Druckertreiber auf den Windows Clients können auf zwei funktional verschiedene Arten
	installiert werden:
	</para>

	<itemizedlist>
	<listitem><para>Manuelles Installieren der Treiber, lokal auf jedem Client, einer nach dem anderen;
	dies ergibt Drucken im alten <emphasis>LanMan</emphasis>-Stil und verwendet eine Verbindung vom Typ
	<filename>\\sambaserver\druckerfreigabe</filename>.
	</para></listitem>


	<listitem><para>
	<indexterm><primary>point 'n' print</primary></indexterm>
	Ablegen und Vorbereiten der Treiber (für den späteren Download) auf dem Druckserver (Samba); dies
	befähigt die Clients, <quote>Point'n'Print</quote> zu verwenden, um Treiber semi-automatisch
	installiert zu bekommen, wenn sie das erste Mal auf den Drucker zugreifen; bei dieser Methode verwenden
	NT/200x/XP-Clients Druckaufrufe vom Typ <emphasis>SPOOLSS/MS-RPC</emphasis>.</para></listitem>
        </itemizedlist>

	<para>
	Die zweite Methode wird zur Verwendung empfohlen.
	</para>
	</sect2>

	<sect2 id="cups-raw">
	<title>Explizites Aktivieren von <quote>raw</quote>-Druck für <emphasis>application/octet-stream</emphasis></title>


	<para>
	<indexterm><primary>application/octet-stream</primary></indexterm>
	<indexterm><primary>raw printing</primary></indexterm>
	<indexterm><primary>MIME</primary><secondary>raw</secondary></indexterm>
	Wenn Sie die erste Variante verwenden (Treiber werden auf Client-Seite installiert), ist dies eine
	Einstellung, die sie beachten müssen: CUPS muß mitgeteilt werden, daß es <quote>raw</quote>-Druck von
	Binär-Dateiformaten erlauben soll. Die CUPS-Dateien, die korrekt für RAW-Modus-Drucker gesetzt sein
	müssen, sind:	
	</para>

	<itemizedlist>
		<listitem><para><filename>/etc/cups/mime.types</filename></para></listitem>
		<listitem><para><filename>/etc/cups/mime.convs</filename></para></listitem>
	</itemizedlist>

	<para>
	Beide enthalten Einträge (am Ende der jeweiligen Datei), die auskommentiert werden müssen, um
	RAW-Modus-Betrieb zu erlauben. In <filename>/etc/cups/mime.types</filename> muß diese Zeile vorhanden
	sein:

	<filterline>
	 application/octet-stream
	</filterline>

	<indexterm><primary>/etc/cups/mime.convs</primary></indexterm>
	<indexterm><primary>/etc/cups/mime.types</primary></indexterm>

	In <filename>/etc/cups/mime.convs</filename> müssen Sie diese Zeile haben:

	<indexterm><primary>application/vnd.cups-raw</primary></indexterm>

	<filterline>
		application/octet-stream   application/vnd.cups-raw   0   -
	</filterline>

	Wenn diese beiden Dateien nicht korrekt für RAW-Windows-CLient-Druck konfiguriert sind, kann es sein, daß
	Sie die gefürchtete Meldung <computeroutput>Unable to
        convert file 0</computeroutput> in Ihrer CUPS error_log Datei vorfinden.
	</para>

	<note><para>Das Editieren von <filename>mime.convs</filename> und
	<filename>mime.types</filename>
	<emphasis>erwingt</emphasis> den <quote>raw</quote>-Druck nicht, es
	<emphasis>erlaubt</emphasis> ihn nur.
	</para></note>

	<formalpara><title>Hintergrund</title>


	<para>
	<indexterm><primary>application/octet-stream</primary></indexterm>
	Da CUPS ein mehr sicherheitsbewußtes Drucksystem ist als die traditionellen Systeme, erlaubt es
	in der Voreinstellung nicht, daß ein Benutzer beliebige (möglicherweise binäre) Daten an
	Druck-Geräte sendet. Dies könnte leicht dazu benutzt werden, um einen
	<quote>Denial of Service</quote>-Angriff auf Ihre(n) Drucker zu starten, was zumindest den Verlust von
	einer Menge Papier und Tinte nach sich ziehen würde. <quote>Unbekannte</quote> Daten werden von CUPS
	als <parameter>MIME type: application/octet-stream</parameter> gekennzeichnet, und es wird ihnen nicht
	erlaubt, zum Drucker zu gelangen. In der Voreinstellung können Sie nur andere (bekannte) MIME-Typen
	 <quote>raw</quote> senden. Das <quote>raw</quote>-Senden von Daten bedeutet, daß CUPS nicht versucht,
	die Daten zu konvertieren und sie einfach unangetastet an den Drucker weiterleitet (sehen Sie das nächste
	Kapitel für noch mehr Hintergrund-Erklärungen dazu).
	</para>
	</formalpara>

	<para>
	Dies ist alles, was Sie darüber wissen müssen, um die CUPS/Samba-Combo zum <quote>raw</quote>-Druck
	der von Windows-Clients, die Herstellertreiber lokal installiert haben, vorbereiteten Dateien
	zu bringen. Wenn Sie nicht an Hintergrund-Informationen zu erweitertem CUPS/Samba-Druck interessiert
	sind, überspringen Sie einfach die restlichen Abschnitte dieses Kapitels.
	</para>
	</sect2>

	<sect2>
	<title>Die Methoden, um Treiber auf den Server zu laden</title>

	<para>
	Dieser Abschnitt beschreibt drei übliche Methoden, zuzüglich einer neuen, mit denen Druckertreiber
	auf den Server geladen werden können ("Upload").
	</para>

	<para>
	<indexterm><primary>point 'n' print</primary></indexterm>
	Wenn Sie Druck vom Typ MS-RPC verwenden wollen, müssen Sie die Treiber zuerst auf den Samba-Server
	hochladen (Freigabe <smbconfsection>[print$]</smbconfsection>). Für die Behandlung des Themas, wie
	man Druckertreiber auf dem Samba-Host ablegt (damit die Windows-Clients diese via
	<quote>Point'n'Print</quote> herunterladen und verwenden können, lesen Sie bitte das vorhergehende
	Kapitel dieser HOWTO-Sammlung. Dort finden Sie Beschreibungen und Referenzen zu drei Methoden, um
	Druckertreiber auf dem Samba-Server vorzubereiten:
	</para>
	<itemizedlist>
		<listitem><para>
	<indexterm><primary>Druckerinstallations-Assistent</primary></indexterm>
				Die GUI, <quote>Druckerinstallations-Assistent</quote>
	<emphasis>upload-von-einem-Windows-Client</emphasis> Methode.</para></listitem>

	<listitem><para>Die Befehlszeilen, <quote>smbclient/rpcclient</quote>
	upload-von-einer-UNIX-Workstation Methode.</para></listitem>


	<listitem><para>
	<indexterm><primary>imprints</primary></indexterm>
			Die Imprints Toolset Methode.</para></listitem>
	</itemizedlist>

	<para>
	Diese drei Methoden können genauso auf CUPS angewendet werden. Ein neuer und praktischerer Weg, um
	Windows-Treiber in Samba zu laden, steht zur Verfügung, wenn Sie CUPS verwenden:
	</para>


	<itemizedlist>
		<listitem><para>
	<indexterm><primary>cupsaddsmb</primary></indexterm>
				Das <parameter>cupsaddsmb</parameter> Werkzeug.</para></listitem>
	</itemizedlist>

	<para>
	<command>cupsaddsmb</command> wird weiter unten im Detail behandelt. Zuerst erkunden wir aber das
	CUPS-Filter-System und vergleichen die Windows- und UNIX-Druck-Architektur.
	</para>
	</sect2>
</sect1>

<sect1>
	<title>Erweitertes intelligentes Drucken mit Download von Postscript-Treibern</title>


	<para>
	<indexterm><primary>PostScript</primary><seealso>Ghostscript</seealso></indexterm>
	Wir wissen nun, wie man einen <quote>dump</quote>-Druckserver aufsetzt, das ist ein Server, der
	Druckaufträge <quote>raw</quote> verwaltet, also die Druckdaten unberührt läßt.
	</para>

	<para>
	Möglicherweise müssen Sie CUPS auf eine	intelligentere Art installieren. Die Gründe können mannigfaltig
	sein:
	</para>

	<itemizedlist>
	<listitem><para>
	Vielleicht will Ihr Chef monatliche Statistiken: Welcher Drucker hat wieviele Seiten gedruckt?
	Was war die durchschnittliche Grösse eines Druckauftrags? Wieviele Druckaufträge gab es im Durchschnitt
	pro Tag? Welche Abteilung druckt wieviel?</para></listitem>

	<listitem><para>
	Vielleicht sollen Sie ein Druck-Quota-System aufbauen: Benutzer sollten nicht mehr drucken können, als
	ein vorgeschriebenes Limit pro Periode.</para></listitem>

	<listitem><para>
	Vielleicht ist Ihr Netzwerkdruck-Setup ein komplettes Durcheinander und muß von Grund auf
	reorganisiert werden.</para></listitem>

	<listitem><para>
	Vielleicht haben Sie bereits zu viele <quote>blue screens</quote> gesehen, die von Druckertreibern
	herrühren, die unvollständig "debugged" wurden und in NT
	<quote>kernel mode</quote> laufen?</para></listitem>
	
	</itemizedlist>

	<para>
	Diese Ziele können nicht mit einem RAW-Druckserver erreicht werden. Um einen Server aufzubauen, der
	diesen Anforderungen entspricht, müssen Sie zuerst lernen, wie CUPS arbeitet, und wie Sie seine
	Features aktivieren.
	</para>

	<para>
	Was nun folgt, ist der Vergleich von einigen fundamentalen Konzepten des Windows- und UNIX-Drucks;
	danach folgt eine Beschreibung des CUPS-Filter-Systems, wie es arbeitet, und wie Sie es beeinflussen
	können.
	</para>

	<sect2 id="gdipost">
	<title>GDI unter Windows -- PostScript auf UNIX</title>


	<para>
	<indexterm><primary>GDI</primary></indexterm>
	<indexterm><primary>PostScript</primary></indexterm>
	Netzwerkdurck ist eine der kompliziertesten und fehlerträchtigsten Alltags-Aufgaben, die ein Benutzer
	oder Administrator zu bewältigen hat. Dies gilt für alle Betriebssysteme. Und hier sind die Gründe dafür.
	</para>


	<para>
	<indexterm><primary>PCL</primary></indexterm>
	<indexterm><primary>PDL</primary></indexterm>
	Bei den meisten Dateiformaten können Sie nicht erwarten, sie einfach in den Drucker zu schmeissen, und
	sie werden gedruckt. Es muß eine Wandlung des Dateiformats passieren. Das Problem dabei ist, daß es
	keinen gemeinsamen Standard für Druck-Datei-Formate über alle Hersteller und Druckertypen gibt.
	Während sich PostScript (Handelsmarke von Adobe) und, zu einem gewissen Teil, PCL (Handelsmarke von HP)
	zu halb-offiziellen <quote>Standards</quote> entwickelt haben, indem sie die weitest verbreiteten
	PDLs (Page Description Languages) sind, gibt es nach wie vor viele Hersteller, die
	<quote>ihr eigenes Süppchen kochen</quote> (der Grund dafür können inakzeptabel hohe Lizenzgebühren
	für Drucker-interne PostScript-Interpreter sein, usw.).
	</para>
	</sect2>

	<sect2>
	<title>Windows Drivers, GDI and EMF</title>


	<para>
	<indexterm><primary>GDI</primary></indexterm>
	<indexterm><primary>EMF</primary></indexterm>
	<indexterm><primary>WYSIWYG</primary></indexterm>
	Im Windows OS wird die Formatwandlung von den Druckertreibern erledigt. Auf der Windows-Plattform
	haben alle Anwendungs-Programmierer eine eingebaute API zur Verfügung, das Graphical Device
        Interface (GDI), als Teil und Paket des Betriebssystems selbst, um darauf aufzubauen. Dieser GDI-Kern
	wird als gemeinsame einheitliche Grundlage für alle Windows-Programme verwendet, um Bilder,
	Schriften und Dokumente <emphasis>am Bildschirm "on screen"</emphasis> darzustellen, genauso wie
	<emphasis>auf Papier "on paper"</emphasis> (Druck). Daher können Druckertreiber-Hersteller sich mit ihrem
	Druckertreiber-Input auf einen wohldefinierten GDI-Output standardisieren. Das Erreichen von
	WYSIWYG (<quote>What You See Is What You Get</quote>) ist relativ einfach, weil die on-screen
	Grafik-Primitive, genauso wie die on-paper gezeichneten Objekte von einer gemeinsamen Quelle stammen.
	Diese Quelle, die GDI, erzeugt oft ein Dateiformat namens Enhanced MetaFile (EMF). EMF wird vom
	Druckertreiber verarbeitet und in ein Drucker-spezifisches Format konvertiert.
	</para>

	<note><para>
	<indexterm><primary>PDF</primary></indexterm>
	Zusätzlich zur GDI-Basis in MS Windows, hat Apple sich entschieden, Papier- und Bildschirmausgaben
	für seine (auf BSD-UNIX basierende, wußten Sie das?) Betriebssysteme Mac OS X und Darwin auf
	eine gemeinsame Basis zu stellen.
	<indexterm><primary>X Window System</primary></indexterm>
	<indexterm><primary>PostScript</primary></indexterm>
	<indexterm><primary>PCL</primary></indexterm>
	<indexterm><primary>Xprint</primary></indexterm>
	Apples <emphasis>Core Graphic Engine</emphasis> verwendet eine Abwandlung von <emphasis>PDF</emphasis>
	für alle Anzeigen.	
	</para></note>

	<para>

	<image><imagedescription>Windows druckt auf einen lokalen Drucker.</imagedescription><imagefile>1small</imagefile></image>
	</para>
	</sect2>

	<sect2>
	<title>UNIX Druckdatei-Konvertierung und GUI-Grundlagen</title>


	<para>
	<indexterm><primary>X Window System</primary></indexterm>
	<indexterm><primary>PostScript</primary></indexterm>
	<indexterm><primary>PCL</primary></indexterm>
	<indexterm><primary>Xprint</primary></indexterm>
	In UNIX and Linux gibt es keine vergleichbare Schicht im OS-Kernel oder dem X-
	(Bildschirm-Darstellungs) Server. Jede Anwendung ist für sich selbst verantwortlich, um ihre
	Druckausgabe zu erzeugen. Zum Glück verwenden die meisten Postscript und das gibt zumindest etwas
	gemeinsame Grundlagen. Unglücklicherweise gibt es viele verschiedene Qualitätsstufen für Postscript.
	Und noch schlechter, es gibt einen riesigen Unterschied (und keinen gemeinsamen Ursprung) zwischen
	der Darstellung desselben Dokuments auf dem Bildschirm und wie dieses Dokument auf Papier
	dargestellt wird. WYSIWYG ist schwieriger zu erreichen. Dies stammt aus der Zeit, Jahrzehnte zurück,
	als die Vorläufer von X.org beim Entwurf der UNIX-Grundlagen und -Protokolle für GUIs, die
	Verantwortung für <quote>Papierausgabe</quote> ablehnten, und sich auf <quote>nur on-screen</quote>
	beschränkten. (Seit einigen Jahren ist das Projekt <quote>Xprint</quote> in Entwicklung, man versucht,
	Druckunterstützung in das X-Framework zu integrieren, inklusive eines PostScript- und eines PCL-Treibers,
	aber dieses Projekt ist noch nicht bereit für die Anwendung.) Sie können diese unangenehme Erbe bis heute
	sehen, wenn Sie sich die verschiedenen <quote>font</quote>-Verzeichnisse auf Ihrem System ansehen;
	es gibt eigene Schriften für X-Darstellung und andere für den Druck auf Papier.
	</para>

	<formalpara>
	<title>Hintergrund</title>


	<para>
	<indexterm><primary>PostScript</primary></indexterm>
	Die Programmiersprache PostScript ist eine <quote>Erfindung</quote> von Adobe Inc., aber ihre
	Spezifikationen wurden vollständig veröffentlicht. Ihre Stärke liegt in den mächtigen Fähigkeiten,
	graphische Objekte zu beschreiben (Schriften, Formen, Muster, Linien, Kurven, und Punkte), deren
	Attribute (Farbe, Strichstärke), und die Art, diese zu manipulieren (Skalieren, Verzerren, Rotieren,
	Verschieben). Wegen der offenen Spezifikation kann jeder mit entsprechenden Fähigkeiten damit beginnen,
	seine eigene Implementation eines PostScript-Interpreters zu schreiben, und diesen zu verwenden, um
	PostScript-Dateien auf dem Schirm oder auf Papier darzustellen. Die meisten grafischen Ausgabegeräte
	basieren auf dem Konzept von <quote>Raster-Bildern</quote> oder <quote>Pixeln</quote> (eine zu erwähnende
	Ausnahme bilden Stift-Plotter). Natürlich können Sie eine PostScript-Datei in seiner Text-Form betrachten
	und ihren PostScript-Code lesen, die Sprach-Befehle, die von einem Rasterizer interpretiert werden
	müssen. Rasterizer erzeugen Pixel-Bilder, welche von einem Viewer auf dem Schirm dargestellt werden
	können, oder von einem Drucker auf dem Papier.
	</para>
	</formalpara>
	</sect2>

	<sect2 id="post-and-ghost">
	<title>PostScript und Ghostscript</title>

	<para>
	<indexterm><primary>PostScript</primary></indexterm>
	<indexterm><primary>GhostScript</primary><seealso>PostScript</seealso></indexterm>
	<indexterm><primary>PostScript</primary><secondary>RIP</secondary></indexterm>
	Also fehlt UNIX eine gemeinsame Basis für Druck und Bildschirmdarstellung. Trotz diesem ungünstigen
	Erbe, ist grundsätzlich Drucken ziemlich einfach, wenn Sie PostScript-Drucker zur Verfügung haben.
	Der Grund dafür ist, daß diese Drucker einen eingebauten PostScript-<quote>Interpreter</quote>
	besitzen, auch genannt, einen Raster Image Processor (RIP) (der sie auch teurer als andere Drucker sein
	läßt); wenn Sie diesen Druckern PostScript schicken, werden diese sie auch drucken. Ihr RIP macht all
	die harte Arbeit des Umwandelns von PostScript-Zeichenbefehlen in ein Bitmap-Bild, wie Sie es auf
	Papier sehen, in einer Auflösung, wie Sie von Ihrem Drucker unterstützt wird. Dies entspricht dem
	PostScript-Druck einer Datei aus Windows.
	</para>

	<note><para>
	<indexterm><primary>PPD</primary></indexterm>
	Traditionelle UNIX-Programme und -Druck-Systeme &smbmdash; bei Verwendung von PostScript &smbmdash;
	sind nicht PPD-fähig. PPDs sind <quote>PostScript Printer Description</quote>-Dateien. Sie ermöglichen
	es Ihnen, alle Optionen, die ein Drucker kennt, anzugeben und zu kontrollieren: Duplexdruck, Stapeln
	und Lochen. Daher konnten UNIX-Anwender lange Zeit viele der unterstützten Geräte- und Auftrags-Optionen
	nicht nutzen, im Unterschied zu Windows- und Apple-Anwendern. Aber jetzt gibt es CUPS.
	</para>
	</note>

	<para>
	<image><imagedescription>Drucken auf einen PostScript-Drucker.</imagedescription>
			<imagefile>2small</imagefile></image>
	</para>


	<para>
	<indexterm><primary>PDL</primary></indexterm>
	Jedoch gibt es auch andere Drucker-Typen da draussen. Diese Typen wissen nicht, wie man PostScript
	druckt. Sie verwenden ihre eigene Page Description Language (PDL, oft proprietär). Das Drucken auf
	diesen Geräten stellt höhere Anforderungen. Da Ihre UNIX-Anwendungen meistens PostScript erzeugen,
	und da diese Geräte kein PostScript verstehen, müssen Sie die Druckdateien auf dem host in ein
	für Ihren Drucker passendes Format konvertieren, bevor Sie diese an den Drucker senden können.
	</para>
	</sect2>

	<sect2>
	<title>Ghostscript &smbmdash; der Software RIP für Nicht-PostScript-fähige Drucker</title>


	<para>
	<indexterm><primary>GhostScript</primary></indexterm>
	Hier betritt Ghostscript das Geschehen. Ghostscript ist der traditionelle (und ziemlich mächtige)
	PostScript-Interpreter, der auf UNIX-Plattformen verwendet wird. Es ist ein RIP als Software, imstande,
	<emphasis>viele</emphasis> Datei-Konvertierungen für ein sehr grosses Spektrum von Hardware-Geräten bzw.
	Software-Dateiformaten durchzuführen. Ghostscript-Technologie und -Treiber ermöglichen PostScript-Druck
	auf Nicht-PostScript-fähige Hardware.
	</para>

	<para>
	<image><imagedescription>Ghostscript als RIP für Nicht-PostScript-fähige Drucker.</imagedescription>
		<imagefile>3small</imagefile>
	</image>
	</para>

	<tip><para>
	Verwenden Sie den Befehl <quote>gs -h</quote>, um alle eingebauten <quote>devices</quote> Ihrer
	Ghostscript-Version anzusehen. Wenn Sie den Parameter <parameter>-sDEVICE=png256</parameter> auf
	Ihrer Ghostscript-Befehlszeile angeben, teilen Sie Ghostscript mit, den Input in eine PNG-Datei
	zu konvertieren. Ein <quote>device</quote> auf der Befehlszeile anzugeben, ist der wichtigste
	Parameter, um Ghostscript exakt mitzuteilen, wie es den Input darstellen soll. Neue Versionen von
	Ghostscript werden in ziemlich regelmässigen Intervallen veröffentlicht, mittlerweile von
	artofcode LLC. Diese Versionen werden ursprünglich unter die Lizenz <quote>AFPL</quote> gestellt,
	aber dann unter der GNU GPL wiederveröffentlicht, sobald die nächste AFPL-Version erscheint.
	GNU Ghostscript ist wahrscheinlich die auf den meisten Samba-Systemen installierte Version. Aber
	es hat einige Mängel.
	<indexterm><primary>Ghostscript</primary><secondary>ESP</secondary><see>ESP GhostScript</see></indexterm>
	Daher wurde ESP Ghostscript als eine Erweiterung zu GNU Ghostscript entwickelt, mit vielen Bug-fixes,
	zusätzlichen Geräten und Erweiterungen. Es wird gemeinsam von Entwicklern von CUPS, Gimp-Print,
	MandrakeSoft, SuSE, Red Hat, und Debian verwaltet und entwickelt. Es beinhaltet das Gerät
	<quote>cups</quote> (essentiell wichtig, um von CUPS aus auf Nicht-PS-Drucker zu drucken).
	</para></tip>
	</sect2>

	<sect2>
	<title>Spezifikation der PostScript Printer Description (PPD)</title>


	<para>
	<indexterm><primary>PPD</primary></indexterm>
	Während PostScript im Kern eine Seiten-Beschreibungs-Sprache (PDL) ist, um das Layout einer Seite auf
	eine geräte-unabhängige Art darzustellen, werden in der Praxis Druckaufträge schlußendlich immer von
	Hardware mit geräteabhängigen Eigenschaften ausgegeben. Um all die Unterschiede in der Hardware zu
	berücksichtigen und Innovation zu ermöglichen, hat Adobe eine Syntax und ein Dateiformat für
	PostScript Printer Description (PPD) Dateien bestimmt. Jeder PostScript-Drucker wird mit einer dieser
	Dateien geliefert.
	</para>

	<para>
	PPDs enthalten all die Informationen über generelle und spezifische Eigenschaften des jeweiligen
	Drucker-Modells: Welche verschiedenen Auflösungen kann es verarbeiten? Hat es eine Duplex-Einheit?
	Wieviele Papierschächte gibt es? Welche Arten von Medien und deren Formate kann es verarbeiten? Für
	jeden Punkt benennen PPDs auch die spezielle Befehlsfolge, die man zu dessen Aktivierung an den
	Drucker (meist innerhalb der PostScript-Datei) senden muß.
	</para>

	<para>
	Die Information in diesen PPDs ist dafür bestimmt, von den Druckertreibern berücksichtigt zu werden.
	Daher wird als Teil des für einen bestimmten Drucker installierten Windows PostScript Treibers die
	PPD des Druckers installiert. Wo es Sinn macht, werden die PPD-Features in den UI-Dialogen des Treibers
	dargestellt, um dem Benutzer eine Auswahl von Druck-Optionen zu geben. Schlußendlich wird die Auswahl des
	Benutzers in die vom Drucker erstellte PostScript-Datei geschrieben (in der Form spezieller PostScript,
	PJL, JCL oder hersteller-spezifischer Befehle).
	</para>

	<warning><para>
	<indexterm><primary>PDF</primary></indexterm>
	Eine PostScript-Datei, die angelegt wurde, um geräte-spezifische Befehle zum Erreichen einer bestimmten
	Druckausgabe (z.B. Duplexdruck, Stapeldruck oder Faltungen) auf einem bestimmten Ausgabegerät zu
	enthalten, kann möglicherweise nicht so drucken, wie erwartet, oder auf anderen Druckermodellen gar
	nicht zu drucken sein; es kann auch sein, daß diese Datei nicht mehr für weitere Verarbeitung durch
	Software geeignet ist (z.B. durch ein PDF-distilling Programm).
	</para></warning>
	</sect2>

	<sect2>
	<title>Verwendung von Windows-formatierten Hersteller-PPDs</title>

	<para>
	CUPS kann mit allen spezifikations-gemässen PPDs ungehen, wie sie von Herstellern für ihre
	PostScript-Modelle bereitgestellt werden. Sogar wenn ein Hersteller unser Lieblings-Betriebssystem
	nicht in seinen Handbüchern und Broschüren erwähnt hat, können Sie sich sicher darauf verlassen:
	<emphasis>Wenn Sie die Windows NT Version der PPD erhalten, können Sie diese unverändert mit CUPS
	verwenden</emphasis> und daher die volle Leistungsfähigkeit Ihres Druckers nutzen, genauso wie ein
	Windows NT Benutzer es könnte!
	</para>

	<tip><para>
	Um die Spezifikations-Entsprechung einer beliebigen PPD online zu prüfen, gehen Sie auf
	<ulink noescape="1" url="http://www.cups.org/testppd.php">http://www.cups.org/testppd.php</ulink>
	und laden Sie Ihre PPD. Sie sehen das Ergebnis sofort. CUPS hat seit der Version 1.1.19 ein weitaus
	strikteres internes PPD-Parsing und eine Code-Prüfung aktiviert; im Fall von Druckerproblemen sollte
	diese Online-Ressource einer Ihrer ersten Anlaufstellen sein.
	</para></tip>

	<warning><para>
	<indexterm><primary>foomatic</primary></indexterm>
	<indexterm><primary>cupsomatic</primary></indexterm>
	Für tatsächliche PostScript-Drucker verwenden Sie <emphasis>nicht</emphasis> die
	<emphasis>Foomatic</emphasis> oder <emphasis>cupsomatic</emphasis> PPDs von Linuxprinting.org. Mit diesen
	Geräten sind immer die vom Hersteller bereitgestellten PPDs erste Wahl!
	</para></warning>

	<tip><para>
	Wenn Sie nach einem Original-Hersteller-PPD eines spezifischen Geräts suchen, und Sie wissen, daß eine
	NT4-Box (oder irgendeine andere Windows-Box) in Ihrem LAN den PostScript-Treiber installiert hat,
	verwenden Sie einfach <command>smbclient //NT4-box/print\$ -U username</command>, um auf das
	Windows-Verzeichnis zuzugreifen, in dem alle Druckertreiber-Dateien gespeichert sind. Durchsuchen Sie
	zuerst das Unterverzeichnis <filename>W32X86/2</filename> nach den gesuchten PPDs.
	</para></tip>
	</sect2>

	<sect2>
	<title>CUPS verwendet auch PPDs für Nicht-PostScript-Drucker</title>

	<para>
	CUPS verwendet auch spezielle PPDs, um mit Nicht-PostScript-Druckern umzugehen. Diese PPDs sind
	üblicherweise nicht von den Herstellern verfügbar (und, nein, Sie können nicht einfach das die PPD
	eines PostScript-Druckers mit demselben Modellnamen verwenden und hoffen, daß diese auch mit der
	Nicht-PostScript-Version funktioniert). Um zu verstehen, wie diese PPDs funktionieren, müssen wir
	zuerst tief in die Architektur der CUPS-Filter und -Dateiwandlung eintauchen. Bleiben Sie dran.
	</para>
	</sect2>
</sect1>

<title>Die CUPS Filter-Architektur</title>

<para>
Der Kern des CUPS-Filter-Systems beruht auf Ghostscript. Zusätzlich dazu verwendet CUPS einige andere eigene
Filter. Sie (oder der Hersteller Ihres Betriebssystems) können sogar noch mehr Filter hinzugefügt haben.
CUPS behandelt alle Dateiformate unter der Zuordnung verschiedener MIME-Typen. Jede einlangende Druckdatei
wird einem initialen Auto-Typing zugeführt. Dieses Auto-Typing bestimmt den MIME-Typ der Druckdatei. Ein
bestimmter MIME-Typ bedingt null keine oder mehrere mögliche Filter-Ketten, die für den gewählten Zieldrucker
relevant sind. Dieser Abschnitt behandelt, wie die Erkennungs- und Umwandlungs-Regeln von MIME-Typen
zusammenarbeiten. Sie werden von CUPS dazu verwendet, um automatisch eine funktionierende Filterkette für
jedes beliebige Eingabe-Datenformat zu bilden.
</para>

<para>
Wenn CUPS eine PostScript-Datei in ein Bitmap rastert, passiert dies in 2 Stufen:
</para>

<itemizedlist>
	<listitem><para>Die erste Stufe verwendet ein Ghostscript-device namens <quote>cups</quote>
	(dies seit Version 1.1.15), und erzeugt ein generisches Raster-Format namens
	<quote>CUPS raster</quote>.
</para></listitem>

<listitem><para>Die zweite Stufe verwendet einen <quote>raster driver</quote>, der das generische
	<quote>CUPS raster</quote> in ein geräte-spezifisches Raster konvertiert.</para></listitem>
</itemizedlist>

<para>
Stellen Sie sicher, daß Ihre Ghostscript-Version das Gerät <quote>cups</quote> einkompiliert hat
(Überprüfung mittels <command>gs -h | grep cups</command>). Ansonsten könnten Sie das gefürchtete
<computeroutput>Unable to convert file 0</computeroutput> in Ihrer CUPS error_log Datei vorfinden. Um
<quote>cups</quote> als GErät in Ihrem Ghostscript zu haben, müssen Sie entweder GNU Ghostscript patchen und
neu kompilieren, oder Sie verwenden
<indexterm><primary>ESP</primary><secondary>Ghostscript</secondary>
</indexterm><ulink
url="http://www.cups.org/ghostscript.php">ESP Ghostscript</ulink>.
Die bessere Alternative ist ESP Ghostscript. Es unterstützt nicht nur CUPS, sondern auch 300 andere Geräte
(während GNU Ghostscript nur ungefähr 180 Geräte unterstützt). Wegen dieser breiten Unterstützung von
Ausgabegeräten ist ESP Ghostscript auch die erste Wahl für nicht-CUPS-Spooler. Es wird mittlerweile von
Linuxprinting.org für alle Spooler empfohlen.
</para>

<para>
<indexterm><primary>cupsomatic</primary></indexterm>
<indexterm><primary>foomatic</primary></indexterm>
CUPS-Drucker können zur Verwendung externer Darstellungs-Pfade. Einer der gängigsten ist das
Konzept Foomatic/cupsomatic von <ulink url="http://www.linuxprinting.org/">Linuxprinting.org.</ulink>
Dieses verwendet den klassischen Ghostscript-Ansatz, alles auf einmal zu tun. Es verwendet nicht das Gerät
<quote>cups</quote>, sondern eines der vielen anderen.
<indexterm><primary>ESP</primary><secondary>Ghostscript</secondary></indexterm>
Jedoch erzielt man auch bei Verwendung von
Foomatic/cupsomatic das beste Ergebnis und die breiteste Drucker-Modell-Unterstützung mit ESP Ghostscript
(mehr zu cupsomatic/Foomatic, im Speziellen zur neuen Version, die jetzt <emphasis>foomatic-rip</emphasis>
heißt, weiter unten).
</para>

<sect2>
<title>MIME-Typen und CUPS-Filter</title>


<para>
<indexterm><primary>MIME</primary><secondary>Filter</secondary></indexterm>
	<indexterm><primary>MIME</primary></indexterm>
CUPS liest die Datei <filename>/etc/cups/mime.types</filename> (und alle anderen Dateien mit einem Suffix
<filename>*.types</filename> im selben Verzeichnis) beim Start. Diese Dateien enthalten die
MIME-Typ-Erkennungs-Regeln, die angewendet werden, wenn CUPS seine Auto-Typing-Routinen ausführt.
Die Regel-Syntax wird in der manpage von <filename>mime.types</filename> erklärt und in dem
Abschnitt "comments" in der Datei <filename>mime.types</filename> selbst. Eine einfache Regel sieht so aus:

<indexterm><primary>application/pdf</primary></indexterm>
<filterline>
 application/pdf         pdf string(0,%PDF)
</filterline>

Das bedeutet, daß wenn ein Dateiname den Suffix <filename>.pdf</filename> hat oder der magische String
<emphasis>%PDF</emphasis> exakt am Beginn der Datei selbst (Offset 0 vom Start) steht, ist dies eine
PDF-Datei ((<parameter>application/pdf</parameter>). Eine weitere Regel ist:

<filterline>
 application/postscript  ai eps ps string(0,%!) string(0,&lt;04&gt;%!)
</filterline>

Wenn der Dateiname einen der Suffixes <filename>.ai</filename>, <filename>.eps</filename>,
<filename>.ps</filename> hat, oder die Datei selbst mit einem der Strings
<emphasis>%!</emphasis> oder <emphasis><![CDATA[<04>%!]]></emphasis> beginnt, ist es eine generische
PostScript-Datei (<parameter>application/postscript</parameter>).
</para>

<warning><para>
Verwechseln Sie nicht die anderen mime.types Dateien, die Ihr System verwendet, mit denen im Verzeichnis
<filename>/etc/cups/</filename>.
</para></warning>

<note><para>
Es gibt einen wichtigen Unterschied zwischen zwei ähnlichen MIME-Typen in CUPS: einer ist
<parameter>application/postscript</parameter>, der andere ist
<parameter>application/vnd.cups-postscript</parameter>. Während <parameter>application/postscript</parameter>
geräte-unabhängig sein soll (Auftrags-Optionen sind immer noch außerhalb des PS-Datei-Inhalts,
von CUPS eingebettet in der Befehlszeile oder Umgebungsvariablen), kann
<parameter>application/vnd.cups-postscript</parameter> die Auftrags-Optionen in die Postscript-Daten selbst
eingefügt erhalten (wo anwendbar). Die Transformation des generischen PostScript-Formats
(<parameter>application/postscript</parameter>) zu geräte-spezifischem PostScript
(<parameter>application/vnd.cups-postscript</parameter>) ist die Aufgabe des CUPS-Filters
<parameter>pstops</parameter>. pstops verwendet Informationen aus dem PPD, um die Transformation durchzuführen.
</para></note>

<para>
CUPS kann mit seinen Filtern folgende Formate und ihre zugehörigen MIME-Typen handhaben:
ASCII text, HP-GL, PDF, PostScript, DVI, und viele Bild-Formate (GIF. PNG, TIFF, JPEG, Photo-CD, SUN-Raster,
PNM, PBM, SGI-RGB, und noch mehr).
</para>
</sect2>

<sect2>
<title>MIME Typ Umwandlungs-Regeln</title>


<para>
<indexterm><primary>MIME</primary></indexterm>
<indexterm><primary>application/pdf</primary></indexterm>
CUPS liest die Datei <filename>/etc/cups/mime.convs</filename> (und alle anderen Dateien mit der Endung
<filename>*.convs</filename> im selben Verzeichnis) beim Starten. Diese Dateien enthalten Zeilen, diese
benennen einen Eingabe-MIME-Typus, einen Ausgabe-MIME-Typus, einen Format-Wandlungs-Filter, der den
Ausgabe-Typus aus dem Eingabe-Typus erzeugen kann, sowie virtuelle Kosten, die mit dieser Wandlung verbunden
sind. Ein Beispiel für eine solche Zeile ist dies:

<filterline>
 application/pdf         application/postscript   33   pdftops
</filterline>

Das bedeutet, daß der Filter <parameter>pdftops</parameter> den Typ <parameter>application/pdf</parameter> als
Eingabe verwenden und daraus <parameter>application/postscript</parameter> als Ausgabe erzeugen wird; die
virtuellen Kosten dieser Operation sind 33 CUPS-$. Der nächste Filter ist teurer, er kostet 66 CUPS-$:

<indexterm><primary>pdf</primary></indexterm>

<filterline>
 application/vnd.hp-HPGL application/postscript   66   hpgltops
</filterline>

Dies ist der Filter <parameter>hpgltops</parameter>, der HP-GL Plotter-Dateien in PostScript umwandelt.

<indexterm><primary>application/octet-stream</primary></indexterm>

<filterline>
 application/octet-stream
</filterline>

Hier zwei weitere Beispiele:

<indexterm><primary>text/plain</primary></indexterm>

<filterline>
 application/x-shell     application/postscript   33    texttops
 text/plain              application/postscript   33    texttops
</filterline>

Die letzten beiden Beispiele lassen den Filter <parameter>texttops</parameter> sowohl an
<parameter>text/plain</parameter>, wie auch an <parameter>application/x-shell</parameter> arbeiten.
(Hinweis: Diese Unterscheidung wird für das Syntax-Highlighting von <parameter>texttops</parameter>
benötigt).
</para>
</sect2>

<sect2>
<title>Überblick über das Filtern</title>


<para>
<indexterm><primary>MIME</primary></indexterm>
Es gibt viel mehr Kombinationen in <filename>mime.convs</filename>. Sie sind jedoch nicht darauf beschränkt,
die hier vordefinierten Kombinationen zu verwenden. Sie können jeden Filter, den Sie wollen, in das
CUPS-Grundgerüst einsetzen. Es muß einigen minimalen Anforderungen entsprechen, oder dazu gebracht werden.
Wenn Sie irgend einen coolen Filter finden (oder schreiben), stellen Sie sicher, daß er dem entspricht, was CUPS
braucht, und daß Sie die richtigen Zeilen in die Dateien <filename>mime.types</filename> und
<filename>mime.convs</filename> einfügen, dann wird er nahtlos innerhalb CUPS arbeiten.
</para>

<sect3>
<title>Filter Anforderungen</title>
<para>
Die erwähnten <quote>CUPS Anforderungen</quote> für Filter sind simpel. Nehmen Sie Dateinamen oder
<filename>stdin</filename> als Input und schreiben Sie diesen auf <filename>stdout</filename>. Die Filter
sollten diese 5-6 Argumente verstehen:
<emphasis>printer job user title copies options [filename]</emphasis>
</para>

<variablelist>
<varlistentry><term>printer </term>
<listitem><para>
Der Name der Drucker-Queue (normalerweise ist dies der Name des ausgeführten Filters).</para></listitem>
</varlistentry>

<varlistentry><term>job </term>
<listitem><para>Die numerische Auftrags-ID des gerade gedruckten Auftrags.</para></listitem>
</varlistentry>

<varlistentry><term>user </term>
<listitem><para>Der String aus dem Attribut originating-user-name.</para></listitem>
</varlistentry>

<varlistentry><term>title </term>
<listitem><para>Der String aus dem Attribut job-name.</para></listitem>
</varlistentry>

<varlistentry><term>copies </term>
<listitem><para>Der numerische Wert des Attributs number-copies.</para></listitem>
</varlistentry>

<varlistentry><term>options </term>
<listitem><para>Die Auftrags-Optionen.</para></listitem>
</varlistentry>

<varlistentry><term>filename </term>
<listitem><para>(Optional) Die Datei der Druckanfrage (wenn dies fehlt, erwarten die Filter, die Daten
über <filename>stdin</filename> geliefert zu bekommen).
In den meisten Fällen ist es einfach, ein einfaches Wrapper-Skript um Filter zu schreiben, um sie mit
CUPS arbeiten zu lassen.</para></listitem>
</varlistentry>
</variablelist>
</sect3>
</sect2>

<sect2>
<title>Vorfilter ("Prefilters")</title>


<para>
<indexterm><primary>PostScript</primary></indexterm>
Wie zuvor bemerkt, ist PostScript das zentrale Dateiformat für jedes UNIX-basierende Drucksystem. Von
PostScript aus generiert CUPS Rasterdaten zur Lieferung an Nicht-PostScript-Drucker.
</para>

<para>
Aber was passiert, wenn Sie eines der unterstützten Nicht-PS-Formate in den Druck schicken? Dann verwendet
CUPS <quote>pre-filters</quote> auf diese Eingabeformate, um als erstes PostScript zu erzeugen. Es gibt solche
Vorfilter, um PS aus ASCII text, PDF, DVI, oder HP-GL zu erzeugen. Die Ausgabe dieser Filter ist immer vom
MIME Typ <parameter>application/postscript</parameter> (das bedeutet, daß jegliche geräte-spezifische
Druckoptionen noch nicht von CUPS ins PS eingebettet werden, und daß der nächste aufzurufende Filter
pstops ist). Ein weiterer Vorfilter läuft über alle unterstützten Bildformate, der Filter
<parameter>imagetops</parameter>. Seine Ausgabe ist immer vom MIME Typ
<parameter>application/vnd.cups-postscript</parameter> (nicht application/postscript), was bedeutet, daß sie
die Druckoptionen bereits in der Datei eingebettet hat.
</para>

<para>
	<image scale="25"><imagedescription>Das Vorfiltern in CUPS, um PostScript zu erzeugen.</imagedescription>
	<imagefile>4small</imagefile>
</image>
</para>
</sect2>

<sect2>
<title>pstops</title>

<para>
<emphasis>pstops</emphasis> ist der Filter, um
<parameter>application/postscript</parameter> auf <?latex \linebreak ?>
<parameter>application/vnd.cups-postscript</parameter> zu wandeln. Es wurde bereits oben erwähnt, daß dieser
Filter alle geräte-spezifischen Druckoptionen (Befehle an den Drucker, um Duplexdruck, Stapeln und Lochen zu
veranlassen, usw.) in die PostScript-Datei einbindet.
</para>

<para>
	<image scale="25"><imagedescription>Das Hinzufügen von geräte-spezifischen Druckoptionen.</imagedescription>
		<imagefile>5small</imagefile>
	</image>
</para>

<para>
Das ist nicht alles. Andere ausgeführte Aufgaben sind:
</para>

<itemizedlist>
<listitem><para>
Die Auswahl der zu druckenden Seiten (wenn Sie nur die Seiten <quote>3, 6, 8-11, 16, 19-21</quote> drucken
wollen, oder nur die ungeraden Seiten).
</para></listitem>

<listitem><para>
Zwei oder mehr logische Seiten auf ein Blatt Papier drucken (die sogenannte <quote>number-up</quote> Funktion).
</para></listitem>

<listitem><para>
Das Zählen der Seiten des Auftrags, um die Abrechnungs-Information in die Datei
<filename>/var/log/cups/page_log</filename> zu schreiben.
</para></listitem>
</itemizedlist>
</sect2>

<sect2>
<title>pstoraster</title>

<para>
<parameter>pstoraster</parameter> ist im Kern des CUPS-Filtersystems. Er ist verantwortlich für die erste Stufe
des Raster-Prozesses. Sein Input ist vom MIME-Typ application/vnd.cups-postscript; seine Ausgabe ist
application/vnd.cups-raster. Dieses Ausgabeformat ist noch nicht zum Drucken gedacht, die Aufgabe ist, als
allgemeines Input-Format für spezialisierte <emphasis>Raster-Treiber</emphasis> gedacht, die imstande sind,
geräte-spezifische Druckerdaten zu generieren.
</para>

<para>
	<image scale="25"><imagedescription>PostScript auf Übergangs-Raster-Format.</imagedescription><imagefile>6small</imagefile></image>
</para>

<para>
CUPS-Raster ist ein generisches Rasterformat mit mächtigen Eigenschaften. Es ist imstande, Informationen zu
einzelnen Seiten, Farbprofile, und mehr zu inkludieren, um diese Informationen nachfolgenden Raster-Treibern
zu übergeben. Sein MIME-Typ ist bei IANA registriert und seine Spezifikation ist, natürlich, völlig offen.
Es ist entworfen, um es Herstellern zu ermöglichen, ziemlich einfach und günstig Raster-Treiber für Linux
und UNIX zu entwickeln, wenn diese es möchten. CUPS übernimmt immer die erste Stufe des Rasterns, so daß
Hersteller sich nicht um die Ghostscript-Komplikationen kümmern müssen (tatsächlich gibt es derzeit mehr als
nur einen Hersteller, der die Entwicklung von CUPS-Raster-Treibern finanziert).
</para>

<para>
	<image><imagedescription>CUPS-Raster Erzeugung mittels Ghostscript.</imagedescription>
		<imagefile>7small</imagefile>
	</image>
</para>

<para>
CUPS-Versionen vor Version 1.1.15 beinhalteten einen binären (oder source code) Standalone-Filter namens
<parameter>pstoraster</parameter>. <parameter>pstoraster</parameter> wurde von GNU Ghostscript 5.50
abgeleitet, und konnte neben oder zusätzlich zu einem beliebigen GNU oder AFPL Ghostscript-Paket
installiert werden, ohne Konflikte zu verursachen.
</para>

<para>
Mit Version 1.1.15 hat sich dies geändert. Die dafür benötigten Funktionen wurden zurück in Ghostscript
integriert (nun basierend auf GNU Ghostscript Version 7.05). Der <parameter>pstoraster</parameter>-Filter
ist nun ein einfaches Shell-Skript, das <command>gs</command> mit dem Parameter <command>-sDEVICE=cups</command>
aufruft. Wenn Ihr Ghostscript nicht erfolgreich auf <command>gs -h |grep cups</command> antwortet, könnte es
sein, daß Sie nicht drucken können. Aktualisieren Sie Ihr Ghostscript.
</para>
</sect2>

<sect2>
<title>imagetops und imagetoraster</title>

<para>
Im Abschnitt über Vorfilter haben wir den Vorfilter erwähnt, der PostScript aus Bildformaten erzeugt. Der
Filter <parameter>imagetoraster</parameter> wird verwendet, um Bilder direkt auf Raster zu konvertieren, ohne
die Zwischenstufe PostScript. Er wird öfter als die oben erwähnten Vorfilter verwendet. Wir fassen das
Filtern von Bilddateien im <link linkend="small8">nächsten Bild</link> zusammen.
</para>

<para>
	<image id="small8"><imagedescription>Konvertierung von Bildformaten zu CUPS-Raster-Format.</imagedescription>
		<imagefile>8small</imagefile>
	</image>
</para>

</sect2>

<sect2>
<title>rasterto [druckerspezifisch]</title>

<para>
CUPS wird mit ziemlich verschiedenen Rastertreibern geliefert, die CUPS-Raster verarbeiten. Auf meinem System
finde ich in /usr/lib/cups/filter/ diese:
<parameter>rastertoalps</parameter>, <parameter>rastertobj</parameter>, <parameter>rastertoepson</parameter>, <parameter>rastertoescp</parameter>,
<parameter>rastertopcl</parameter>, <parameter>rastertoturboprint</parameter>, <parameter>rastertoapdk</parameter>, <parameter>rastertodymo</parameter>,
<parameter>rastertoescp</parameter>, <parameter>rastertohp</parameter>, und
<parameter>rastertoprinter</parameter>.
Keine Sorge, wenn Sie weniger Filter vorfinden; manche von diesen wurden von kommerziellen CUPS-Erweiterungen
installiert (wie <parameter>rastertoturboprint</parameter>), andere (wie <parameter>rastertoprinter</parameter>)
von sogenannten "third-party" Treiber-Entwicklungs-Projekten (wie Gimp-Print), um möglichst eng mit CUPS
zusammen zu arbeiten.
</para>

<para>
	<image id="small9"><imagedescription>Raster auf druckerspezifische Formate.</imagedescription>
		<imagefile>9small</imagefile>
	</image>
</para>
</sect2>

<sect2>
<title>CUPS Backends</title>

<para>
Der letzte Teil jeder CUPS-Filterkette ist ein Backend. Backends sind spezielle Programme, die das druckfertige
Programm schlußendlich an das Gerät senden. Es gibt ein separates Backend-Programm für jedes Transfer-Protokoll,
um Druckaufträge über das Netzwerk zu senden, oder für jedes lokales Interface. Jede CUPS-Druckwarteschlange
braucht eine CUPS <quote>device-URI</quote>, mit dem es assoziiert wird. Die device URI ist eine Art, das
Backend enkodiert anzugeben, das verwendet wird, um den Auftrag an seinen Bestimmungsort zu senden.
Netzwerk device-URIs verwenden zwei Schrägstriche in ihrer Syntax, lokale device-URIs nur einen, wie Sie der
folgenden Liste entnehmen können. Bitte denken Sie daran, daß die Namen der lokalen Interfaces stark von
den hier angegebenen Beispielen abweichen können, wenn Ihr Betriebssystem nicht Linux ist:
</para>

<variablelist>
	<varlistentry><term>usb </term>
	<listitem><para>
	Dieses Backend sendet Druckdateien auf mittels USB angeschlossene Drucker. Ein Beispiel für die
	CUPS device-URI ist:
	<filename>usb:/dev/usb/lp0</filename>.
	</para></listitem></varlistentry>

	<varlistentry><term>serial </term>
	<listitem><para>
	Dieses Backend sendet Druckdateien auf seriell angeschlossene Drucker. Ein Beispiel für die
        CUPS device-URI ist:
	<filename>serial:/dev/ttyS0?baud=11500</filename>.
	</para></listitem></varlistentry>

	<varlistentry><term>parallel </term>
	<listitem><para>
	Dieses Backend sendet Druckdateien auf an Parallel-Ports angeschlossene Drucker. Ein Beispiel für die
        CUPS device-URI ist:
	<filename>parallel:/dev/lp0</filename>.
	</para></listitem></varlistentry>

	<varlistentry><term>SCSI </term>
	<listitem><para>
	Dieses Backend sendet Druckdateien auf an das SCSI-Interface angeschlossene Drucker. Ein Beispiel für die
        CUPS device-URI ist:
	<filename>scsi:/dev/sr1</filename>.
	</para></listitem></varlistentry>

	<varlistentry><term>lpd </term>
	<listitem><para>
	Dieses Backend sendet Druckdateien auf über LPR/LPD angeschlossene Netzwerk-Drucker. Ein Beispiel für die
        CUPS device-URI ist:
	<filename>lpd://remote_host_name/remote_queue_name</filename>.
	</para></listitem></varlistentry>

	<varlistentry><term>AppSocket/HP JetDirect </term>
	<listitem><para>
	Dieses Backend sendet Druckdateien an mittels AppSocket (a.k.a. "HP JetDirect") angeschlossene
	Netzwerk-Drucker. Ein Beispiel für die
        CUPS device-URI ist:
	<filename>socket://10.11.12.13:9100</filename>.
	</para></listitem></varlistentry>

	<varlistentry><term>ipp </term>
	<listitem><para>
	Dieses Backend sendet Druckdateien an mittels IPP angeschlossene Netzwerk-Drucker. Ein Beispiel für die
        CUPS device-URI ist:
	<filename>ipp:://192.193.194.195/ipp</filename>
	(für viele HP-Drucker) oder
	<filename>ipp://remote_cups_server/printers/remote_printer_name</filename>.
	</para></listitem></varlistentry>

	<varlistentry><term>http </term>
	<listitem><para>
	Dieses Backend sendet Druckdateien an mittels HTTP angeschlossene Drucker.
	(Das http:// CUPS-Backend ist nur ein symlink auf das ipp:// Backend.)
	Beispiele für die CUPS device-URIs sind:
	<filename>http:://192.193.194.195:631/ipp</filename>
	(für viele HP-Drucker) oder
	<filename>http://remote_cups_server:631/printers/remote_printer_name</filename>.
	</para></listitem></varlistentry>

	<varlistentry><term>smb </term>
	<listitem><para>
	Dieses Backend sendet Druckdateien an Windows-Druckerfreigaben.
	Ein Beispiel für die CUPS device-URI ist:
	</para>

	<para>
	<simplelist>
	<member><filename>smb://workgroup/server/printersharename</filename></member>
	<member><filename>smb://server/printersharename</filename></member>
	<member><filename>smb://username:password@workgroup/server/printersharename</filename></member>
	<member><filename>smb://username:password@server/printersharename</filename></member>
	</simplelist>
	</para>

	<para>
	Das smb:// Backend ist ein Symlink auf das Samba-Werkzeug <parameter>smbspool</parameter> (nicht in
	CUPS inkludiert). Wenn der Symlink in Ihrem CUPS-Backend-Verzeichnis nicht vorhanden ist, können Sie
	es mittels root-Benutzer anlegen (lassen): <command>ln -s `which smbspool'
        /usr/lib/cups/backend/smb</command>.
	</para></listitem></varlistentry>
</variablelist>

<para>
Es ist einfach, Ihre eigenen Backends als Shell- oder Perl-Skripts zu schreiben, wenn Sie irgendeine Änderung
oder Erweiterung zum CUPS-Druck-System brauchen. Ein Grund könnte sein, daß Sie <quote>spezielle</quote>
Drucker anlegen wollen, die Druckaufträge per email senden (durch das <quote>mailto:/</quote> Backend), diese
in PDF wandeln (durch das <quote>pdfgen:/</quote> Backend), oder sie mittels <quote>/dev/null</quote> entsorgen.
(Tatsächlich habe ich den systemweiten Standard-Drucker so installiert, daß mit einem devnull:/ Backend verbunden
ist; es gibt einfach zu viele Leute, die Aufträge ohne Angabe eines Druckers senden, oder Skripts und Programme,
die keinen Drucker angeben. Der systemweite Standard löscht den Auftrag und sendet eine höfliche Email zurück
an den $USER, in der er gebeten wird, immer den richtigen Druckernamen anzugeben.)
</para>

<para>
Nicht alle erwähnten Backends müssen auf Ihrem System vorhanden oder verwendbar sein (abhängig von der
Hardware-Konfiguration). Ein Test für alle verfügbaren CUPS-Backends ist mit dem Werkzeug
<emphasis>lpinfo</emphasis> möglich. Mit der Option <option>-v</option> listet es alle verfügbaren Backends:
</para>

<para><screen>
&prompt;<userinput>lpinfo -v</userinput>
</screen></para>
</sect2>

<sect2>
<title>Die Rolle von <parameter>cupsomatic/foomatic</parameter></title>

<para>
<indexterm><primary>cupsomatic</primary></indexterm>
<indexterm><primary>foomatic</primary></indexterm>
<parameter>cupsomatic</parameter>-Filter sind wahrscheinlich die meist verwendeten Filter in CUPS-Installationen.
Seien sich im Klaren darüber, daß diese Filter nicht von den CUPS-Leuten entwickelt wurden. Es sind "third party"
Erweiterungen für CUPS. Sie verwenden die traditionellen Ghostscript devices, um Aufträge für CUPS darzustellen.
Bei der Fehlersuche sollten Sie über den Unterschied Bescheid wissen. Hier findet der gesamte Darstellungsprozess
in einem Schritt statt, innerhalb von Ghostscript, unter Verwendung eines passenden device für den Ziel-Drucker.
<parameter>cupsomatic</parameter> verwendet PPDs, die aus der Foomatic Drucker &amp; Treiber Datenbank auf
Linuxprinting.org generiert werden.
</para>

<para>
Sie erkennen diese PPDs an der Zeile, die den <parameter>cupsomatic</parameter> Filter aufruft:

<filterline>
 *cupsFilter: "application/vnd.cups-postscript  0  cupsomatic"
</filterline>

Sie finden diese Zeile unter den ersten 40 (oder ähnlich) Zeilen der PPD-Datei. Wenn Sie ein solches PPD
installiert haben, scheint der Drucker im CUPS Web Interface mit der Erwähnung <parameter>foomatic</parameter>
in der Treiberbeschreibung auf. <parameter>cupsomatic</parameter> ist ein Perl-Skript, das Ghostscript mit all
den komplizierten Befehlszeilen-Optionen aufruft, automatisch generiert aus dem gewählten PPD und den
Befehlszeilen-Optionen, die dem Druckauftrag mitgegeben wurden.
</para>

<para>
<indexterm><primary>point 'n' print</primary></indexterm>
Jedoch ist <parameter>cupsomatic</parameter> mittlerweile veraltet. Seine PPDs (besonders deren erste Generation,
immer noch in regem Gebrauch da draussen) entsprechen nicht den Adobe Spezifikationen. Sie könnten
Schwierigkeiten damit haben, wenn Sie sie mittels <quote>Point'n'Print</quote> auf Windows-Clients downloaden
wollen. Ein besserer und leistungsfähigerer Nachfolge ist nun in einer stabilen Beta-Version verfügbar:
er heisst <parameter>foomatic-rip</parameter>. Um <parameter>foomatic-rip</parameter> als Filter mit CUPS zu
verwenden, brauchen Sie die PPDs von neueren Typ. Diese haben eine ähnliche, jedoch andere Zeile:

<filterline>
 *cupsFilter: "application/vnd.cups-postscript  0  foomatic-rip"
</filterline>

Der Mechanismus auf Linuxprinting.org, der PPDs generiert, wurde umgestaltet. Die neuen PPDs entsprechen den
Adobe Spezifikationen. Zuoberst stellen Sie eine neue Art bereit, um verschiedene Qualitätsstufen anzugeben
(hochauflösende Fotos, normale Farbe, Graustufen und Entwurf), mit einem einzelnen Click, wo Sie zuvor fünf
oder mehr verschiedene Auswahlen treffen mußten (Medientyp, Auflösung, Tintenart und Dithering-Algorithmus).
Es gibt Unterstützung für individuelle Mediengrössen. Es gibt Unterstützung für das Umschalten von Optionen
zwischen einzelnen Seiten eines Druckauftrags. Und das Beste ist, daß der neue foomatic-rip nun nahtlos mit
allen klassischen Spoolern zusammenarbeitet (wie LPRng, BSD-LPD, PDQ, PPR usw.), was diesen Spoolern die
Verwendung von PPDs eröffnet.
</para>
</sect2>

<sect2>
<title>Das gesamte Bild</title>

<para>
Wenn Sie einen Überblick über all die Filter sehen wollen, und wie sie sich zueinander verhalten, finden Sie
das gesamte Bild dieses Puzzles am Ende dieses Dokuments.
</para>
</sect2>

<sect2>
<title><filename>mime.convs</filename></title>

<para>
CUPS bildet automatisch alle möglichen Filterketten für jeden beliebigen MIME-Typ, und jeden installierten
Drucker. Aber wie entscheidet es für oder gegen eine bestimmte Alternative? (Es kann oft Fälle geben, in denen
es zwei oder mehr Filterketten für denselben Ziel-Drucker gibt.) Einfach. Sie haben vielleicht die Zahlen in der
dritten Spalte der Datei mime.convs bemerkt. Diese repräsentieren virtuelle Kosten, die dem jeweiligen Filter
zugeordnet sind. Jede mögliche Filterkette ergibt eine Summe von <quote>Filter-Kosten.</quote>CUPS entscheidet
zugunsten der <quote>günstigsten</quote> Route.
</para>

<tip><para>
Die Einstellung von <parameter>FilterLimit 1000</parameter> in <filename>cupsd.conf</filename> erlaubt es nicht,
mehr Filter gleichzeitig auszuführen, als solche, die insgesamt 1000 virtuelle Filter-Kosten verbrauchen. Dies
ist eine effiziente Art, die Last eines CUPS-Servers zu begrenzen, indem man einen passenden Wert für
<quote>FilterLimit</quote> setzt. Ein FilterLimit von 200 erlaubt nur ungefähr einen Auftrag zur gleichen Zeit,
während ein FilterLimit von 1000 ungefähr 5 Aufträge gleichzeitig erlaubt.
</para></tip>
</sect2>

<sect2>
	<title><quote>Raw</quote> Druck</title>

<para>
Sie können CUPS (so ziemlich) jede Datei <quote>raw</quote> drucken lassen. <quote>Raw</quote> bedeutet, daß sie
nicht gefiltert wird. CUPS sendet die Datei an den Drucker <quote>wie sie ist</quote>, ohne sich darum zu
kümmern, ob der Drucker imstande ist, diese Datei zu <quote>verdauen</quote>. Die Benutzer müssen sich selbst
darum kümmern, daß sie nur sinnvolle Datenformate senden. Raw-Druck kann in jeder Warteschlange passieren, wenn
die Option <quote><parameter>-o raw</parameter></quote> auf der Befehlszeile angegeben wird. Sie können auch
nur-raw-Queues anlegen, indem Sie einfach keinerlei PPD mit einer Queue assoziieren. Dieser Befehl:
</para>

<para><screen>
&prompt;<userinput>lpadmin -P rawprinter -v socket://11.12.13.14:9100 -E</userinput>
</screen></para>

<para>
installiert eine Queue namens <quote>rawprinter</quote>, verbunden mittels dem Protokoll <quote>socket</quote>
(a.k.a. <quote>HP JetDirect</quote>) mit dem Gerät auf IP-Adresse 11.12.1.3.14, Port 9100. (Wenn Sie ein PPD
mit <command>-P /path/to/PPD</command> der Befehlszeile hinzugefügt hätten, hätten Sie eine
<quote>normale</quote> Druck-Queue installiert.)
</para>

<para>
CUPS behandelt automatisch jeden Auftrag, der an eine Queue gesendet wird, als <quote>raw</quote>, wenn es keine
mit der Queue assoziierte PPD vorfindet. Jedoch wird CUPS nur bekannte MIME-Typen senden (wie in seiner eigenen
Datei mime.types definiert) und andere ablehnen.
</para>
</sect2>

<sect2>
<title>application/octet-stream Druck</title>

<para>
Jeder MIME-Typ ohne Regel in der Datei <filename>/etc/cups/mime.types</filename> wird als unbekannt oder als
<parameter>application/octet-stream</parameter> betrachtet und nicht gesendet. Weil CUPS per Standard ablehnt,
unbekannte MIME-Typen zu drucken, haben Sie vielleicht schon einmal erlebt, daß Druckaufträge von Windows-Clients
nicht gedruckt wurden. Sie haben vielleicht eine Fehlermeldung in Ihren CUPS-Logdateien gefunden, die lautet wie:
</para>

<para><computeroutput>
 Unable to convert file 0 to printable format for job
</computeroutput></para>

<para>
Um das Drucken von Dateien des Typs <parameter>application/octet-stream</parameter> zu ermöglichen, müssen Sie
zwei Dateien editieren:
</para>

<itemizedlist>
<listitem><para><filename>/etc/cups/mime.convs</filename></para></listitem>

<listitem><para><filename>/etc/cups/mime.types</filename></para></listitem>
</itemizedlist>

<para>
Both contain entries (at the end of the respective files) which must
be uncommented to allow RAW mode operation for
<parameter>application/octet-stream</parameter>. In <filename>/etc/cups/mime.types</filename>
make sure this line is present:

<indexterm><primary>application/octet-stream</primary></indexterm>

<filterline>
application/octet-stream
</filterline>

This line (with no specific auto-typing rule set) makes all files
not otherwise auto-typed a member of <parameter>application/octet-stream</parameter>. In
<filename>/etc/cups/mime.convs</filename>, have this
line:

<filterline>
application/octet-stream   application/vnd.cups-raw   0   -
</filterline>

<indexterm><primary>MIME</primary></indexterm>

Diese Zeile weist CUPS an, für den MIME-Typen <parameter>application/octet-stream</parameter> den
<emphasis>Null Filter</emphasis> zu verwenden (markiert mit <quote>-</quote>, tut gar nichts), und das Resultat
als <parameter>application/vnd.cups-raw</parameter> zu kennzeichnen. Dies ist immer ein grünes Licht für den
CUPS-Scheduler, um die Datei an das Backend zu übergeben, das sich dann zum Drucker verbindet und die Datei
sendet.
</para>

<note><para>Das Editieren von <filename>mime.convs</filename> und <filename>mime.types</filename>
 <emphasis>erzwingt</emphasis> den <quote>raw</quote>-Druck nicht, es <emphasis>erlaubt</emphasis> ihn nur.
</para></note>

<formalpara>
<title>Hintergrund</title>

<para>
Da CUPS ein mehr sicherheitsbewußtes Drucksystem ist als die traditionellen Systeme, erlaubt es
in der Voreinstellung nicht, daß ein Benutzer beliebige (möglicherweise binäre) Daten an
Druck-Geräte sendet. (Dies könnte leicht dazu benutzt werden, um einen <quote>Denial of Service</quote>-Angriff
auf Ihre(n) Drucker zu starten, was zumindest den Verlust von einer Menge Papier und Tinte nach sich ziehen
würde.)
<quote>Unbekannte</quote> Daten werden von CUPS als <emphasis>MIME-Typ</emphasis>
<emphasis>application/octet-stream</emphasis> behandelt. Während Sie Daten <quote>raw</quote> senden
<emphasis>können</emphasis>, muß der MIME-Typ dafür einer sein, der CUPS bekannt ist, und erlaubt ist. Die Datei
<filename>/etc/cups/mime.types</filename> legt die Regeln fest, wie CUPS MIME-Typen erkennt. Die Datei
<filename>/etc/cups/mime.convs</filename> entscheidet, welche Wandlungs-Filter auf welche MIME-Typen angewandt
werden können.
</para>
</formalpara>
</sect2>

<sect2>
<title>PostScript Printer Descriptions (PPDs) für Nicht-PS-Drucker</title>


<para>
<indexterm><primary>PPD</primary></indexterm>
Ursprünglich waren PPDs nur zur Verwendung mit PostScript-Drucker gedacht. Hier helfen sie dabei,
geräte-spezifische Befehle und Einstellungen an den RIP zu senden, der die Auftragsdatei verarbeitet. CUPS hat
die Reichweite von PPDs erweitert, um auch Nicht-PS-Drucker abzudecken. Dies war nicht schwierig, da es ein
standardisiertes Dateiformat ist. Auf eine gewisse Art war es auch logisch: CUPS verarbeitet PostScript und
verwendet einen PostScript RIP (Ghostscript), um die Auftragsdateien zu verarbeiten. Der einzige Unterschied ist:
Ein PostScript-Drucker hat den RIP eingebaut, für die anderen Arten von Drucker läuft der Ghostscript RIP auf
dem Druck-Server.
</para>

<para>
PPDs für einen Nicht-PS-Drucker beinhalten ein paar Zeilen, die einzigartig für CUPS sind. Die wichtigste sieht
ungefähr so aus:

<indexterm><primary>application/vnd.cups-raster</primary></indexterm>

<filterline>
 *cupsFilter: application/vnd.cups-raster  66   rastertoprinter
</filterline>

Dies ist das letzte Stück im CUPS-Filter-Puzzle. Diese Zeile weist den CUPS-Daemon an, als letzten Filter
<parameter>rastertoprinter</parameter> zu verwenden. Dieser Filter sollte als Input eine Datei vom MIME-Typ
<parameter>application/vnd.cups-raster</parameter> serviert bekommen. Daher sollte CUPS automatisch eine
Filterkette konstruieren, die als letzte Ausgabe den angegebenen MIME-Typ liefert. Diese wird dann als Input
für den erwähnten Filter <parameter>rastertoprinter</parameter> verwendet. Nachdem der letzte Filter seine Arbeit
getan hat (<parameter>rastertoprinter</parameter> ist ein Gimp-Print-Filter), sollte die Datei an das Backend
gesendet werden, welches in weiterer Folge an das Ausgabe-Gerät sendet.
</para>

<para>
CUPS liefert standardmässig nur ein paar generische PPDs, aber diese sind verwendbar für ein paar hundert
Drucker-Modelle. Es kann sein, daß Sie damit nicht verschiedene Papierschächte verwalten könne, oder daß Sie
breitere Druckränder erhalten, als Ihr spezielles Modell unterstützt. Sehen Sie
<link linkend="cups-ppds">Mit CUPS gelieferte PPDs</link> für eine Zusammenfassung.
</para>

<table frame="all" id="cups-ppds">
	<title>Mit CUPS gelieferte PPDs</title>
	<tgroup cols="2" align="left">
		<colspec align="left"/>
		<colspec align="justify" width="1*"/>
		<thead><row><entry>PPD Datei</entry><entry>Drucker-Typ</entry></row></thead>
		<tbody>
		<row><entry>deskjet.ppd</entry><entry>ältere HP Inkjet Drucker und Kompatible</entry></row>

		<row><entry>deskjet2.ppd</entry> <entry>neuere HP Inkjet Drucker und Kompatible</entry> </row>

		<row><entry>dymo.ppd</entry> <entry>Label-Drucker</entry> </row>

		<row><entry>epson9.ppd</entry> <entry>Epson 9pin Nadeldrucker und Kompatible</entry> </row>

		<row><entry>epson24.ppd</entry> <entry>Epson 24pin Nadeldrucker und Kompatible</entry> </row>

		<row><entry>okidata9.ppd</entry> <entry>Okidata 9pin Nadeldrucker und Kompatible</entry> </row>

		<row><entry>okidat24.ppd</entry> <entry>Okidata 24pin Nadeldrucker und Kompatible</entry> </row>

		<row><entry>stcolor.ppd</entry> <entry>ältere Epson Stylus Color Drucker</entry> </row>

		<row><entry>stcolor2.ppd</entry> <entry>neuere Epson Stylus Color Drucker</entry> </row>

		<row><entry>stphoto.ppd</entry> <entry>ältere Epson Stylus Photo Drucker</entry> </row>

		<row><entry>stphoto2.ppd</entry> <entry>neuere Epson Stylus Photo Drucker</entry> </row>

		<row><entry>laserjet.ppd</entry> <entry>alle PCL Drucker. Weiter unten finden Sie mehr über
		einige andere Treiber/PPD-Pakete, die für die Verwendung mit CUPS geeignet sind.</entry> </row>

		</tbody>
	</tgroup>
</table>

</sect2>

<sect2>
<title><emphasis>cupsomatic/foomatic-rip</emphasis> versus <emphasis>nativer CUPS</emphasis>-Druck</title>


<para>
<indexterm><primary>cupsomatic</primary></indexterm>
<indexterm><primary>foomatic-rip</primary></indexterm>
Natives CUPS-Rastern arbeitet in zwei Schritten:
</para>

<itemizedlist>
<listitem><para>
Zuerst kommt der Schritt <parameter>pstoraster</parameter>. Dies verwendet das spezielle CUPS-device
<indexterm><primary>ESP</primary><secondary>Ghostscript</secondary></indexterm>
aus ESP Ghostscript 7.05.x als Werkzeug.
</para></listitem>

<listitem><para>
Als zweites kommt der Schritt <parameter>rasterdriver</parameter>. Er verwendet geräte-spezifische Filter; es
gibt einige Hersteller, die Filter guter Qualität für diesen Schritt zur Verfügung stellen. Manche sind freie
Software, andere Shareware/nicht-frei, manche proprietär.</para></listitem>
</itemizedlist>

<para>
Oft erzeugt dies bessere Qualität (und hat einige Vorteile mehr) als andere Methoden.
</para>

<para>
	<image id="cupsomatic-dia"><imagedescription>cupsomatic/foomatic Verarbeitung versus nativem CUPS.</imagedescription>
		<imagefile>10small</imagefile>
	</image>
</para>

<para>
Eine andere Methode ist der Weg über <parameter>cupsomatic/foomatic-rip</parameter>. Beachten Sie, daß
<parameter>cupsomatic</parameter> <emphasis>nicht</emphasis> von den CUPS-Leuten geschrieben wird. Dies ist ein
unabhängiger Beitrag zur Entwicklung des Druckens von den Leuten von Linuxprinting.org <footnote>sehen Sie auch
<ulink noescape="1" url="http://www.cups.org/cups-help.html">http://www.cups.org/cups-help.html</ulink></footnote>.
<parameter>cupsomatic</parameter> wird nicht mehr entwickelt, gewartet oder unterstützt. Es wurde ersetzt durch
<parameter>foomatic-rip</parameter>. <parameter>foomatic-rip</parameter> ist eine komplette Neufassung der alten
Idee von <parameter>cupsomatic</parameter>, aber sehr stark verbessert und generalisiert, um andere (Nicht-CUPS)
Spooler zu unterstützen. Ein Upgrade auf foomatic-rip ist wärmstens empfohlen, besonders wenn Sie auf eine
aktuelle Version von CUPS aktualisieren.
</para>

<para>
	<indexterm><primary>cupsomatic</primary></indexterm>
	<indexterm><primary>foomatic</primary></indexterm>
Sowohl die Methode <parameter>cupsomatic</parameter> (alt) und die Methode <parameter>foomatic-rip</parameter>
(neu) von Linuxprinting.org verwenden die traditionelle Ghostscript-Verarbeitung von Druckdateien, die alles
in einem Schritt erledigt. Dies hängt davon ab, daß all die anderen Geräte bereits in Ghostscript eingebaut
sind. Die Qualität ist so gut (oder schlecht), wie Ghostscript-Darstellung in anderen Spoolern ist. Der
Vorteil ist, daß diese Methode viele Drucker-Modelle unterstützt, die (noch) nicht von der moderneren
CUPS-Methode unterstützt werden.
</para>

<para>
Natürlich können Sie beide Methoden nebeneinander auf einem System einsetzen (und sogar auf einem Drucker, wenn
Sie verschiedene Queues installieren) und herausfinden, welche am Besten für Sie funktioniert.
</para>

<para>
<parameter>cupsomatic</parameter> "kidnappt" die Druckdatei nach der Stufe
<parameter>application/vnd.cups-postscript</parameter> und lenkt es um durch die CUPS-externe, systemweite
Ghostscript-Installation. Daher umgeht die Druckdatei den Filter <parameter>pstoraster</parameter> (und umgeht
auch die CUPS-Raster-Treiber <parameter>rastertosomething</parameter>). Nachdem Ghostscript sein Rastern beendet
hat, übergibt <parameter>cupsomatic</parameter> die dargestellte Datei direkt an das CUPS-Backend. Das
Flußdiagramm in <link linkend="cupsomatic-dia">cupsomatic/foomatic Verarbeitung versus Nativem CUPS</link>
illustriert den Unterschied zwischen nativer CUPS-Darstellung und der
<parameter>Foomatic/cupsomatic</parameter>-Methode.
</para>
</sect2>

<sect2>
<title>Beispiele für Filterketten</title>

<para>
Hier ein paar Beispiele für gängige Filterketten, um die Funktion von CUPS zu illustrieren.
</para>

<para>
Nehmen wir an, Sie wollen eine PDF-Datei auf einem per HP JetDirect angeschlossenen PostScript-Drucker drucken,
aber Sie wollen nur die Seiten 3-5, 7, 11-13 drucken, und das mit <quote>two-up</quote> und <quote>Duplex</quote>:
</para>

<itemizedlist>
<listitem><para>Ihre Druck-Optionen (Seitenauswahl, two-up, Duplex) werden an CUPS per Befehlszeile
weitergegeben.</para></listitem>

<listitem><para>Die (komplette) PDF-Datei wird an CUPS gesendet und automatisch als
<parameter>application/pdf</parameter> typisiert.</para></listitem>

<listitem><para>Die Datei muß daher zuerst den Vorfilter <parameter>pdftops</parameter> passieren,
der den PostScript MIME-Typ <parameter>application/postscript</parameter> erzeugt (eine Vorschau an dieser
Stelle würde immer noch alle Seiten des originalen PDFs zeigen).</para></listitem>

<listitem><para>Die Datei passiert sodann den Filter <parameter>pstops</parameter>, der die
Befehlszeilen-Optionen anwendet: er wählt die Seiten 3-5, 7, und 11-13, legt ein Layout mit
<quote>2 Seiten pro Blatt</quote> an, und fügt den korrekten Befehl für <quote>Duplex</quote> (wie
im PPD des Druckers definiert) in die PostScript-Datei ein; die Datei ist jetzt vom PostScript MIME-Typ
<parameter>application/vnd.cups-postscript</parameter>.</para></listitem>

<listitem><para>Die Datei geht jetzt ans <parameter>socket</parameter>-Backend, das den Auftrag an die
Drucker weiterleitet.</para></listitem>
</itemizedlist>

<para>
Die daraus resultierende Filterkette ist in <link linkend="pdftosocket">Filterkette PDF auf socket</link>
dargestellt.
<image id="pdftosocket"><imagefile>pdftosocket</imagefile><imagedescription>Filterkette PDF auf socket</imagedescription></image>
</para>

<para>
Nehmen wir an, Sie wollen aus dem selben Filter auf einen an USB angeschlossenen Epson Stylus Photo
Drucker drucken, der mittels dem CUPS-PPD <filename>stphoto2.ppd</filename> installiert wurde. Die
ersten paar Filter-Stufen sind fast die selben:
</para>

<itemizedlist>
<listitem><para>Ihre Druck-Optionen (Seitenauswahl, two-up, Duplex) werden an CUPS per Befehlszeile
weitergegeben.</para></listitem>

<listitem><para>Die (komplette) PDF-Datei wird an CUPS gesendet und automatisch als
<parameter>application/pdf</parameter> typisiert.</para></listitem>

<listitem><para>Die Datei muß daher zuerst den Vorfilter <parameter>pdftops</parameter> passieren,
der den PostScript MIME-Typ <parameter>application/postscript</parameter> erzeugt (eine Vorschau an dieser
Stelle würde immer noch alle Seiten des originalen PDFs zeigen).</para></listitem>

<listitem><para>Die Datei passiert sodann den Filter <parameter>pstops</parameter>, der die
Befehlszeilen-Optionen anwendet: er wählt die Seiten 3-5, 7, und 11-13, legt ein Layout mit
<quote>2 Seiten pro Blatt</quote> an, und fügt den korrekten Befehl für <quote>Duplex</quote> ...
(Oops &smbmdash; dieser Drucker und diese PPD unterstützen gar keinen Duplex-Druck &smbmdash; also wird
diese Option ignoriert) in die PostScript-Datei ein; die Datei ist jetzt vom PostScript MIME-Typ
<parameter>application/vnd.cups-postscript</parameter>.</para></listitem>

<listitem><para>Die Datei passiert jetzt die Filter-Stufe <parameter>pstoraster</parameter> und wird
zum MIME-Typ <parameter>application/cups-raster</parameter>.</para></listitem>

<listitem><para>Zuletzt tut der Filter <parameter>rastertoepson</parameter> seine Arbeit (wie in der PPD
des Druckers angezeigt), legt die drucker-spezifischen Rasterdaten an, und bettet alle vom Benutzer
gewählten Druck-Optionen in die Druckdaten ein.</para></listitem>

<listitem><para>Die Datei geht an das Backend <parameter>usb</parameter>, das es an die Drucker
weiterleitet.</para></listitem>
</itemizedlist>

<para>
Die daraus resultierende Filterkette ist in <link linkend="pdftoepsonusb">diesem Bild</link> dargestellt.
</para>

<image id="pdftoepsonusb"><imagefile>pdftoepsonusb</imagefile><imagedescription>Filterkette PDF auf USB.</imagedescription></image>
</sect2>

<sect2>
<title>Quellen für CUPS Treiber/PPDs</title>

<para>
Im Internet finden Sie viele tausend CUPS-PPD-Dateien (mit ihren begleitenden Filtern), in vielen Landessprachen
und mit Unterstützung für über tausend nicht-PostScript-Modelle.
</para>

<itemizedlist>
<indexterm><primary>ESP</primary><secondary>Print Pro</secondary></indexterm>
<indexterm><primary>PrintPro</primary><see>ESP Print Pro</see></indexterm>
<listitem><para><ulink url="http://wwwl.easysw.com/printpro/">ESP
PrintPro</ulink> (kommerziell, nicht frei) wird mit mehr als 3000 PPDs gebündelt, fertig zur erfolgreichen
Anwendung <quote>out of the box</quote> auf Linux, Mac OS X, IBM-AIX, HP-UX, Sun-Solaris, SGI-IRIX,
Compaq Tru64, Digital UNIX, und noch einigen kommerziellen Unices (es wurde von den CUPS-Entwicklern selbst
geschrieben und sein Verkauf hilft dabei, die weitere Entwicklung von CUPS zu finanzieren, genauso, wie es
dessen Schöpfer ernährt).</para></listitem>

<listitem><para>Das <ulink
url="http://gimp-print.sourceforge.net/">Gimp-Print-Project
</ulink> (GPL, freie Software) bietet ungefähr 140 PPDs (mit Unterstützung von fast 400 Druckern, viele davon
bis zu Foto-Qualität), zur Nutzung neben den Gimp-Print CUPS Filtern.</para></listitem>

<listitem><para><ulink url="http://www.turboprint.com/">TurboPrint
</ulink> (Shareware, nicht frei) unterstützt ungefähr die selbe Anzahl von Druckern in exzellenter Qualität.
</para></listitem>

<listitem><para><ulink
url="http://www-124.ibm.com/developerworks/oss/linux/projects/omni/">OMNI
</ulink>
(LPGL, frei) ist ein Package von IBM, das mittlerweile Unterstützung für mehr als 400 Drucker enthält,
aus dem Erbe von IBM OS/2 Know-How, portiert auf Linux (CUPS Unterstützung ist derzeit im Beta-Stadium).
</para></listitem>

<listitem><para><ulink url="http://hpinkjet.sourceforge.net/">HPIJS
</ulink> (BSD-artige Lizenz, frei) unterstützt ungefähr 150 Drucker von HP und bietet nun auch exzellente
Druckqualität (derzeit nur über den Foomatic-Pfad verfügbar).</para></listitem>

<listitem><para><ulink url="http://www.linuxprinting.org/">Foomatic/cupsomatic
</ulink> (LPGL, frei) von Linuxprinting.org bietet PPDs für praktisch jeden auf der Welt bekannten
Ghostscript-Filter (einschließlich Omni, Gimp-Print und HPIJS).</para></listitem>
</itemizedlist>

</sect2>

<sect2>
<title>Das Drucken mit Interface Scripts</title>

<para>
CUPS unterstützt auch die Verwendung von <quote>interface scripts</quote>, wie man sie von System V AT&amp;T
Druck-Systemen kennt. Diese werden oft für PCL-Drucker verwendet, von Anwendungen, die PCL-Druckaufträge
erzeugen. Interface scripts sind spezifisch für einzelne Drucker-Modelle. Sie haben eine ähnliche Rolle wie
PPDs für PostScript-Drucker. Interface scripts können die benötigten Escape-Sequenzen in den Druck-Datenstrom
einfügen, wenn der Benutzer einen bestimmten Papierschacht gewählt hat, oder Landscape-Druck, oder A3-Papier,
etc. Interface scripts sind praktisch unbekannt in der Linux-Welt. Auf HP-UX Plattformen werden sie öfter
verwendet. Sie können jedes funktionierende interface script auch mit CUPS verwenden. Installieren Sie einfach
den Drucker mit der Option <command>-i</command>:
</para>

<para><screen>
&rootprompt;<userinput>lpadmin -p pclprinter -v socket://11.12.13.14:9100 \
  -i /path/to/interface-script</userinput>
</screen></para>

<para>
Interface scripts sind vielleicht das <quote>unbekannte Tier</quote> für viele. Nichtsdestotrotz bieten sie mit
CUPS den einfachsten Weg, Ihr eigenes selbstgeschriebenes Filter-Skript oder -Programm in eine bestimmte
Drucker-Queue einzufügen (einige Informationen über die herkömmliche Verwendung von Interface Scripts kann unter
<ulink noescape="1" url="http://playground.sun.com/printing/documentation/interface.html">http://playground.sun.com/printing/documentation/interface.html</ulink> gefunden werden.
</para>
</sect2>

<sect1>
	<title>Netzwerk-Druck (Ausschließlich Windows)</title>

<para>
Netzwerk-Druck umfasst ein weites Feld. Um zu verstehen, was genau mit Samba passiert, wenn es im Auftrag seiner
Windows-Clients druckt, lassen Sie uns zuerst einen Blick auf ein <quote>reines Windows</quote> Setup werfen:
Windows clients mit einem Windows NT Druck-Server.
</para>

<sect2>
<title>Von Windows Clients auf einen NT Druck-Server</title>

<para>
Windows clients, die auf einen NT-basierenden Druck-Server drucken, haben zwei Möglichkeiten. Sie können:
<indexterm><primary>GDI</primary></indexterm>
<indexterm><primary>EMF</primary></indexterm>
</para>


<itemizedlist>
	<listitem><para>den Treiber lokal ausführen und die GDI-Ausgabe (EMF) selbst im Drucker-spezifischen
			Format darstellen.
	</para></listitem>

	<listitem><para>die GDI-Ausgabe (EMF) an den Server senden, wo der Treiber ausgeführt wird, um die
			Drucker-spezifische Ausgabe darzustellen.
	</para></listitem>
</itemizedlist>

<para>
Die beiden Druck-Möglichkeiten werden in den Flußdiagrammen
<link linkend="small11">Treiberausführung auf dem Client</link>
und <link linkend="small12">Treiberausführung auf dem Server</link> gezeigt.
</para>
</sect2>

<sect2>
<title>Treiberausführung auf dem Client</title>

<para>
Im ersten Fall muß der Druck-Server die Datei als raw behandeln, das bedeutet, es sollte die Auftragsdatei nicht
anrühren oder in irgendeiner Art zu konvertieren versuchen. Dies ist, was ein herkömmlicher UNIX-basierender
Druck-Server auch tun kann, und das bei besserer Performance und stabiler als ein NT Druck-Server. Damit
sind wohl die meisten Samba-Administratoren vertraut. Ein Vorteil dieses Setups ist, daß dieser
<quote>spooling-only</quote> Druck-Server sogar verwendet werden kann, wenn kein(e) Treiber für UNIX
verfügbar sind, es genügt, die Windows-Treiber zur Verfügung und auf den Clients installiert zu haben.
</para>

<para>
	<image id="small11"><imagedescription>Treiberausführung auf dem Client.</imagedescription>
		<imagefile>11small</imagefile>
	</image>
</para>
</sect2>

<sect2>
<title>Treiberausführung auf dem Server</title>


<para>
<indexterm><primary>PostScript</primary></indexterm>
<indexterm><primary>PCL</primary></indexterm>
<indexterm><primary>ESC/P</primary></indexterm>
<indexterm><primary>EMF</primary></indexterm>
<indexterm><primary>GDI</primary></indexterm>
Der andere Pfad führt den Drucker-Treiber auf dem Server aus. Der Client übermittelt Druckdateien im EMF-Format
an den Server. Der Server verwendet den PostScript, PCL, ESC/P oder einen anderen Treiber, um die EMF-Datei in
die drucker-spezifische Sprache zu konvertieren. Es ist UNIX nicht möglich, dasselbe zu tun. Derzeit gibt es
kein Programm und keine Methode, um die GDI-Ausgabe eines Windows-Clients auf einem UNIX-Server auf etwas zu
wandeln, das ein Drucker verstehen könnte.
</para>

<para>
	<image id="small12"><imagedescription>Treiberausführung auf dem Server.</imagedescription>
		<imagefile>12small</imagefile>
	</image>
</para>

<para>
Jedoch ist etwas Ähnliches mit CUPS möglich. Lesen Sie weiter.
</para>
</sect2>
</sect1>

<sect1>
<title>Netzwerk-Druck (Windows Clients &smbmdash; UNIX/Samba Druck-Server)</title>

<para>
Da UNIX Server den Win32 Programm-Code <emphasis>NICHT</emphasis> auf ihrer Plattform ausführen können, ist
die Sache etwas anders. Dies schränkt jedoch Ihre Möglichkeiten nicht allzu sehr ein. Im Gegenteil, Sie haben
hier die Möglichkeit, Druckoptionen zu implementieren, die anderswo nicht möglich sind.
</para>

<sect2>
<title>Von Windows Clients auf einen CUPS/Samba Druck-Server</title>

<para>
Hier ist ein einfaches Rezept, das zeigt, wie Sie Vorteile aus den mächtigen Eigenschaften von CUPS ziehen, zum
Nutzen Ihrer druckenden Windows Clients:
</para>

<itemizedlist>

<listitem><para>Lassen Sie die Windows Clients PostScript an den CUPS Server senden.</para></listitem>

<listitem><para>Lassen Sie den CUPS Server das PostScript in ein geräte-spezifisches Format wandeln.</para></listitem>
</itemizedlist>

<para>
Dies erfordert, daß die Clients einen PostScript-Treiber verwenden (sogar wenn der Drucker kein PostScript-Modell
ist). Es erfordert auch, daß Sie einen Treiber auf dem CUPS-Server haben.
</para>

<para>
Zuerst, um CUPS-basierendes Drucken per Samba zu aktivieren, sollten folgende Optionen im Abschitt
[global] Ihrer Datei &smb.conf; gesetzt werden:
</para>

<smbconfblock>
<smbconfoption><name>printing</name><value>cups</value></smbconfoption>
<smbconfoption><name>printcap</name><value>cups</value></smbconfoption>
</smbconfblock>

<para>
Wenn diese Parameter angegeben werden, werden alle manuell gesetzten Druck-Anweisungen (wie
<smbconfoption><name>print command</name></smbconfoption> oder
<smbconfoption><name>lppause command</name></smbconfoption>) in &smb.conf; (genauso wie in Samba selbst)
ignoriert. Stattdessen arbeitet Samba direkt mit CUPS zusammen, unter Verwendung dessen
"application program interface" (API), sofern Samba mit Unterstützung der CUPS-Bibliothek (libcups) kompiliert
wurde. Wenn Samba nicht mit CUPS-Unterstützung kompiliert wurde, und wenn keine anderen Druckbefehle gesetzt
sind, wird der Druck den <emphasis>System V</emphasis> AT&amp;T Befehlssatz verwenden, mit der automatisch
gesetzten Option -oraw, womit Druckaufträge einfach weitergegeben werden (wenn Sie Ihre selbstdefinierten
Druckbefehle mit einem Samba-Server, der CUPS-Unterstützung einkompiliert hat, verwenden wollen, verwenden Sie
einfach <smbconfoption><name>printing</name><value>sysv</value></smbconfoption>).
</para>

<para>
<image><imagedescription>Drucken über einen CUPS/Samba Server.</imagedescription>
	<imagefile>13small</imagefile>
</image>
</para>
</sect2>

<sect2>
<title>Samba empfängt Aufträge und gibt sie an CUPS weiter</title>

<para>
Samba <emphasis>muss</emphasis> sein eigenes Spooling-Verzeichnis verwenden (es wird mit einer Zeile wie
<smbconfoption><name>path</name><value>/var/spool/samba</value></smbconfoption> im Abschnitt
<smbconfsection>[printers]</smbconfsection> oder <smbconfsection>[printername]</smbconfsection> von
&smb.conf; gesetzt). Samba empfängt den Auftrag in seinem eigenen Spooling-Verzeichnis und gibt ihn weiter ins
Spooling-Verzeichnis von CUPS (das CUPS-Spooling-Verzeichnis wird gesetzt mittels der Anweisung
<parameter>RequestRoot</parameter>, in einer Zeile die voreingestellt
<parameter>RequestRoot /var/spool/cups</parameter> lautet). CUPS prüft die Zugriffsrechte und setzt diese auf
vernünftige Werte, bei jedem Neustart. Wir haben schon ziemlich viele Leute gesehen, die ein gemeinsames
Spooling-Verzeichnis verwendet haben, und wochenlang mit diesem <quote>Problem</quote> zu kämpfen hatten.
</para>

<para>
Ein Windows-Benutzer authentifiziert sich nur gegen Samba (mittels dessen, was konfiguriert wurde). Wenn Samba
auf demselben Host wie CUPS läuft, brauchen Sie nur dem Rechner <quote>localhost</quote> zu erlauben, zu drucken.
Wenn sie auf verschiedenen Maschinen laufen, müssen Sie sicherstellen, daß der Samba-Host Zugriff auf das Drucken
auf CUPS hat.
</para>
</sect2>
</sect1>

<sect1>
<title>Netzwerk PostScript RIP</title>

<para>
Dieser Abschnitt behandelt die Verwendung von CUPS-Filtern auf der Server &smbmdash; Konfiguration, in der
Clients einen PostScript-Treiber mit CUPS-PPDs verwenden.
</para>


<para>
<indexterm><primary>PostScript</primary></indexterm>
<indexterm><primary>PCL</primary></indexterm>
<indexterm><primary>PJL</primary></indexterm>
PPDs können alle Optionen des Drucker-Geräts kontrollieren. Sie werden üblicherweise vom Hersteller
bereitgestellt, wenn Sie einen PostScript-Drucker besitzen. PPD-Dateien ((PostScript Printer Descriptions)
sind immer Bestandteil der Druckertreiber auf MS Windows oder Apple Mac OS Systemen. Es sind ASCII-Dateien,
die vom Benutzer wählbare Druckoptionen enthalten, sowie deren Zuweisung auf die enstprechenden PostScript, PCL
oder PJL Befehle für das Ziel-Gerät. Die GUI-Dialoge der Druckertreiber übersetzen diese Optionen
<quote>on-the-fly</quote> in Schaltflächen und Auswahllisten, um dem Benutzer eine Auswahl anzubieten.
</para>

<para>
CUPS kann ohne jede Umwandlung PPD-Dateien von jedem Windows-PS-Treiber (NT wird empfohlen) und dessen Optionen
verarbeiten. Es gibt ein Web-Interface zu den Druck-Optionen (gehen Sie auf
<ulink noescape="1" url="http://localhost:631/printers/">http://localhost:631/printers/</ulink> und klicken Sie
auf eine <guibutton>Configure Printer</guibutton>-Schaltfläche) oder ein Befehlszeilen-Interface (sehen Sie dazu
<command>man lpoptions</command> oder prüfen Sie, ob Sie <command>lphelp</command> auf Ihrem System haben). Es
gibt auch ein paar verschiedene GUI Front-ends für Linux/UNIX, die PPD-Optionen darstellen können. PPD-Optionen
sind normalerweise zur Interpretation durch den PostScript RIP auf dem PostScript-Drucker gedacht.
</para>

<sect2>
<title>PPDs für Nicht-PS-Drucker auf UNIX</title>


<para>
<indexterm><primary>PPD</primary></indexterm>
CUPS beschränkt sich nicht auf <quote>wirkliche</quote> PostScript-Drucker in seiner Verwendung von PPDs. Die
CUPS-Entwickler haben die Reichweite des PPD-Konzepts erweitert, um auch verfügbare Geräte- und Treiber-Optionen
von Nicht-PS-Druckern durch CUPS-PPDs zu beschreiben.
</para>

<para>
Dies ist nur logisch, da CUPS einen voll ausgestatteten PostScript Interpreter (RIP) umfaßt. Dieser RIP basiert
auf Ghostscript. Er kann alles empfangene PostScript (und zusätzlich viele weitere Dateiformate) verarbeiten.
Alle CUPS-PPDs für Nicht-PS-Drucker enthalten eine zusätzliche Zeile, die mit dem Schlüsselwort
<parameter>*cupsFilter</parameter> beginnt. Diese Zeile teilt dem CUPS-Druck-Systemmit, welcher
drucker-spezifische Filter zur Interpretation der PostScript-Daten verwendet werden soll. Daher läßt CUPS
alle seine Drucker für die Clients als PostScript-Drucker erscheinen, weil es als PostScript RIP für diese
Drucker arbeiten kann.
</para>
</sect2>

<sect2>
<title>PPDs für Nicht-PS-Drucker auf Windows</title>

<para>
<indexterm><primary>PPD</primary></indexterm>
CUPS-PPDs können auch auf Windows-Clients verwendet werden, am <quote>Rücken</quote> eines <quote>core</quote>
PostScript-Treibers (derzeit wird der "CUPS PostScript Driver for Windows NT/200x/XP" empfohlen; Sie können auch
den von Adobe verwenden, mit Einschränkungen). Dieses Feature ermöglicht es CUPS, einige Tricks zu beherrschen,
die kein anderer Spooler kann:
</para>

<itemizedlist>

<listitem><para>Das Arbeiten als ein vernetzter PostScript RIP (Raster Image Processor),
der Druckdateien von allen Client-Plattformen in einer einheitlichen Weise handhabt.
</para></listitem>

<listitem><para>Das Arbeiten als zentraler Ab- und Verrechnungs-Server, da alle Dateien durch den pstops-Filter
laufen und daher in der CUPS-Datei <filename>page_log</filename> protokolliert werden.
<emphasis>Anmerkung:</emphasis>Dies kann nicht für <quote>raw</quote> Druckaufträge erfolgen, da diese ja per
definitionem ungefiltert bleiben.</para></listitem>

<listitem><para>Das Ermöglichen einer Einigung und Festlegung eines einzelnen PostScript-Treibers für die
Clients, sogar für viele verschiedene Ziel-Drucker.</para></listitem>
</itemizedlist>

<para>
Die Verwendung von CUPS PPDs auf Windows-Clients ermöglicht es diesen, alle Druckauftrags-Einstellungen so
zu kontrollieren, wie es ein UNIX-Client kann.
</para>
</sect2>
</sect1>

<sect1>
<title>Windows Terminal Server (WTS) als CUPS Clients</title>

<para>
Dieses Setup wird für diejenigen interessant sein, die grosse Probleme in WTS-Umgebungen haben. WTS braucht oft
eine Vielzahl von Nicht-PS-Treibern installiert, um die Vielfalt der verschiedenen Druckermodelle der CLients
zu unterstützen. Dies bringt oft eine stark erhöhte Instabilität mit sich.
</para>

<sect2>
<title>Drucker-Treiber, die im <quote>Kernel Modus</quote> laufen, verursachen viele Probleme</title>

<para>
In Windows NT bringen Drucker-Treiber, die im <quote>Kernel Modus</quote> laufen, ein hohes Risiko für die
Stabilität des Systems mit sich, wenn der Treiber nicht wirklich stabil und gut getestet ist. Und es gibt eine
Menge schlechte Treiber! Speziell berüchtigt ist das Beispiel des PCL-Drucker-Treibers, der ein zusätzliches
Sound-Modul ausführte, das die Benutzer via Soundkarte über ihre abgeschlossenen Druckaufträgen informierte.
Muß ich wirklich erwähnen, daß dies genauso verlässlich <quote>blue screens of death</quote> verursachte?
</para>

<para>
PostScript-Treiber sind im Allgemeinen gut getestet. Sie sind nicht dafür bekannt, irgendwelche Probleme zu
verursachen, sogar trotzdem sie auch im Kernel-Modus ausgeführt werden. Das kann daher kommen, daß es bislang
nur zwei verschiedene PostScript-Treiber gab: die von Adobe und den von Microsoft. Beide sind gut getestet und
so stabil, wie es unter Windows eben geht. Der CUPS-Treiber ist von dem MS-Treiber abgeleitet.
</para>
</sect2>

<sect2>
<title>Workarounds bringen massive Einschränkungen</title>

<para>
In vielen Fällen haben Administratoren, in dem Bestreben, dieses Problem zu umgehen, dazu gegriffen, die
erlaubten Druckertreiber auf ihrem WTS auf einen generischen PCL- und einen PostScript-Treiber einzuschränken.
Dies schränkt jedoch die Clients im Umfang der ihnen zur Verfügung stehenden Druckoptionen ein. Oft bekommen
sie nicht mehr als Simplex-Druck aus einem Standard-Papierschacht, während ihre Geräte bei weitem mehr könnten,
wenn sie von einem besseren Treiber angesteuert würden!
</para>
</sect2>

<sect2>
<title>CUPS: Ein <quote>Zauberstein</quote>?</title>


<para>
<indexterm><primary>PPD</primary></indexterm>
<indexterm><primary>PostScript</primary></indexterm>
Das Verwenden eines Postscript-Treibers, aktiviert mit einem CUPS-PPD, scheint eine sehr elegante Art zu sein,
all diese Mängel zu überbrücken. Es gibt, je nach der von Ihnen verwendeten Windows-Version, bis zu drei
verschiedene verfügbare Postscript-Treiber: Adobe, Microsoft und CUPS Postscript-Treiber. Keiner der drei
ist bekannt dafür, grössere Instabilitäten auf WTS zu verursachen (auch nicht, wenn viele verschiedene PPDs
verwendet werden). Die Clients werden (wieder) imstande dazu sein, Papierschächte auszuwählen, Duplexdruck
und andere Einstellungen. Es gibt jedoch auch einen Preis dafür: ein CUPS-Server, der als PostScript RIP für
seine Clients arbeitet, erfordert mehr CPU und RAM als wenn er nur als <quote>raw spooling</quote> Server
arbeitet. Weiters ist dieses Setup noch nicht ausführlich getestet, wobei die ersten Rückmeldungen sehr
vielversprechend aussehen.
</para>
</sect2>

<sect2>
<title>PostScript-Treiber ohne grössere Probleme &smbmdash; sogar im Kernel-Modus</title>

<para>
<indexterm><primary>DDK</primary></indexterm>
Aktuellere Drucker-Treiber unter W200x und XP laufen nicht mehr im Kernel-Modus (anders als unter Windows NT).
Beide Betriebssysteme können jedoch die NT-Treiber verwenden, die im Kernel-Modus laufen (Sie können grob
bestimmen, welcher Treiber zu welchem System gehört, da die Treiber im Unterverzeichnis <quote>2</quote> des
Verzeichnisses <quote>W32X86</quote> die <quote>alten</quote> sind). Wie zuvor gesagt wurde, sind weder die
Adobe-Treiber noch die von MS dafür bekannt, irgendwelche Stabilitätsprobleme zu verursachen. Der CUPS-Treiber
wurde vom MS-Treiber abgeleitet. Es gibt einen einfachen Grund dafür: Das MS DDK ((Device Development Kit) für
Windows NT (welches für Lizenznehmer von Visual Studio ohne Kosten verfügbar war) beinhaltet den Quelltext
des MS-Treibers, und die Lizenznehmer von Visual Studio dürfen diesen verwenden und ihn zu für eigene
Treiber-Entwicklungen modifizieren. Das haben die CUPS-Entwickler getan. Die Lizenz erlaubt ihnen nicht, den
gesamten Quelltext zu veröffentlichen, sie haben jedoch das <quote>diff</quote> unter der GPL veröffentlicht,
und wenn Sie Besitzer eines <quote>MS DDK for Windows NT</quote> sind, können Sie den Treiber selbst prüfen.
</para>
</sect2>
</sect1>

<sect1>
<title>Das Konfigurieren von CUPS für den Download von Treibern</title>

<para>
Wie wir zuvor erwähnt haben, funktionieren alle bekannten Methoden, um Client-Drucker-Treiber auf dem
Samba-Server vorzubereiten (und damit die Vorzüge von Point'n'Print zu geniessen) auch mit CUPS. Diese
Methoden wurden im vorigen Kapitel beschrieben. In Wirklichkeit ist dies eine reine Samba-Angelegenheit, und
hängt nur mit dem Verhältnis Samba/Windows-Client zusammen.
</para>

<sect2>
<title><emphasis>cupsaddsmb</emphasis>: Das unbekannte Hilfsmittel</title>


<para>
<indexterm><primary>cupsaddsmb</primary></indexterm>
Das Werkzeug <command>cupsaddsmb</command> (mit allen aktuellen CUPS-Versionen ausgeliefert) ist eine
alternative Methode, um Drucker-Treiber in die Samba-Freigabe <smbconfsection>[print$]</smbconfsection> zu
transferieren. Zur Erinnerung, diese Freigabe ist der Ort, an dem Clients nach hinterlegten und konfigurierten
Treibern suchen, um diese herunterzuladen und zu installieren. Dies macht das Verteilen von jeglichen
(oder allen) installierten CUPS-Druckern ziemlich einfach. <command>cupsaddsmb</command> kann den Adobe
PostScript-Treiber genauso verwenden wie den neu entwickelten CUPS PostScript-Treiber für Windows NT/200x/XP.
<parameter>cupsaddsmb</parameter> funktioniert <emphasis>NICHT</emphasis> mit beliebigen Drucker-Treibern,
sondern nur mit <emphasis>exakt</emphasis> den Treiber-Dateien, die in seiner man-page angegeben sind.
</para>

<para>
Der CUPS Drucker-Treiber ist auf der CUPS-Download-Seite verfügbar. Sein Paketname ist
<filename>cups-samba-[version].tar.gz</filename>. Er wird den Adobe-Treibern vorgezogen, da er einige Vorteile
hat:
</para>

<itemizedlist>
<listitem><para>Er unterstützt ein genauere Seiten-Abrechnung.</para></listitem>

<listitem><para>Er unterstützt Banner-Seiten, und Seiten-Labels auf allen Druckern.</para></listitem>

<listitem><para>Er unterstützt das Setzen von einigen IPP-Auftrags-Attributen (wie Auftrags-Priorität,
Seiten-Label, und Auftrags-Verrechnung).</para></listitem>
</itemizedlist>

<para>
Derzeit werden jedoch nur Windows NT, 2000 und XP von den CUPS-Treibern unterstützt. Sie brauchen auch die
entsprechenden Teile des Adobe-Treibers, wenn Sie Windows 95, 98 und ME Clients unterstützen müssen.
</para>
</sect2>

<sect2>
	<title>Bereiten Sie Ihre &smb.conf; für <command>cupsaddsmb</command> vor</title>

<para>
Vor dem Ausführen von <command>cupsaddsmb</command> müssen Sie die Einstellungen in &smb.conf; wie im
<link linkend="cupsadd-ex">nächsten Beispiel</link> setzen:
</para>

<para><smbconfexample id="cupsadd-ex">
<title>smb.conf für die Verwendung von cupsaddsmb</title>
<smbconfsection>[global]</smbconfsection>
<smbconfoption><name>load printers</name><value>yes</value></smbconfoption>
<smbconfoption><name>printing</name><value>cups</value></smbconfoption>
<smbconfoption><name>printcap name</name><value>cups</value></smbconfoption>

<smbconfsection>[printers]</smbconfsection>
<smbconfoption><name>comment</name><value>Alle Drucker</value></smbconfoption>
<smbconfoption><name>path</name><value>/var/spool/samba</value></smbconfoption>
<smbconfoption><name>browseable</name><value>no</value></smbconfoption>
<smbconfoption><name>public</name><value>yes</value></smbconfoption>
<smbconfcomment>Einstellung ist abhängig von Ihren Anforderungen</smbconfcomment>
<smbconfoption><name>guest ok</name><value>yes</value></smbconfoption>
<smbconfoption><name>writable</name><value>no</value></smbconfoption>
<smbconfoption><name>printable</name><value>yes</value></smbconfoption>
<smbconfoption><name>printer admin</name><value>root</value></smbconfoption>
 <smbconfsection>[print$]</smbconfsection>
<smbconfoption><name>comment</name><value>Drucker-Treiber</value></smbconfoption>
<smbconfoption><name>path</name><value>/etc/samba/drivers</value></smbconfoption>
<smbconfoption><name>browseable</name><value>yes</value></smbconfoption>
<smbconfoption><name>guest ok</name><value>no</value></smbconfoption>
<smbconfoption><name>read only</name><value>yes</value></smbconfoption>
<smbconfoption><name>write list</name><value>root</value></smbconfoption>
</smbconfexample></para>
</sect2>

<sect2>
<title>CUPS <quote>PostScript-Treiber für Windows NT/200x/XP</quote></title>

<para>
<indexterm><primary>PostScript</primary></indexterm>
CUPS-Anwender können die genau gleichen Pakete von <ulink
noescape="1" url="http://www.cups.org/software.html">http://www.cups.org/software.html</ulink> beziehen.
Dies ist ein separates Paket von CUPS-Software-Dateien, bezeichnet als
CUPS 5.0rc3 Windows NT/200x/XP Printer Driver for Samba. Der Dateiname für den Download ist
<filename>cups-samba-5.0rc3.tar.gz</filename>. Nach dem untar und unzip zeigen sich folgende Dateien:
</para>

<para><screen>
&rootprompt;<userinput>tar xvzf cups-samba-5.0rc3.tar.gz</userinput>
cups-samba.install
cups-samba.license
cups-samba.readme
cups-samba.remove
cups-samba.ss
</screen></para>

<para>
<indexterm><primary>ESP</primary><secondary>meta packager</secondary></indexterm>
<indexterm><primary>EPM</primary><see>ESP meta packager</see></indexterm>
Diese Dateien wurden mit der ESP-Meta-Packer-Software EPM gepackt. Die Dateien <filename>*.install</filename>
und <filename>*.remove</filename> sind einfache Shell-Skripts, die die Datei <filename>*.ss</filename> entpacken
(die Datei <filename>*.ss</filename> ist nichts als ein tar-Archiv, das auch mit <quote>tar</quote> entpackt
werden kann). Dann kopiert es deren Inhalt in <filename>/usr/share/cups/drivers/</filename>. Dieser Inhalt
enthält drei Dateien:
</para>

<para><screen>
&rootprompt;<userinput>tar tv cups-samba.ss</userinput>
cupsdrvr.dll
cupsui.dll
cups.hlp
</screen></para>

<para>
Das <parameter>cups-samba.install</parameter> Shell-Skript ist einfach anzuwenden:
</para>

<para><screen>
&rootprompt;<userinput>./cups-samba.install</userinput>
[....]
Installing software...
Updating file permissions...
Running post-install commands...
Installation is complete.     
</screen></para>

<para>
Das Skript sollte die Treiber-Dateien automatisch ins Verzeichnis <filename>/usr/share/cups/drivers/</filename>
kopieren.
</para>

<warning><para>
Wegen eines Fehlers kopiert eine ältere CUPS-Release die Datei <filename>cups.hlp</filename> ins Verzeichnis
<filename>/usr/share/drivers/</filename> anstatt in <filename>/usr/share/cups/drivers/</filename>. Um das zu
beheben, kopieren/verschieben Sie diese Datei einfach manuell ins richtige Verzeichnis, nachdem Sie das
Install-Skript ausgeführt haben.
</para></warning>

<para><screen>
&rootprompt;<userinput>cp /usr/share/drivers/cups.hlp /usr/share/cups/drivers/</userinput>
</screen></para>


<para>
<indexterm><primary>DDK</primary></indexterm>
Dieser neue CUPS PostScript-Treiber ist derzeit nur binär verfügbar, aber ohne Kosten. Es wird (noch) kein
vollständiger Quelltext zur Verfügung gestellt. Der Grund ist, daß er mit Hilfe des Microsoft Driver Developer
Kits (DDK) entwickelt und mit Microsoft Visual Studio 6 kompiliert wurde. Die Treiber-Entwickler dürfen nicht
den gesamten Quelltext als freie Software vertreiben. Die CUPS-Entwickler haben jedoch das <quote>diff</quote>
unter der GPL veröffentlicht, somit kann jeder mit einer Lizenz für Visual Studio und einem DDK den Treiber
selbst kompilieren.
</para>
</sect2>

<sect2>
<title>Das Erkennen verschiedener Treiber-Dateien</title>

<para>
Die CUPS-Treiber unterstützen die älteren Systeme Windows 95/98/Me nicht, nur die Client-Systeme
Windows NT/2000/XP.
</para>

<para>Windows NT, 2000 und XP werden unterstützt von:</para>

<para>
	<itemizedlist>
		<listitem>cups.hlp</listitem>
		<listitem>cupsdrvr.dll</listitem>
		<listitem>cupsui.dll</listitem>
	</itemizedlist>
</para>

<para>
Adobe-Treiber sind für die älteren Systeme Windows 95/98/Me genauso verfügbar wie für Windows NT/2000/XP.
Die Dateien sind für die einzelnen Plattformen verschieden.
</para>

<para>Windows 95, 98 und ME werden unterstützt von:</para>

<para>
	<itemizedlist>
	<listitem>ADFONTS.MFM</listitem>
	<listitem>ADOBEPS4.DRV</listitem>
	<listitem>ADOBEPS4.HLP</listitem>
	<listitem>DEFPRTR2.PPD</listitem>
	<listitem>ICONLIB.DLL</listitem>
	<listitem>PSMON.DLL</listitem>
</itemizedlist>
</para>

<para>Windows NT, 2000 und XP werden unterstützt von:</para>

<para>
<itemizedlist>
	<listitem>ADOBEPS5.DLL</listitem>
	<listitem>ADOBEPSU.DLL</listitem>
	<listitem>ADOBEPSU.HLP</listitem>
</itemizedlist>

</para>

<note><para>
Wenn sowohl die Adobe-Treiber-Dateien wie auch die CUPS-Treiber-Dateien zur Unterstützung von Windows NT/200x/XP
vorhanden sind, werden die Adobe-Dateien ignoriert und die CUPS-Dateien verwendet. Wenn Sie &smbmdash; aus
irgendeinem Grund&smbmdash; nur Adobe-Treiber verwenden wollen, entfernen Sie einfach die drei CUPS-Dateien. Die
Windows 9x/Me clients verwenden in jedem Fall die Adobe-Treiber.
</para></note>
</sect2>

<sect2>
<title>Das Beschaffen der Adobe-Treiber-Dateien</title>

<para>
Das Beschaffen der Adobe-Treiber-Dateien scheint für viele Anwender unerwartet schwierig zu sein. Sie sind nicht
als einzelne Dateien auf der Adobe-Website erhältlich und das selbst-entpackende und/oder selbst-installierende
Windows-.exe ist auch nicht einfach zu finden. Möglicherweise müssen Sie den enthaltenen Installer verwenden
und die Installation einmal auf einem Client durchführen. Dies installiert die Treiber (und einen generischen
PostScript-Drucker) lokal auf dem Client. Wenn diese installiert sind, geben Sie den generischen
PostScript-Drucker frei. Danach enthält die Freigabe <smbconfsection>[print$]</smbconfsection> des Clients die
Adobe-Dateien, von wo aus Sie sie mittels smbclient auf den CUPS-Host holen können.
</para>
</sect2>

<sect2>
<title>ESP Print Pro PostScript Treiber für Windows NT/200x/XP</title>

<para>
<indexterm><primary>ESP</primary><secondary>Print Pro</secondary></indexterm>
Die Anwender der Software ESP Print Pro können ihr Samba-Treiber-Paket für diesen Zweck ohne Probleme
installieren. Beziehen Sie die Treiber-Dateien aus dem normalen Download-Bereich der ESP Print Pro Software
unter <ulink noescape="1" url="http://www.easysw.com/software.html">http://www.easysw.com/software.html</ulink>.
Sie müssen den Link namens <quote>SAMBA</quote> unter
<guilabel>Download Printer Drivers for ESP Print Pro 4.x</guilabel> finden, und das Package herunterladen.
Sobald es instaliert ist, können Sie jeden Treiber vorbereiten, in dem Sie einfach den Drucker im
Drucker-Manager-GUI markieren und die Funktion <guilabel>Export Driver...</guilabel> aus dem Menü wählen.
Natürlich müssen Sie Samba zuerst für den Umgang mit den Treiber-Dateien vorbereitet haben; also die Freigabe
<smbconfsection>[print$]</smbconfsection> angelegt haben und so weiter. Das Paket ESP Print Pro beinhaltet
die CUPS-Treiber-Dateien genauso wie ein (lizenziertes) Set von Adobe-Treibern für die Windows 95/98/Me
Client-Familie.
</para>
</sect2>

<sect2>
<title>Vorbehalte, die zu berücksichtigen sind</title>

<para>
<indexterm><primary>cupsaddsmb</primary></indexterm>
Sobald Sie das Install-Skript ausgeführt haben (und eventuell die Datei <filename>cups.hlp</filename> manuell
nach <filename>/usr/share/cups/drivers/</filename> verschoben haben), ist der Treiber bereit, um in die
Samba-Freigabe <smbconfsection>[print$]</smbconfsection> gelegt zu werden (welche oft auf das Verzeichnis
<filename>/etc/samba/drivers/</filename> zeigt und einen Unterverzeichnis-Baum mit den Verzeichnissen
<emphasis>WIN40</emphasis> und <emphasis>W32X86</emphasis> enthält). Sie tun dies, indem Sie
<command>cupsaddsmb</command> ausführen (sehen Sie dazu auch <command>man cupsaddsmb</command>, für alle
CUPS-Releases seit 1.1.16).
</para>

<tip><para>
<indexterm><primary>Single Sign On</primary></indexterm>
Es kann sein, daß Sie root in die Datei smbpasswd aufnehmen müssen, indem Sie <command>smbpasswd</command>
ausführen; dies ist besonders wichtig, wenn Sie diese ganze Prozedur zum ersten Mal ausführen, und nicht in
einer Umgebung arbeiten, in der alles für <emphasis>single sign on</emphasis> an einem Windows Domänen-Controller
konfiguriert ist.
</para></tip>

<para>
Sobald die Treiber-Dateien in der Freigabe <smbconfsection>[print$]</smbconfsection> liegen und initialisiert
sind, sind Sie bereit, um von den Windows NT/200x/XP Clients heruntergeladen und installiert zu werden.
</para>

<note><para>
Win 9x/Me Clients funktionieren nicht mit dem CUPS PostScript Treiber. Für diese Clients brauchen Sie nach wie
vor die <filename>ADOBE*.*</filename> Treiber, wie oben erwähnt.
</para></note>

<note>
<para>
Es macht nichts, wenn Sie immer noch die <filename>ADOBE*.*</filename> Treiber-Dateien aus älteren Installationen
im Verzeichnis <filename>/usr/share/cups/drivers/</filename> liegen haben. Das neue <command>cupsaddsmb</command>
(ab 1.1.16) bevorzugt automatisch die eigenen Treiber, wenn es beide vorfindet.
</para></note>

<note><para>
<indexterm><primary>"Printers" folder</primary></indexterm>
Sollten Ihre Windows-Clients die alten <filename>ADOBE*.*</filename> Treiber-Dateien installiert haben, wird
der Download des neuen CUPS PostScript Treibers zuerst scheitern. Sie müssen den alten Treiber zuerst von den
Clients löschen. Es reicht nicht aus, den Drucker zu <quote>löschen</quote>, da die Treiber-Dateien nach wie vor
von den Clients bereitgestellt und wiederverwendet werden, wenn Sie versuchen, den Drucker neu zu installieren.
Um die Adobe-Treiber auf den Clients völlig los zu werden, öffnen Sie den Ordner <guilabel>Drucker</guilabel>
(evtl. via <guilabel>Start > Systemsteuerung > Drucker und Faxgeräte</guilabel>), klicken rechts auf den
Ordner-Hintergrund und wählen <guimenuitem>Servereigenschaften</guimenuitem>. Wenn sich der neue Dialog öffnet,
wählen Sie den Reiter <guilabel>Treiber</guilabel>. In der Liste wählen Sie den Treiber, den Sie löschen
wollen und klicken auf <guilabel>Entfernen</guilabel>. Dies funktioniert nur, wenn kein einziger Drucker mehr
übrig ist, der diesen Treiber verwendet. Sie müssen zuerst alle Drucker im Ordner <guilabel>Drucker</guilabel>
<quote>löschen</quote>, die diesen Treiber verwenden. Sie brauchen Administrator-Rechte, um dies zu tun.
</para></note>

<note><para>
<indexterm><primary>rpcclient</primary><secondary>setdriver</secondary></indexterm>
Sobald Sie erfolgreich den CUPS PostScript Treiber auf einen Client geladen haben, können Sie leicht alle Drucker
auf diesen Treiber umstellen, indem Sie so vorgehen, wie in
<link linkend="printing">Classical Printing Support</link> beschrieben. Entweder ändern Sie den Treiber für einen
vorhandenen Drucker, indem Sie den Dialog <guilabel>Drucker-Eigenschaften</guilabel> verwenden, oder Sie
benutzen den Befehl <command>rpcclient</command> mit der Option <command>setdriver</command>.
</para></note>
</sect2>

<sect2>
<title>Windows CUPS-PostScript-Treiber versus Adobe-Treiber</title>

<para>
Interessiert Sie ein Vergleich des CUPS- und des Adobe-Treibers? Für unsere Zwecke sind dies die wichtigsten
Punkte, die für den CUPS-Treiber sprechen:
</para>

<itemizedlist>
<listitem><para>Keine Probleme mit der Adobe EULA.</para></listitem>

<listitem><para>Keine Probleme mit der Frage <quote>Wo kriege ich die Adobe Treiber-Dateien her?
</quote></para></listitem>

<listitem><para>
<indexterm><primary>PJL</primary></indexterm>
Die Adobe-Treiber (auf Anfrage der zugeordneten PPD-Datei) fügen oft einen PJL-Header vor dem Haupt-PS-Teil der
Druck-Datei ein. Daher beginnt die Druck-Datei mit <parameter>&lt;1B &gt;%-12345X</parameter> oder
<parameter>&lt;escape&gt;%-12345X</parameter> anstatt von <parameter>%!PS</parameter>. Das führt dazu, daß der
CUPS-Daemon die eintreffende Datei automatisch als druckfertig kennzeichnet, und sie nicht durch den Filter
<parameter>pstops</parameter> schickt (technisch ausgedrückt, wird die Datei nicht als der generische
MIME-Typ <indexterm><primary>application/postscript</primary></indexterm>
<parameter>application/postscript</parameter>, sondern als MIME-Typ
<indexterm><primary>application/cups.vnd-postscript</primary></indexterm>
<parameter>application/cups.vnd-postscript</parameter> eingestuft), was daher auch dazu führt, daß die
Seitenzählung in <parameter>/var/log/cups/page_log</parameter> nicht die exakte Seitenanzahl erhält; stattdessen
wird die Dummy-Seitenzahl <quote>1</quote> in einem Standard-Setup protokolliert).</para></listitem>

<listitem><para>
Der Adobe-Treiber hat mehr Optionen, um das von ihm generierte PostScript falsch zu konfigurieren (wie z.B. es
versehentlich auf <guilabel>Optimize for Speed</guilabel> anstatt auf
<guilabel>Optimize for Portability</guilabel> zu setzen, was dazu führen kann, daß CUPS es nicht mehr
verarbeiten kann).</para></listitem>

<listitem><para>
Die Ausgabe des CUPS-PostScript-Treibers, der von Windows-Clients an den CUPS-Server gesendet wird, wird
garantiert als generischer MIME-Typ <parameter>application/postscript</parameter> typisiert, daher auch
zuverlässig durch den Filter <parameter>pstops</parameter> geschickt, was die korrekte Seitenzahl in
<filename>page_log</filename> ergibt, für Abrechnungs- und Quota-Zwecke.
</para></listitem>

<listitem><para>
Der CUPS-PostScript-Treiber unterstützt das Senden von zusätzlichen Standard-Druck-Optionen (IPP) durch
Windows NT/200x/XP-Clients. Solche zusätzlichen Druck-Optionen sind: das Benennen der Standard-CUPS
<emphasis>Banner Seiten</emphasis> (oder der benutzerdefinierten, sollten sie zum Zeitpunkt des Treiber-Downloads
installiert sein), unter Verwendung der CUPS-Option page-label, das Setzen einer Auftragspriorität, und das
Setzen einer Ausführungszeit des Drucks (mit der Option, daß zukünftig noch weitere IPP-Auftrags-Attribute
unterstützt werden).</para></listitem>

<listitem><para>
Der CUPS-PostScript-Treiber unterstützt das Einschliessen von neuen
<parameter>*cupsJobTicket</parameter>-Parametern am Anfang der PostScript-Datei (welche in Zukunft für
alle möglichen nützlichen Erweiterungen auf CUPS-Seite verwendet werden können, aber keinerlei andere
Anwendungen stören werden, da diese sie einfach als Kommentar betrachten und ignorieren werden).</para></listitem>

<listitem><para>
Der CUPS-PostScript-Treiber wird das Herzstück des voll ausgewachsenen CUPS-IPP-Clients für Windows NT/200x/XP
sein, der bald veröffentlicht werden soll (möglicherweise parallel zur ersten Beta-Release von CUPS 1.2).
</para></listitem>
</itemizedlist>

</sect2>

<sect2>
<title>Das Ausführen von cupsaddsmb (im Quiet Mode)</title>


<para>
<indexterm><primary>cupsaddsmb</primary></indexterm>
<indexterm><primary>point 'n' print</primary></indexterm>
Der Befehl <command>cupsaddsmb</command> kopiert die benötigten Dateien in Ihre Freigabe
<smbconfsection>[print$]</smbconfsection>. Zusätzlich wird das mit dem Drucker assoziierte PPD von
<filename>/etc/cups/ppd/</filename> in <smbconfsection>[print$]</smbconfsection> kopiert. Dort warten diese
Dateien auf praktische Windows-Client-Installationen via Point'n'Print. Bevor wir den Befehl erfolgreich
ausführen können, müssen wir sicher sein, daß wir uns am Samba-Server authentifizieren können. Wenn Sie ein
kleines Netzwerk haben, verwenden Sie möglicherweise user-level-Sicherheit
(<smbconfoption><name>security</name><value>user</value></smbconfoption>).
</para>

<para>
Hier ein Beispiel für ein erfolgreich ausgeführtes <command>cupsaddsmb</command>:
</para>

<para><screen>
&rootprompt;<userinput>cupsaddsmb -U root infotec_IS2027</userinput>
Password for root required to access localhost via Samba: <userinput>['secret']</userinput>
</screen></para>

<para>
Um <emphasis>alle</emphasis> Drucker und Treiber freizugeben, verwenden Sie den Parameter <option>-a</option>
anstatt des Drucker-Namens. Da <command>cupsaddsmb</command> die Druckertreiber an Samba
<quote>exportiert</quote>, sollte es offensichlich sein, daß es nur für Queues funktioniert, mit denen ein
CUPS-Treiber assoziiert ist.
</para>
</sect2>

<sect2>
<title>Das Auführen von cupsaddsmb mit "Verbose Output"</title>


<para>
<indexterm><primary>cupsaddsmb</primary></indexterm>
Vielleicht wollen Sie ja sehen, was passiert. Verwenden Sie den Parameter <option>-v</option>, um einen
vollständigeren Report über das Geschehene zu erhalten. Das folgende Beispiel wurde für bessere Lesbarkeit
editiert; alle <quote>\</quote> an den Zeilenenden zeigen an, daß ich einen zusätzlichen Zeilenumbruch samt
Einrückung hinzugefügt habe:
</para>

<warning><para>
Sie werden das root-Passwort für das Samba-Konto am Bildschirm angezeigt bekommen.
</para></warning>

<para>
	
<indexterm><primary>rpcclient</primary><secondary>adddriver</secondary></indexterm>
<indexterm><primary>rpcclient</primary><secondary>setdriver</secondary></indexterm>
	<screen>
&rootprompt;<userinput>cupsaddsmb -U root -v infotec_2105</userinput>
Password for root required to access localhost via &example.server.samba;:
Running command: smbclient //localhost/print\$ -N -U'root%secret' \
    -c 'mkdir W32X86; \
    put /var/spool/cups/tmp/3e98bf2d333b5 W32X86/infotec_2105.ppd; \
	put /usr/share/cups/drivers/cupsdrvr.dll W32X86/cupsdrvr.dll; \
    put /usr/share/cups/drivers/cupsui.dll W32X86/cupsui.dll; \
    put /usr/share/cups/drivers/cups.hlp W32X86/cups.hlp'
added interface ip=10.160.51.60 bcast=10.160.51.255 nmask=255.255.252.0
Domain=[CUPS-PRINT] OS=[UNIX] Server=[Samba 2.2.7a]
NT_STATUS_OBJECT_NAME_COLLISION making remote directory \W32X86
putting file /var/spool/cups/tmp/3e98bf2d333b5 as \W32X86/infotec_2105.ppd
putting file /usr/share/cups/drivers/cupsdrvr.dll as \W32X86/cupsdrvr.dll
putting file /usr/share/cups/drivers/cupsui.dll as \W32X86/cupsui.dll
putting file /usr/share/cups/drivers/cups.hlp as \W32X86/cups.hlp

Running command: rpcclient localhost -N -U'root%secret'
   -c 'adddriver "Windows NT x86"   \
   "infotec_2105:cupsdrvr.dll:infotec_2105.ppd:cupsui.dll:cups.hlp:NULL: \
    RAW:NULL"'
cmd = adddriver "Windows NT x86" \
   "infotec_2105:cupsdrvr.dll:infotec_2105.ppd:cupsui.dll:cups.hlp:NULL: \
	RAW:NULL"
Printer Driver infotec_2105 successfully installed.

Running command: smbclient //localhost/print\$ -N -U'root%secret' \
-c 'mkdir WIN40; \
    put /var/spool/cups/tmp/3e98bf2d333b5 WIN40/infotec_2105.PPD; \
	put /usr/share/cups/drivers/ADFONTS.MFM WIN40/ADFONTS.MFM;   \
    put /usr/share/cups/drivers/ADOBEPS4.DRV WIN40/ADOBEPS4.DRV; \
    put /usr/share/cups/drivers/ADOBEPS4.HLP WIN40/ADOBEPS4.HLP; \
    put /usr/share/cups/drivers/DEFPRTR2.PPD WIN40/DEFPRTR2.PPD; \
	put /usr/share/cups/drivers/ICONLIB.DLL WIN40/ICONLIB.DLL; \
	put /usr/share/cups/drivers/PSMON.DLL WIN40/PSMON.DLL;'
  added interface ip=10.160.51.60 bcast=10.160.51.255 nmask=255.255.252.0
  Domain=[CUPS-PRINT] OS=[UNIX] Server=[Samba 2.2.7a]
  NT_STATUS_OBJECT_NAME_COLLISION making remote directory \WIN40
  putting file /var/spool/cups/tmp/3e98bf2d333b5 as \WIN40/infotec_2105.PPD
  putting file /usr/share/cups/drivers/ADFONTS.MFM as \WIN40/ADFONTS.MFM
  putting file /usr/share/cups/drivers/ADOBEPS4.DRV as \WIN40/ADOBEPS4.DRV
  putting file /usr/share/cups/drivers/ADOBEPS4.HLP as \WIN40/ADOBEPS4.HLP
  putting file /usr/share/cups/drivers/DEFPRTR2.PPD as \WIN40/DEFPRTR2.PPD
  putting file /usr/share/cups/drivers/ICONLIB.DLL as \WIN40/ICONLIB.DLL
  putting file /usr/share/cups/drivers/PSMON.DLL as \WIN40/PSMON.DLL

  Running command: rpcclient localhost -N -U'root%secret' \
   -c 'adddriver "Windows 4.0"      \
   "infotec_2105:ADOBEPS4.DRV:infotec_2105.PPD:NULL:ADOBEPS4.HLP: \
   PSMON.DLL:RAW:ADOBEPS4.DRV,infotec_2105.PPD,ADOBEPS4.HLP,PSMON.DLL, \
    ADFONTS.MFM,DEFPRTR2.PPD,ICONLIB.DLL"'
	cmd = adddriver "Windows 4.0" "infotec_2105:ADOBEPS4.DRV:\
	infotec_2105.PPD:NULL:ADOBEPS4.HLP:PSMON.DLL:RAW:ADOBEPS4.DRV,\
	infotec_2105.PPD,ADOBEPS4.HLP,PSMON.DLL,ADFONTS.MFM,DEFPRTR2.PPD,\
	ICONLIB.DLL"
  Printer Driver infotec_2105 successfully installed.

  Running command: rpcclient localhost -N -U'root%secret'  \
   -c 'setdriver infotec_2105 infotec_2105'
  cmd = setdriver infotec_2105 infotec_2105
  Successfully set infotec_2105 to driver infotec_2105.

</screen></para>

<para>
Wenn Sie genau hinsehen, werden Sie entdecken, daß Ihr root-Passwort unverschlüsselt übers Netz übertragen wurde,
also geben Sie Acht! Wenn Sie weiter lesen, entdecken Sie Fehlermeldungen wie
<?latex \linebreak ?>NT_STATUS_OBJECT_NAME_COLLISION . Diese treten auf, weil die Verzeichnisse WIN40 und W32X86
bereits in der Freigabe <smbconfsection>[print$]</smbconfsection> existiert haben (von einer früheren
Treiber-Installation). Diese Meldungen sind in diesem Zusammenhang harmlos.
</para>
</sect2>

<sect2>
<title>cupsaddsmb verstehen</title>


<para>
<indexterm><primary>cupsaddsmb</primary></indexterm>
Was ist passiert? Was hat <command>cupsaddsmb</command> gemacht? Es gibt fünf Stufen in dieser Prozedur:
</para>

<orderedlist>
	<listitem><para>
	<indexterm><primary>IPP</primary></indexterm>
	Rufe den CUPS-Server via IPP und frage die Treiber-Dateien und die PPD-Datei für den angegebenen
	Drucker ab.</para></listitem>

	<listitem><para>Speichere die Dateien temporär im lokalen TEMPDIR (wie in <filename>cupsd.conf</filename>
	angegeben).</para></listitem>

	<listitem><para>Verbinde Dich mittels smbclient mit der Freigabe
	<smbconfsection>[print$]</smbconfsection> auf dem Samba-Server und kopiere die Dateien in das dortige
	Unterverzeichnis WIN40/ (für Windows 9x/Me) bzw. W32X86/ (für Windows NT/200x/XP).</para></listitem>

	<listitem><para>
	<indexterm><primary>rpcclient</primary><secondary>adddriver</secondary></indexterm>
	Verbinde Dich via rpcclient mit dem Samba-Server und führe den Befehl <command>adddriver</command> mit
	den korrekten Parametern aus.</para></listitem>

	<listitem><para>
	<indexterm><primary>rpcclient</primary><secondary>setdriver</secondary></indexterm>
	Verbinde Dich ein zweites Mal via rpcclient mit dem Samba-Server und führe den Befehl
	<command>setdriver</command> aus.</para></listitem>
</orderedlist>

<note>
<para>
Sie können das Werkzeug <command>cupsaddsmb</command> auch mit Parametern ausführen, um einen Host als
Samba-Host und einen zweiten Host als CUPS-Host anzugeben. Besonders wenn Sie ein weitergehendes Verständnis
aufbauen wollen, ist es sinnvoll, dies zu versuchen, und klar zu sehen, was passiert (obwohl in der Praxis
die meisten Installationen Samba- und CUPS-Server auf derselben Maschine haben werden):
</para>

<para><screen>
&rootprompt;<userinput>cupsaddsmb -H sambaserver -h cupsserver -v drucker</userinput>
</screen></para>
</note>
</sect2>

<sect2>
<title>Wie man erkennt, daß cupsaddsmb erfolgreich war</title>

<para>
Sie <emphasis>müssen</emphasis> immer überprüfen, daß das Werkzeug in allen Bereichen erfolgreich gearbeitet hat.
Sie brauchen zumindest diese drei Meldungen in der Ausgabe von cupsaddsmb:
</para>

<orderedlist>

<listitem><para><emphasis>Printer Driver infotec_2105 successfully
installed.</emphasis> # (für die W32X86 == Windows NT/200x/XP Architektur).</para></listitem>

<listitem><para><emphasis>Printer Driver infotec_2105 successfully
installed.</emphasis> # (für die WIN40 == Windows 9x/Me Architektur).</para></listitem>

<listitem><para><emphasis>Successfully set [printerXPZ] to driver
[printerXYZ].</emphasis></para></listitem>
</orderedlist>

<para>
Diese Meldungen sind eventuell nicht ganz leicht in der gesamten Ausgabe zu erkennen. Wenn Sie
<command>cupsaddsmb</command> mit dem Parameter <option>-a</option> ausführen (der versucht,
<emphasis>alle</emphasis> aktiven CUPS-Drucker-Treiber für den Download vorzubereiten), könnten Sie übersehen,
daß einzelne Druckertreiber Probleme bei der Installation hatten. Hier hilft eine Umleitung der Ausgabe bei der
nachträglichen Analyse der Ergebnisse.
</para>

<para>
Wenn Sie das erhalten:
<screen>
SetPrinter call failed!
result was WERR_ACCESS_DENIED
</screen>
bedeutet das, daß Sie eventuell <smbconfoption><name>use client driver</name><value>yes</value></smbconfoption>
für diesen Drucker gesetzt haben. Setzen Sie dies auf <quote>no</quote>, das wird das Problem lösen.
Sehen Sie man samba(5) für die Erklärung des Parameters <parameter>use client driver</parameter>.
</para>

<note><para>
Es ist unmöglich, irgendeine Ausgabe zu sehen, wenn Sie <command>cupsaddsmb</command> nicht im "verbose mode"
ausführen. Daher empfehlen wir ausdrücklich, den voreingestellten "quiet mode" nicht zu verwenden. Dieser
verbirgt alle eventuell auftretenden Probleme vor Ihnen.
</para></note>
</sect2>

<sect2>
<title>cupsaddsmb mit einem Samba PDC</title>

<para>
<indexterm><primary>cupsaddsmb</primary></indexterm>
Schaffen Sie es nicht, den Standard-Befehl <command>cupsaddsmb</command> auf einem Samba-PDC erfolgreich
auszuführen? Werden Sie immer und immer wieder nach dem Passwort gefragt, und der Befehl wird nicht einmal
gestartet? Versuchen Sie eine dieser Varianten:
</para>

<para><screen>
&rootprompt;<userinput>cupsaddsmb -U &example.workgroup;\\root -v druckername</userinput>
&rootprompt;<userinput>cupsaddsmb -H &example.pdc.samba; -U &example.workgroup;\\root -v druckername</userinput>
&rootprompt;<userinput>cupsaddsmb -H &example.pdc.samba; -U &example.workgroup;\\root -h cups-server -v druckername</userinput>
</screen></para>

<para>
(Beachten Sie die zwei Backslashes: der erste wird benötigt, um das <quote>escaping</quote> des zweiten zu
bewirken).
</para>
</sect2>

<sect2>
<title>Flußdiagramm für cupsaddsmb </title>

<para>
<indexterm><primary>cupsaddsmb</primary></indexterm>
<link linkend="small14">cupsaddsmb Flußdiagramm.</link> zeigt eine grafische Darstellung der Abläufe, Befehlsketten,
und Datenflüsse des Befehls <command>cupaddsmb</command>. Nochmals zur Erinnerung: cupsaddsmb ist nicht gedacht
für und arbeitet nicht mit Raw-Queues!
</para>

<para>
	<image id="small14"><imagedescription>cupsaddsmb Flußdiagramm.</imagedescription>
		<imagefile>14small</imagefile></image>
</para>
</sect2>

<sect2>
<title>Das Installieren des PostScript-Treibers auf einem Client</title>

<para>
<indexterm><primary>point 'n' print</primary></indexterm>
Nachdem <command>cupsaddsmb</command> beendet wurde, ist Ihr Treiber vorbereitet, um von den Clients verwendet
zu werden. Hier sind die Schritte, die Sie durchführen müssen, um den Treiber via Point'n'Print herunterzuladen
und zu installieren. Auf dem Windows-Client wählen Sie den CUPS/Samba-Server:
</para>

<itemizedlist>

<listitem><para>
<indexterm><primary>"Printers" folder</primary></indexterm>
Öffnen Sie die Freigabe <guilabel>Drucker und Faxgeräte</guilabel> von Samba in der Netzwerkumgebung.
</para></listitem>

<listitem><para>Klicken Sie mit der rechten Maustaste auf den gewünschten Drucker.
</para></listitem>

<listitem><para>Im sich öffnenden Kontext-Menü wählen Sie
<guimenuitem>Installieren...</guimenuitem> oder
<guimenuitem>Verbinden...</guimenuitem> (abhängig von der verwendeten Windows-Version).
</para></listitem>
</itemizedlist>

<para>
Ein paar Sekunden später sollte es einen neuen Drucker im <emphasis>lokalen</emphasis> Ordner
<guilabel>Drucker und Faxgeräte</guilabel> Ihres Clients geben. Unter Windows XP wird er der Namenskonvention
von <emphasis>DruckerName auf SambaServer</emphasis> entsprechen. (In meinem momentanen Fall ist es
"infotec_2105 auf kde-bitshop"). Wenn Sie diesen Drucker testen wollen, und Ihren ersten Auftrag aus einer
Anwendung wie Winword senden wollen, erscheint der neue Drucker als Eintrag #
<filename>\\SambaServer\DruckerName</filename> im DropDown-Menü der verfügbaren Drucker.
</para>

<para>
<indexterm><primary>PPD</primary></indexterm>
<command>cupsaddsmb</command> arbeitet nur zuverlässig mit CUPS-Versionen ab 1.1.15 und Samba-Versionen ab 2.2.4.
Wenn es nicht funktioniert, oder wenn der automatische Drucker-Download auf die Clients nicht erfolgreich
verläuft, können Sie den CUPS-Treiber immer noch manuell über den Adobe-PostScript-Treiber auf den Clients
installieren. Dann lassen Sie die Queue auf die Samba-Freigabe zeigen, um eine UNC-Verbindung zu erreichen:
</para>

<para><screen>
&dosprompt;<userinput>net use lpt1: \\sambaserver\druckerfreigabe /user:ntadmin</userinput>
</screen></para>

<para>
wenn Sie die CUPS Netzwerk-RIP-Funktionalitäten nutzen möchten. (Beachten Sie, daß der Benutzer
<quote>ntadmin</quote> ein gültiger Samba-Benutzer mit den erforderlichen Rechten sein muß.) Dies installiert
die Druckerverbindung in klassischer <emphasis>LanMan</emphasis>-Weise (und verwendet dabei kein MS-RPC).
</para>
</sect2>

<sect2>
<title>Das Vermeiden von kritischen PostScript-Treiber-Einstellungen auf dem Client</title>

<para>
Das Drucken funktioniert, aber es gibt immer noch Probleme. Die meisten Aufträge drucken sehr gut, aber einige
drucken gar nicht. Manche Aufträge haben Problem mit den Schriftarten, die nicht besonders gut aussehen.
Manche Aufträge drucken schnell, manche sind unglaublich langsam. Viele dieser Probleme können minimiert oder
überhaupt komplett beseitigt werden, wenn Sie ein paar Richtlinien befolgen. Erinnern Sie sich, wenn Ihr
Drucker nicht PostScript-befähigt ist, beschicken Sie Ihre Ghostscript-Installation auf Ihrem CUPS-Host mit dem
Output, die die Einstellungen des Treibers auf Ihrem Client erzeugen. Behandeln Sie Ghostscript gut:
</para>

<itemizedlist>
<listitem><para>Vermeiden Sie die PostScript-Option: Optimize for Speed. Verwenden Sie stattdessen die
Einstellung Optimize for Portability (Adobe PostScript-Treiber).</para></listitem>

<listitem><para>Verwenden Sie nicht die Einstellung Page Independence: NO. Verwenden Sie stattdessen die
Einstellung Page Independence: YES (CUPS PostScript-Treiber).</para></listitem>

<listitem><para>Empfohlen wird die True Type Font Downloading Option: Native True Type statt Automatic and
Outline; Sie sollten unter allen Umständen die Option: Bitmap vermeiden (Adobe PostScript-Treiber).
</para></listitem>

<listitem><para>Wählen Sie True Type Font: Download as Softfont into Printer anstatt des voreingestellten
Replace by Device Font (für ausgefallene Schriftarten kann es sein, daß Sie es wieder umstellen müssen, um
überhaupt einen Ausdruck zu erhalten) (Adobe).</para></listitem>

<listitem><para>Manchmal können Sie das PostScript Language Level wählen: Bei Problemen können Sie 2 anstatt von
3 versuchen (das neueste ESP Ghostscript kann sehr gut mit Level 3 PostScript umgehen) (Adobe).</para></listitem>

<listitem><para>Sagen Sie Yes zum PostScript Error Handler (Adobe).</para></listitem>
</itemizedlist>
</sect2>
</sect1>

<sect1>
<title>Das manuelle Installieren von PostScript-Treiber-Dateien mittels rpcclient</title>

<para>
Natürlich können Sie alle in cupsaddsmb eingebetteten Befehle selbst ausführen, einen nach dem anderen, und damit
die Treiber-Dateien hochladen und für zukünftige Downloads vorbereiten.
</para>

<orderedlist>
<listitem><para>Bereiten Sie Samba vor (Eine CUPS-Queue mit dem Namen des Druckers sollte bereits existieren,
wir stellen hier nur den Treiber zur Verfügung).
</para></listitem>

<listitem><para>Kopieren Sie alle Dateien nach
		<smbconfsection>[print$]</smbconfsection>.</para></listitem>

<listitem><para>
<indexterm><primary>rpcclient</primary><secondary>adddriver</secondary></indexterm>
Führen Sie <command>rpcclient adddriver</command> aus
(für jede Client-Architektur, die Sie unterstützen wollen).</para></listitem>

<listitem><para>
<indexterm><primary>rpcclient</primary><secondary>setdriver</secondary></indexterm>
Führen Sie <command>rpcclient
setdriver</command> aus.</para></listitem>
</orderedlist>

<para>
<indexterm><primary>rpcclient</primary><secondary>enumports</secondary></indexterm>
<indexterm><primary>rpcclient</primary><secondary>enumprinters</secondary></indexterm>
<indexterm><primary>rpcclient</primary><secondary>enumdrivers</secondary></indexterm>
<indexterm><primary>rpcclient</primary><secondary>setdriver</secondary></indexterm>
<indexterm><primary>rpcclient</primary><secondary>adddriver</secondary></indexterm>
Wir werden das jetzt tun. Lesen Sie zuerst die manpage zu <parameter>rpcclient</parameter>, um eine erste
Vorstellung zu erhalten. Sehen Sie sich die druckbezogenen Sub-Befehle an.
<command>enumprinters</command>,
<command>enumdrivers</command>, <command>enumports</command>,
<command>adddriver</command>, <command>setdriver</command> sind unter den interessantesten davon.
<parameter>rpcclient</parameter> implementiert einen wichtigen Teil des MS-RPC-Protokolls. Sie können es
verwenden, um einen Windows NT (oder 200x/XP) PC abzufragen und zu steuern. MS-RPC wird von Windows-Clients
verwendet (neben anderen Dingen), um die Point'n'Print-Features zu nutzen. Samba kann dies mittlerweile auch
"nachahmen".
</para>

<sect2>
<title>Ein Blick in die man-page zu rpcclient</title>

<para>
Lassen Sie uns zuerst die man-page zu <parameter>rpcclient</parameter> prüfen. Hier sind zwei relevante
Abschnitte:
</para>

<para>
<command>adddriver &lt;arch&gt; &lt;config&gt;</command> Führe ein
<command>AddPrinterDriver()</command> RPC aus, um den Druckertreiber auf dem Server zu installieren.
Die Treiber sollten bereits im Verzeichnis, das von <command>getdriverdir</command> zurückgegeben wird,
existieren. Mögliche Werte für <parameter>arch</parameter> sind dieselben wie für
<command>getdriverdir</command>. Der Parameter <parameter>config</parameter> ist wie folgt definiert:
</para>
		
<para><screen>
Long Printer Name:\
Driver File Name:\
Data File Name:\
Config File Name:\
Help File Name:\
Language Monitor Name:\
Default Data Type:\
Comma Separated list of Files
</screen></para>

<para>Alle leeren Felder sollten als String <quote>NULL</quote> angegeben werden. </para>

<para>Samba muß das Konzept der Druck-Monitore nicht unterstützen, da dieses nur auf lokale Drucker anzuwenden
ist, deren Treiber eine bi-direktionale Verbindung zur Kommunikation mit dem Drucker nutzen können. Dieses
Feld sollte <quote>NULL</quote> sein. Auf einem entfernten NT-Druck-Server muß der Druck-Monitor für einen
Treiber bereits installiert sein, bevor man den Treiber hinzufügt, oder das RPC wird scheitern.
</para>

<para>
<command>setdriver &lt;printername&gt; &lt;drivername&gt;</command>
Führe einen Befehl <command>SetPrinter()</command> aus, um den mit einem Drucker assoziierten Treiber zu
aktualisieren. Der Druckertreiber muß bereits korrekt auf dem Druck-Server installiert sein.
</para>

<para>Beachten Sie auch die Befehle <command>enumprinters</command> und <command>enumdrivers</command>
für das Abfragen einer Liste von installierten Druckern und Treibern.
</para>

</sect2>

<sect2>
<title>Die rpcclient man-page verstehen</title>

<para>
Das <emphasis>exakte</emphasis> Format wird nicht allzu klar von der man-page beschrieben, da Sie mit einigen
Parametern umgehen müssen, die Leerzeichen enthalten. Hier ist eine bessere Beschreibung dafür. Wir haben
den Befehl mit Zeilenumbrüchen versehen, und die Umbrüche mit <quote>\</quote> gekennzeichnet. Üblicherweise
würden Sie diesen Befehl in einer Zeile eingeben, ohne die Umbrüche:
<indexterm><primary>rpcclient</primary><secondary>adddriver</secondary></indexterm>
</para>

<para><screen>
 adddriver "Architecture" \
           "LongPrinterName:DriverFile:DataFile:ConfigFile:HelpFile:\
           LanguageMonitorFile:DataType:ListOfFiles,Comma-separated"
</screen></para>

<para>
Was die man-page als ein simples <parameter>&lt;config&gt;</parameter>-Schlüsselwort bezeichnet, besteht in
Wirklichkeit aus acht durch Doppelpunkte getrennten Feldern. Das letzte Feld kann mehrere (in manchen sehr
ausgefallenen Fällen bis zu 20 zusätzliche) Dateinamen enthalten. Dies mag anfangs sehr verwirrend klingen.
Was die man-pages als <quote>LongPrinterName</quote> bezeichnen, sollte in der Realität als
<quote>Driver Name</quote> bezeichnet werden. Sie können es bezeichnen, wie Sie wollen, solange Sie diesen
Namen später im Befehl <command>rpcclient ... setdriver</command> wieder verwenden. Aus praktischen Gründen
empfiehlt es sich, den Treiber so zu benennen wie den Drucker.
</para>

<para>
Es ist überhaupt nicht einfach. Ich höre Sie fragen:
<quote>Wie weiß ich, welche Dateien Driver File</quote>, <quote>Data File</quote>, <quote>Config File</quote>,
<quote>Help File</quote> und <quote>Language Monitor File" im jeweiligen Fall sind?</quote>
&smbmdash; Um eine Antwort zu finden, können Sie sich ja mal ansehen, wie eine Windows NT Box mit einem
freigegebenen Drucker uns diese Dateien anbietet. Erinnern Sie sich, daß diese ganze Prozedur vom Samba-Team
durch Abhören des Verkehrs, der von Windows-Computern im Netzwerk verursacht wird, entwickelt werden muß. Wir
können uns nun genauso einer Windows Box zuwenden und auf sie von einer UNIX-Workstation aus zugreifen. Wir
werden sie mittels <command>rpcclient</command> abfragen, um zu sehen, was sie uns erzählt und versuchen, die
man-page klarer zu verstehen, die wir gerade gelesen haben.
</para>
</sect2>

<sect2>
<title>Ein Beispiel durch Abfragen einer Windows Box erstellen</title>

<para>
	<indexterm><primary>rpcclient</primary><secondary>getdriver</secondary></indexterm>
	<indexterm><primary>rpcclient</primary><secondary>getprinter</secondary></indexterm>
Wir könnten <command>rpcclient</command> mit einem
<command>getdriver</command> oder <command>getprinter</command> Sub-Befehl (in level 3 Ausführlichkeit)
an die Windows Box absetzen. Setzen Sie sich einfach an eine UNIX oder Linux Workstation mit installierten
Samba-Werkzeugen und tippen folgenden Befehl:
</para>

<para><screen>
&rootprompt;<userinput>rpcclient -U'user%secret' NT-SERVER -c 'getdriver printername 3'</userinput>
</screen></para>

<para>
Aus dem Ergebnis sollte klarwerden, welche Detai welche ist. Hier ein Beispiel aus meiner Installation:
</para>

<para>
<indexterm><primary>rpcclient</primary><secondary>getdriver</secondary></indexterm>
	<screen>
&rootprompt;<userinput>rpcclient -U'Danka%xxxx' W200xSERVER \
	-c'getdriver "DANKA InfoStream Virtual Printer" 3'</userinput>
 cmd = getdriver "DANKA InfoStream Virtual Printer" 3

 [Windows NT x86]
 Printer Driver Info 3:
         Version: [2]
         Driver Name: [DANKA InfoStream]
         Architecture: [Windows NT x86]
         Driver Path: [C:\WINNT\System32\spool\DRIVERS\W32X86\2\PSCRIPT.DLL]
         Datafile: [C:\WINNT\System32\spool\DRIVERS\W32X86\2\INFOSTRM.PPD]
         Configfile: [C:\WINNT\System32\spool\DRIVERS\W32X86\2\PSCRPTUI.DLL]
         Helpfile: [C:\WINNT\System32\spool\DRIVERS\W32X86\2\PSCRIPT.HLP]

         Dependentfiles: []
         Dependentfiles: []
         Dependentfiles: []
         Dependentfiles: []
         Dependentfiles: []
         Dependentfiles: []
         Dependentfiles: []

         Monitorname: []
         Defaultdatatype: []

</screen></para>

<para>
Manche Druckertreiber listen zusätzliche Dateien unter der Bezeichnung
<parameter>Dependentfiles</parameter> und diese würden im letzten Feld
<parameter>ListOfFiles,Comma-separated</parameter> angeführt werden. Für den CUPS-PostScript-Treiber brauchen
wir keine (und auch für die Adobe-Treiber würden wir keine brauchen), daher erhält dieses Feld den Eintrag
<quote>NULL</quote>.
</para>
</sect2>

<sect2>
<title>Anforderungen für erfolgreiches Ausführen von adddriver und setdriver</title>

<para>
>Aus der man-page (und der oben zitierten Ausgabe von <command>cupsaddsmb</command>) wird klar, daß Sie bestimmte
Bedingungen erfüllen müssen, um das manuelle Hochladen und Initialisieren von Treibern erfolgreich zu
ermöglichen. Die beiden Sub-Befehle <command>rpcclient</command> und
<indexterm><primary>rpcclient</primary><secondary>adddriver</secondary></indexterm> (<command>adddriver</command>
und <command>setdriver</command>) müssen folgende Bedingungen erfüllen, um erfolgreich abzuschliessen:
</para>
<itemizedlist>

<listitem><para>Sie sind als <smbconfoption><name>printer admin</name></smbconfoption> oder root verbunden
(dies ist <emphasis>nicht</emphasis> die Gruppe <quote>Printer Operators</quote> in NT, sondern die Gruppe
<emphasis>printer admin</emphasis>, wie sie im Abschnitt
<smbconfsection>[global]</smbconfsection> von &smb.conf; definiert wurde).</para></listitem>

<listitem><para>Kopieren Sie alle erforderlichen Treiber-Dateien nach
<filename>\\SAMBA\print$\w32x86</filename> und
<filename>\\SAMBA\print$\win40</filename>. Diese werden später in den Unterverzeichnissen
<quote>0</quote> respektive <quote>2</quote> landen. Für den Moment geben Sie sie <emphasis>nicht</emphasis>
dorthin, sie werden automatisch vom Sub-Befehl <command>adddriver</command> verwendet. (Wenn Sie
<command>smbclient</command> dazu verwenden, die Treiber-Dateien in die Freigabe zu plazieren, beachten Sie, daß
Sie das Zeichen <quote>$</quote> <quote>escapen</quote>:
<command>smbclient //sambaserver/print\$ -U root.</command>)</para></listitem>

<listitem><para>Der Benutzer, als der Sie sich verbinden, muß schreibberechtigt für die Freigabe
<smbconfsection>[print$]</smbconfsection> sein und dort Verzeichnisse anlegen dürfen.
</para></listitem>

<listitem><para>Der Drucker, für den Sie die Windows-Clients vorbereiten wollen, muß bereits in CUPS installiert
sein.
</para></listitem>

<listitem><para>
	<indexterm><primary>rpcclient</primary><secondary>setdriver</secondary></indexterm>
	<indexterm><primary>rpcclient</primary><secondary>enumprinters</secondary></indexterm>
Der CUPS-Drucker muß Samba bekannt sein, andernfalls scheitert der Sub-Befehl <command>setdriver</command>
mit dem Fehler NT_STATUS_UNSUCCESSFUL. Um zu prüfen, ob der Drucker Samba bekannt ist, können Sie den
Sub-Befehl <command>enumprinters</command> von <command>rpcclient</command> verwenden. Ein seit langem
vorhandener Bug verhinderte ein sauberes Update der Drucker-Liste, bis jeder smbd-Prozess ein SIGHUP empfangen
hatte oder neu gestartet wurde. Erinnern Sie sich daran, falls Sie den CUPS-Drucker gerade erst angelegt haben
und auf Probleme stossen: Versuchen Sie, Samba neu zu starten.
</para></listitem>
</itemizedlist>
</sect2>

<sect2>
<title>Manuelle Treiber-Installation in 15 Schritten</title>

<para>
Wir werden jetzt einen Drucker-Treiber installieren, indem wir manuell alle erforderlichen Befehle ausführen.
Da dies zuerst als ziemlich komplizierter Prozess erscheinen mag, gehen wir die Prozedur Schritt für Schritt
durch, und erklären jede einzelne Aktion, die vorkommt.
</para>

<procedure>
	<title>Manuelle Treiber-Installation</title>

<step>
<title>Den Drucker in CUPS installieren.</title>

<para><screen>
&rootprompt;<userinput>lpadmin -p mysmbtstprn -v socket://10.160.51.131:9100 -E \
			-P canonIR85.ppd</userinput>
</screen></para>

<para>
Dies installiert den Drucker mit dem Namen <parameter>mysmbtstprn</parameter> im CUPS-System. Der Drucker wird
über eine Socket-Verbindung (auch als JetDirect oder Direct TCP/IP bekannt) angesprochen. Sie müssen für diesen
Schritt root sein.
</para>
</step>

<step>
<title>(Optional) Prüfen, ob der Drucker von Samba erkannt wird.</title>

<para>
<indexterm><primary>rpcclient</primary><secondary>enumprinters</secondary></indexterm>
<screen>
	&rootprompt;<userinput>rpcclient -Uroot%xxxx -c 'enumprinters' localhost \
  | grep -C2 mysmbtstprn</userinput>
flags:[0x800000]
name:[\\kde-bitshop\mysmbtstprn]
description:[\\kde-bitshop\mysmbtstprn,,mysmbtstprn]
comment:[mysmbtstprn]
</screen></para>

<para>
Dies sollte den Drucker in der Liste anzeigen. Wenn nicht, stoppen Sie den Samba-Daemon (smbd) und starten Sie
ihn neu, oder senden Sie ein HUP-Signal:
<screen>
&rootprompt;<userinput>kill -HUP `pidof smbd`</userinput>
</screen>
Prüfen Sie nochmals. Korrigieren Sie und wiederholen Sie dies, bis zum Erfolg. Beachten Sie das
<quote>leere</quote> Feld zwischen den beiden Kommas in der Zeile <quote>description</quote>. Der Treibername
würde hier aufscheinen, wenn es bereits einen gäbe. Sie müssen das Samba-Passwort von root kennen (wie es vom
Befehl <command>smbpasswd</command> gesetzt wurde), um diesen Schritt und die meisten der folgenden Schritte
ausführen zu können. Alternativ dazu können Sie sich als einer der Benutzer authentifizieren, die in der
<quote>write list</quote> für <smbconfsection>[print$]</smbconfsection> in &smb.conf; definiert sind.
</para>
</step>

<step>
<title>(Optional) Prüfen, ob Samba einen Treiber für den Drucker kennt.</title>

<para>
	<indexterm><primary>rpcclient</primary><secondary>getprinter</secondary></indexterm>
	<indexterm><primary>rpcclient</primary><secondary>getdriver</secondary></indexterm>
	<screen>
&rootprompt;<userinput>rpcclient -Uroot%xxxx -c 'getprinter mysmbtstprn 2' localhost \
			| grep driver </userinput>
drivername:[]

&rootprompt;<userinput>rpcclient -Uroot%xxxx -c 'getprinter mysmbtstprn 2' localhost \
	| grep -C4 driv</userinput>
servername:[\\kde-bitshop]
printername:[\\kde-bitshop\mysmbtstprn]
sharename:[mysmbtstprn]
portname:[Samba Printer Port]
drivername:[]
comment:[mysmbtstprn]
location:[]
sepfile:[]
printprocessor:[winprint]

&rootprompt;<userinput>rpcclient -U root%xxxx -c 'getdriver mysmbtstprn' localhost</userinput>
 result was WERR_UNKNOWN_PRINTER_DRIVER

</screen></para>

<para>
Keiner der drei oben gezeigten Befehle sollte einen Treiber anzeigen. Dieser Schritt wurde nur ausgeführt, um
diese Bedingung zu demonstrieren. Ein Versuch, sich in diesem Stadium mit dem Drucker zu verbinden, sollte
die Nachricht zeigen: <quote>Der Server hat nicht die erforderlichen Treiber installiert.</quote>
</para>
</step>

<step>
<title>Stellen Sie alle erforderlichen Treiberdateien in die Samba-Freigabe
[print$].</title>

<para><screen>
&rootprompt;<userinput>smbclient //localhost/print\$ -U 'root%xxxx' \
	-c 'cd W32X86; \
	put /etc/cups/ppd/mysmbtstprn.ppd mysmbtstprn.PPD; \
	put /usr/share/cups/drivers/cupsui.dll cupsui.dll; \
	put /usr/share/cups/drivers/cupsdrvr.dll cupsdrvr.dll; \
	put /usr/share/cups/drivers/cups.hlp cups.hlp'</userinput>
</screen></para>

<para>
(Dieser Befehl sollte in einer einzelnen langen Zeile eingegeben werden, die durch <quote>\</quote> angezeigten
Zeilenumbrüche wurden zur Erhöhung der Lesbarkeit eingefügt. Dieser Schritt ist
<emphasis>erforderlich</emphasis>, damit der darauffolgende Schritt erfolgreich durchgeführt werden kann.
Er macht die Dateien physisch in der Freigabe <smbconfsection>[print$]</smbconfsection> verfügbar. Die Clients
wären jedoch nach wie vor nicht in der Lage, diese Treiber zu installieren, da Samba sie noch nicht als
Treiberdateien behandelt. Ein Client, der diesen Treiber abfragt, würde nach wie vor mit einer Meldung wie
<quote>nicht installiert</quote> konfrontiert.
</para>
</step>

<step>
<title>Prüfen, wo sich die Treiberdateien jetzt befinden.</title>

<para><screen>
&rootprompt;<userinput>ls -l /etc/samba/drivers/W32X86/</userinput>
total 669
drwxr-sr-x    2 root     ntadmin       532 May 25 23:08 2
drwxr-sr-x    2 root     ntadmin       670 May 16 03:15 3
-rwxr--r--    1 root     ntadmin     14234 May 25 23:21 cups.hlp
-rwxr--r--    1 root     ntadmin    278380 May 25 23:21 cupsdrvr.dll
-rwxr--r--    1 root     ntadmin    215848 May 25 23:21 cupsui.dll
-rwxr--r--    1 root     ntadmin    169458 May 25 23:21 mysmbtstprn.PPD
</screen></para>

<para>
Die Treiberdateien sind jetzt im <quote>Wurzelverzeichnis</quote> der Freigabe
<smbconfsection>[print$]</smbconfsection>.
</para>
</step>

<step>
<title>Samba mitteilen, daß diese Dateien Treiberdateien sind (<command>adddriver</command>).</title>

<para>
<indexterm><primary>rpcclient</primary><secondary>adddriver</secondary></indexterm>
<screen>
&rootprompt;<userinput>rpcclient -Uroot%xxxx -c 'adddriver "Windows NT x86" \
	"mydrivername:cupsdrvr.dll:mysmbtstprn.PPD: \
  cupsui.dll:cups.hlp:NULL:RAW:NULL"' \
  localhost</userinput>
Printer Driver mydrivername successfully installed.
</screen></para>

<para>
Sie können diesen Schritt nicht wiederholen, wenn er scheitert. Er könnte sogar infolge eines simplen Tippfehlers
scheitern. Meist hat der Befehl dann bereits einen Teil der Treiberdateien in das Unterverzeichnis
<quote>2</quote> verschoben. Wenn dieser Schritt scheitert, müssen Sie zum vierten Schritt zurückgehen und ihn
wiederholen, bevor Sie den fünften Schritt von neuem versuchen können. In diesem Schritt müssen Sie einen Namen
für Ihren Treiber auswählen. Es ist normalerweise eine gute Idee, denselben Namen zu verwenden, wie er für den
Druckernamen verwendet wird; in grossen Installationen werden Sie jedoch diesen Treiber für eine grössere Anzahl
von Druckern verwenden, die natürlich verschiedene Namen haben, daher ist der Name des Treibers nicht fixiert.
</para>
</step>

<step>
<title>Prüfen, wo sich die Treiberdateien jetzt befinden.</title>

<para><screen>
&rootprompt;<userinput>ls -l /etc/samba/drivers/W32X86/</userinput>
total 1
drwxr-sr-x    2 root     ntadmin       532 May 25 23:22 2
drwxr-sr-x    2 root     ntadmin       670 May 16 03:15 3

&rootprompt;<userinput>ls -l /etc/samba/drivers/W32X86/2</userinput>
total 5039
[....]
-rwxr--r--    1 root     ntadmin     14234 May 25 23:21 cups.hlp
-rwxr--r--    1 root     ntadmin    278380 May 13 13:53 cupsdrvr.dll
-rwxr--r--    1 root     ntadmin    215848 May 13 13:53 cupsui.dll
-rwxr--r--    1 root     ntadmin    169458 May 25 23:21 mysmbtstprn.PPD
</screen></para>

<para>
Beachten Sie, wie der Schritt 6 auch die Treiberdateien in das entsprechende Unterverzeichnis verschoben hat.
Vergleichen Sie dies mit der Situation nach dem Schritt 5.
</para>
</step>

<step>
<title>(Optional) Prüfen, ob Samba jetzt den Treiber erkennt.</title>

<para>
<indexterm><primary>rpcclient</primary><secondary>enumdrivers</secondary></indexterm>
<screen>
&rootprompt;<userinput>rpcclient -Uroot%xxxx -c 'enumdrivers 3' \
	localhost | grep -B2 -A5 mydrivername</userinput>
Printer Driver Info 3:
Version: [2]
Driver Name: [mydrivername]
Architecture: [Windows NT x86]
Driver Path: [\\kde-bitshop\print$\W32X86\2\cupsdrvr.dll]
Datafile: [\\kde-bitshop\print$\W32X86\2\mysmbtstprn.PPD]
Configfile: [\\kde-bitshop\print$\W32X86\2\cupsui.dll]
Helpfile: [\\kde-bitshop\print$\W32X86\2\cups.hlp]
</screen></para>

<para>
Erinnern Sie sich, dieser Befehl führt ein <quote>grep</quote> nach dem Namen aus, den Sie im Schritt 6 für den
Treiber gewählt haben. Dieser Befehl muß erfolgreich abschliessen, bevor Sie fortschreiten können.
</para>
</step>

<step>
<para>Samba mitteilen, welcher Drucker diese Treiberdateien verwenden soll (<command>setdriver</command>).</para>

<para>
<indexterm><primary>rpcclient</primary><secondary>setdriver</secondary></indexterm>
<screen>
&rootprompt;<userinput>rpcclient -Uroot%xxxx -c 'setdriver mysmbtstprn mydrivername' \
	localhost</userinput>
Successfully set mysmbtstprn to driver mydrivername
</screen></para>

<para>
Da Sie jeden Druckernamen (Drucker-Queue) an jeden Treiber binden können, ist dies eine praktische Möglichkeit,
viele Queues zu konfigurieren, die denselben Treiber verwenden. Sie brauchen all die vorhergehenden Schritte
nicht zu wiederholen, damit der Befehl setdriver Erfolg hat. Die einzigen Vorbedingungen sind:
<command>enumdrivers</command> muß den Treiber finden und <command>enumprinters</command> muß den Drucker finden.
</para>
</step>

<step>
	<title>(Optional) Prüfen, ob Samba diese Zuordnung erkannt hat.</title>

<para>
<indexterm><primary>rpcclient</primary><secondary>getprinter</secondary></indexterm>
<indexterm><primary>rpcclient</primary><secondary>getdriver</secondary></indexterm>
<indexterm><primary>rpcclient</primary><secondary>enumprinters</secondary></indexterm>
<screen>
&rootprompt;<userinput>rpcclient -Uroot%xxxx -c 'getprinter mysmbtstprn 2' localhost \
  | grep driver</userinput>
drivername:[mydrivername]

&rootprompt;<userinput>rpcclient -Uroot%xxxx -c 'getprinter mysmbtstprn 2' localhost \
  | grep -C4 driv</userinput>
servername:[\\kde-bitshop]
printername:[\\kde-bitshop\mysmbtstprn]
sharename:[mysmbtstprn]
portname:[Done]
drivername:[mydrivername]
comment:[mysmbtstprn]
location:[]
sepfile:[]
printprocessor:[winprint]

&rootprompt;<userinput>rpcclient -U root%xxxx -c 'getdriver mysmbtstprn' localhost</userinput>
[Windows NT x86]
Printer Driver Info 3:
     Version: [2]
     Driver Name: [mydrivername]
     Architecture: [Windows NT x86]
     Driver Path: [\\kde-bitshop\print$\W32X86\2\cupsdrvr.dll]
     Datafile: [\\kde-bitshop\print$\W32X86\2\mysmbtstprn.PPD]
     Configfile: [\\kde-bitshop\print$\W32X86\2\cupsui.dll]
     Helpfile: [\\kde-bitshop\print$\W32X86\2\cups.hlp]
     Monitorname: []
     Defaultdatatype: [RAW]
     Monitorname: []
     Defaultdatatype: [RAW]

&rootprompt;<userinput>rpcclient -Uroot%xxxx -c 'enumprinters' localhost \
	| grep mysmbtstprn</userinput>
     name:[\\kde-bitshop\mysmbtstprn]
     description:[\\kde-bitshop\mysmbtstprn,mydrivername,mysmbtstprn]
     comment:[mysmbtstprn]

</screen></para>

<para>
<indexterm><primary>rpcclient</primary><secondary>enumprinters</secondary></indexterm>
Vergleichen Sie diese Resultate mit denen aus den Schritten 2 und 3. Jeder dieser Befehle zeigt, daß der Treiber
installiert ist. Sogar der Befehl <command>enumprinters</command> führt jetzt den Treiber in der Zeile
<quote>description</quote> an.
</para>
</step>

<step>
<title>(Optional) Den Treiber in den korrekten Gerätemodus <quote>kitzeln</quote>.
</title>

<para>
<indexterm><primary>"Printers" folder</primary></indexterm>
Sie wissen sicherlich, wie man den Treiber auf dem Client installiert. Für den Fall, daß Sie nicht besonders
vertraut mit Windows sind, hier ein Schnell-Rezept:
Durchblättern Sie die Netzwerkumgebung, gehen Sie auf den Samba-Server, und sehen Sie nach den Freigaben. Sie
sollten hier alle freigegebenen Samba-Drucker sehen. Klicken Sie doppelt auf den gewünschten Drucker. Der
Treiber sollte installiert und die Netzwerkverbindung hergestellt werden. Eine weitere Möglichkeit ist, den
Ordner <guilabel>Drucker und Faxgeräte</guilabel> zu öffnen, den betreffenden Drucker mit der rechten
Maustaste anzuklicken und entweder <guilabel>Verbinden</guilabel> oder <guilabel>Installieren</guilabel> zu
wählen. Das Ergebnis sollte sein, daß ein neuer Drucker in dem lokalen Ordner
<guilabel>Drucker und Faxgeräte</guilabel> Ihres Clients erscheint, mit einem Namen wie
<guilabel>Druckerfreigabename auf SambaServerName</guilabel>.
</para>

<para>
Es ist wichtig, daß Sie diesen Schritt als ein Samba-Drucker-Administrator (printer admin, definiert in
&smb.conf;) ausführen. Hier eine andere Methode, dies in Windows XP zu tun. Diese Methode verwendet eine
Befehlszeile, welche Sie in der <quote>DOS box</quote> eingeben (tippen Sie das smbpassword von root, wenn
erfordert):
</para>

<para><screen>
&dosprompt;<userinput>runas /netonly /user:root "rundll32 printui.dll,PrintUIEntry \
	/in /n \\sambaserver\mysmbtstprn"</userinput>
</screen></para>

<para>
Ändern Sie irgendeine Druckereinstellung einmal (wie z.B. den Parameter <emphasis><guilabel>portrait</guilabel>
auf <guilabel>landscape</guilabel></emphasis>), klicken Sie <guibutton>Übernehmen</guibutton>; ändern Sie die
Einstellung wieder zurück.
</para>
</step>

<step>
<title>Den Drucker auf einem Client installieren (Point'n'Print).</title>

<para>
<indexterm significance="preferred"><primary>point 'n' print</primary></indexterm>
	<screen>
&dosprompt;<userinput>rundll32 printui.dll,PrintUIEntry /in /n <quote>\\sambaserver\mysmbtstprn</quote></userinput>
</screen></para>

<para>
Wenn dies nicht funktioniert, könnte dies ein Berechtigungsproblem mit der Freigabe
<smbconfsection>[print$]</smbconfsection> sein.
</para>
</step>

<step>
<title>(Optional) Eine Testseite drucken.</title>

<para><screen>
&dosprompt;<userinput>rundll32 printui.dll,PrintUIEntry /p /n "\\sambaserver\mysmbtstprn"</userinput>
</screen></para>

<para>
Dann drücken Sie fünfmal [TAB], zweimal [ENTER], einmal [TAB] und nochmals [ENTER]
und marschieren zum Drucker.
</para>
</step>

<step>
<title>(Empfohlen) Studieren Sie die Testseite.</title>

<para>
Hmmm.... ich scherze nur! Mittlerweile wissen Sie alles über Drucker-Installationen und brauchen kein Wort mehr
davon zu lesen. Stecken Sie die Seite in einen Rahmen und nageln Sie den an die Wand, mit der Überschrift
"MEIN ERSTER MIT RPCCLIENT INSTALLIERTER DRUCKER" &smbmdash; warum es nicht einfach wegwerfen!
</para>
</step>

<step>
<title>(Obligatorisch) Geniessen Sie es. Springen Sie. Feiern Sie Ihren Erfolg.
</title>

<para><screen>
&rootprompt;<userinput>echo "Cheeeeerioooooo! Erfolg ..." &gt;&gt; /var/log/samba/log.smbd</userinput>
</screen></para>
</step>
</procedure>
</sect2>

<sect2>
<title>Wiedersehen mit dem Troubleshooting</title>

<para>
Der Befehl setdriver wird scheitern, wenn in Samba's <quote>Bewußtsein</quote> die Queue noch nicht
vorhanden ist. Sie hatten vielversprechende Meldungen wie:
</para>

<para><screen>
 Printer Driver ABC successfully installed.
</screen></para>

<para>
nach dem Abschnitt mit <command>adddriver</command>? Aber Sie sehen auch eine enttäuschende Meldung wie
diese hier?
</para>

<para><computeroutput>
 result was NT_STATUS_UNSUCCESSFUL
</computeroutput></para>

<para>
<indexterm><primary>lpstat</primary></indexterm>
Es ist nicht gut genug, daß Sie die Queue in CUPS sehen können, mit dem Befehl
<command>lpstat -p ir85wm</command>. Ein Bug in den neueren Versionen von Samba verhindert ein
ordnungsgemässes Update der Queue-Liste. Die Erkennung von neu installierten CUPS-Druckern scheitert, bis
Sie Samba neu starten oder ein HUP an alle smbd-Prozesse senden. Um zu prüfen, ob dies der Grund dafür ist,
daß Samba den Befehl <command>setdriver</command> nicht erfolgreich ausführt, prüfen Sie, ob Samba den
Drucker <quote>sieht</quote>:
</para>

<para>
<indexterm><primary>rpcclient</primary><secondary>enumprinters</secondary></indexterm>
	<screen>
&rootprompt;<userinput>rpcclient transmeta -N -U'root%xxxx' -c 'enumprinters 0'|grep ir85wm</userinput>
        printername:[ir85wm]
</screen></para>

<para>
Ein anderer Befehl könnte der hier sein:
</para>

<para>
<indexterm><primary>rpcclient</primary><secondary>getprinter</secondary></indexterm>
	<screen>
&rootprompt;<userinput>rpcclient transmeta -N -U'root%secret' -c 'getprinter ir85wm' </userinput>
        cmd = getprinter ir85wm
        flags:[0x800000]
        name:[\\transmeta\ir85wm]
        description:[\\transmeta\ir85wm,ir85wm,DPD]
        comment:[CUPS PostScript-Treiber for Windows NT/200x/XP]
</screen></para>

<para>
Übrigens, Sie können diese Befehle, sowie einige weitere, natürlich auch dazu verwenden, Treiber auf
entfernten Windows-NT-Druckservern zu installieren!
</para>
</sect2>
</sect1>

<sect1>
<title>Die <filename>*.tdb</filename>-Dateien für das Drucken</title>

<para>
<indexterm><primary>TDB</primary></indexterm>
<indexterm><primary>connections.tdb</primary><seealso>TDB</seealso></indexterm>
<indexterm><primary>printing.tdb</primary><seealso>TDB</seealso></indexterm>
<indexterm><primary>share_info.tdb</primary><seealso>TDB</seealso></indexterm>
<indexterm><primary>ntdrivers.tdb</primary><seealso>TDB</seealso></indexterm>
<indexterm><primary>unexpected.tdb</primary><seealso>TDB</seealso></indexterm>
<indexterm><primary>brlock.tdb</primary><seealso>TDB</seealso></indexterm>
<indexterm><primary>locking.tdb</primary><seealso>TDB</seealso></indexterm>
<indexterm><primary>ntforms.tdb</primary><seealso>TDB</seealso></indexterm>
<indexterm><primary>messages.tdb</primary><seealso>TDB</seealso></indexterm>
<indexterm><primary>ntprinters.tdb</primary><seealso>TDB</seealso></indexterm>
<indexterm><primary>sessionid.tdb</primary><seealso>TDB</seealso></indexterm>
<indexterm><primary>secrets.tdb</primary><seealso>TDB</seealso></indexterm>
Einige Mysterien ranken sich um die Gruppe der Dateien mit dem Suffix tdb, die in jeder Samba-Installation
auftauchen. Diese sind
<filename>connections.tdb</filename>,
<filename>printing.tdb</filename>,
<filename>share_info.tdb</filename>,
<filename>ntdrivers.tdb</filename>,
<filename>unexpected.tdb</filename>,
<filename>brlock.tdb</filename>,
<filename>locking.tdb</filename>,
<filename>ntforms.tdb</filename>,
<filename>messages.tdb</filename> ,
<filename>ntprinters.tdb</filename>,
<filename>sessionid.tdb</filename> und
<filename>secrets.tdb</filename>. Was ist ihr Zweck?
</para>

<sect2>
<title>Triviale Datenbank-Dateien</title>

<para>
<indexterm><primary>TDB</primary></indexterm>
Ein Windows NT (Druck-) Server führt Buch über alle benötigten Informationen, die er zur Erfüllung seiner
Pflichten gegenüber den Clients benötigt, indem er Einträge in der Windows-Registrierung speichert.
Client-Anfragen werden beantwortet, indem aus der Registrierung gelesen wird, Administrator- oder
Benutzer-Konfigurations-Einstellungen werden gespeichert, indem in die Registrierung geschrieben wird.
Samba und UNIX haben natürlich keine solche Registrierung. Samba führt stattdessen Buch über alle
Client-bezogene Information, indem es eine Reihe von <filename>*.tdb</filename> Dateien verwendet.
(TDB = Trivial Data Base). Diese sind oft in <filename>/var/lib/samba/</filename> oder
<filename>/var/lock/samba/</filename> abgelegt. Die druck-bezogenen Dateien sind
<filename>ntprinters.tdb</filename>,
<filename>printing.tdb</filename>,<filename>ntforms.tdb</filename> und <filename>ntdrivers.tdb</filename>.
</para>
</sect2>

<sect2>
<title>Binär-Format</title>

<para>
<filename>*.tdb</filename>-Dateien sind nicht für den Menschen lesbar. Sie sind in einem binären Format
geschrieben. <quote>Warum nicht ASCII?</quote>, könnten Sie fragen. <quote>ASCII-Dateien sind doch eine
gute und bewährte Tradition unter UNIX.</quote>
Der Grund für diese Design-Entscheidung ist hauptsächlich die Performance. Samba muß schnell laufen; es
führt für jede Client-Verbindung einen separaten <command>smbd</command>-Prozess aus, in manchen
Umgebungen viele tausende davon. Manche smbds könnten Schreibzugriff auf dieselbe
<filename>*.tdb</filename>-Datei <emphasis>zur gleichen Zeit</emphasis> brauchen. Das Dateiformat der
<filename>*.tdb</filename>-Dateien von Samba erlaubt dies, viele smbd-Prozesse können gleichzeitig in die
selbe <filename>*.tdb</filename>-Datei schreiben. Dies wäre mit reinen ASCII-Dateien nicht möglich.
</para>
</sect2>

<sect2>
<title><filename>*.tdb</filename>-Dateien verlieren</title>

<para>
Es ist sehr wichtig, daß alle <filename>*.tdb</filename>-Dateien konsistent über alle Lese- und
Schreibzugriffe bleiben. Es kann jedoch passieren, daß diese Dateien beschädigt <emphasis>werden</emphasis>.
(Ein <command>kill -9 `pidof smbd'</command> während eines Schreibzugriffs könnte genauso gut dafür
verantwortlich sein, wie ein Stromausfall etc.). Im Falle von Schwierigkeiten kann das Löschen der alten
druckbezogenen <filename>*.tdb</filename>-Dateien die einzige Möglichkeit sein. Danach müssen Sie alle
druckbezogenen Einstellungen wieder herstellen oder Sie haben rechtzeitig ein Backup der relevanten
Dateien erstellt.
</para>
</sect2>

<sect2>
<title>Das Verwenden von <command>tdbbackup</command></title>


<para>
<indexterm><primary>TDB</primary><secondary>sichern</secondary><see>tdbbackup</see></indexterm>
<indexterm><primary>tdbbackup</primary></indexterm>
Samba enthält ein kleines Hilfsmittel, das dem root-Benutzer Ihres Systems hilft, die
<filename>*.tdb</filename>-Dateien zu sichern. Wenn Sie es ohne Argumente ausführen, gibt es Auskunft über
seine Verwendung:
</para>

<para><screen>
&rootprompt;<userinput>tdbbackup</userinput>
 Usage: tdbbackup [options] &lt;fname...&gt;

 Version:3.0a
   -h            this help message
   -s suffix     set the backup suffix
   -v            verify mode (restore if corrupt)

</screen></para>

<para>
Hier sehen Sie, wie ich meine Datei <filename>printing.tdb</filename> gesichert habe:
</para>

<para><screen>
&rootprompt;<userinput>ls</userinput>
.              browse.dat     locking.tdb     ntdrivers.tdb printing.tdb
..             share_info.tdb connections.tdb messages.tdb  ntforms.tdb
printing.tdbkp unexpected.tdb brlock.tdb      gmon.out      namelist.debug
ntprinters.tdb sessionid.tdb

&rootprompt;<userinput>tdbbackup -s .bak printing.tdb</userinput>
 printing.tdb : 135 records

&rootprompt;<userinput>ls -l printing.tdb*</userinput>
 -rw-------    1 root     root        40960 May  2 03:44 printing.tdb
 -rw-------    1 root     root        40960 May  2 03:44 printing.tdb.bak

</screen></para>
</sect2>
</sect1>

<sect1>
<title>CUPS Drucker-Treiber von Linuxprinting.org</title>

<para>
<indexterm><primary>Linuxprinting.org</primary></indexterm>
CUPS kommt mit guter Unterstützung für Drucker vom Typ HP LaserJet. Sie können den generischen Treiber
wie folgt installieren:
</para>


<para>
<indexterm><primary>lpadmin</primary></indexterm>
	<screen>
&rootprompt;<userinput>lpadmin -p laserjet4plus -v parallel:/dev/lp0 -E -m laserjet.ppd</userinput>
</screen></para>

<para>
Die Option <option>-m</option> wird die Datei <filename>laserjet.ppd</filename> aus dem Standard-Repository
für noch-nicht-installierte-PPDs beziehen, das CUPS üblicherweise in
<filename>/usr/share/cups/model</filename> speichert. Alternativ dazu können Sie
<option>-P /pfad/zu/ihrer.ppd</option> benutzen.
</para>

<para>
Das generische <filename>laserjet.ppd</filename> unterstützt jedoch nicht jede spezielle Option für jedes
LaserJet-kompatibles Modell. Es stellt eine Art <quote>kleinster gemeinsamer Nenner</quote> aller Modelle
dar. Wenn Sie aus irgendeinem Grund für die kommerziell verfügbaren ESP Print Pro Treiber bezahlen
müssen, sollte Ihr erster Schritt sein, die Datenbank auf der Website
<ulink noescape="1" url="http://www.linuxprinting.org/printer_list.cgi">Linuxprinting</ulink> zu befragen.
Linuxprinting.org gibt exzellente Empfehlungen darüber ab, welcher Treiber am besten für welchen Drucker zu
verwenden ist. Die dortige Datenbank wird von der unermüdlichen Arbeit von Till Kamppeter von MandrakeSoft
aktuell gehalten, der auch der Haupt-Autor des Werkzeugs <command>foomatic-rip</command> ist.
</para>

<note><para>
<indexterm><primary>foomatic-rip</primary></indexterm>
Das frühere Konzept <command>cupsomatic</command> wird nun von seinem neuen Nachfolger, dem weitaus
mächtigeren <command>foomatic-rip</command> ersetzt. <command>cupsomatic</command> wird nicht mehr weiter
instand gehalten. Hier ist die neue URL zur neuen
<ulink noescape="1" url="http://www.linuxprinting.org/driver_list.cgi">Foomatic-3.0</ulink>-Datenbank.
Wenn Sie ein Upgrade auf <command>foomatic-rip</command> durchführen wollen, vergessen Sie nicht, auch
das Upgrade auf die neuartigen PPDs für Ihre Foomatic-betriebenen Drucker durchzuführen. foomatic-rip
arbeitet nicht mit PPDs, die für das alte <command>cupsomatic</command> generiert wurden. Die neuen PPDs
entsprechen zu 100% der Adobe PPD-Spezifikation. Sie sind auch dazu gedacht, mit Samba und dem
cupsaddsmb-Werkzeug verwendet zu werden, um die Treiber für die Windows-Clients bereitzustellen!
</para></note>

<sect2>
<title>Erklärungen zu foomatic-rip und Foomatic</title>


<para>
<indexterm significance="preferred"><primary>foomatic</primary></indexterm>
<indexterm significance="preferred"><primary>foomatic-rip</primary></indexterm>
Heutzutage verwenden die meisten Linux-Distributionen die Werkzeuge von Linuxprinting.org, um ihre
drucker-spezifische Software aufzubauen (welche übrigens auch auf allen UNICes und auch auf Mac OS X oder
Darwin läuft). Es ist nicht so bekannt, wie es sollte, daß es auch ein sehr benutzerfreundliches Interface
hat, das einfache Updates von Treibern und PPDs erlaubt, für alle unterstützten Drucker, alle Spooler,
alle Betriebssysteme und alle Paketformate (weil es keines gibt). Seine Geschichte geht schon einige Jahre
zurück.
</para>

<para>
Erst unlängst hat Foomatic den erstaunlichen Meilenstein von <ulink
url="http://www.linuxprinting.org/printer_list.cgi?make=Anyone">1000 gelisteten</ulink> Druckermodellen
geschafft. Linuxprinting.org speichert alle wichtigen Fakten über Druckertreiber und unterstützte Modelle
zur Verfügung, sowie Informationen darüber, welche Optionen für die verschiedenen Treiber/Drucker-Kombinationen
verfügbar sind, in seiner <ulink
url="http://www.linuxprinting.org/foomatic.html">Foomatic</ulink>-Datenbank. Momentan gibt es
<ulink
url="http://www.linuxprinting.org/driver_list.cgi">245 Treiber</ulink> in der Datenbank. Viele Treiber
unterstützen verschiedene Modelle, und viele Modelle können mit verschiedenen Treibern betrieben werden
&smbmdash; es ist Ihre Wahl!
</para>

<sect3>
<title>690 <quote>Perfekte</quote> Drucker</title>

<para>
Zur Zeit gibt es 690 Geräte, die mit <quote>arbeitet perfekt</quote> bezeichnet werden, 181 arbeiten
größtenteils, 96 teilweise, und 46 sind Briefbeschwerer. Wenn man bedenkt, daß die meisten dieser Drucker
Nicht-PostScript-Modelle sind (PostScript-Drucker werden von CUPS automatisch perfekt unterstützt, durch die
Verwendung ihrer eigenen, vom Hersteller bereitgestellten Windows-PPD), und daß ein multi-funktionales Gerät
nie als perfekt-arbeitend abschließt, solange es nicht auch unter GNU/Linux &smbmdash; scannt und faxt und
kopiert, ist dies eine wirklich erstaunliche Errungenschaft! Vor drei Jahren war die Anzahl nicht grösser als
500, und Linux- oder UNIX-Druck war zu der Zeit nicht einmal annähernd dort, wo es jetzt steht.
</para>
</sect3>

<sect3>
<title>Wie das Druck-HOWTO alles begründete</title>

<para>
Vor ein paar Jahren startete <ulink url="http://www2.picante.com:81/~gtaylor/">Grant Taylor</ulink> all das.
Die Wurzeln des heutigen Linuxprinting.org liegen in dem ersten
<ulink url="http://www.linuxprinting.org/foomatic2.9/howto/">Linux Printing HOWTO</ulink>, das er verfaßt hat.
Als Nebenprojekt zu diesem Dokument, das viele Linux-Anwender und -Administratoren auf ihren ersten
Schritten in diesem komplizierten und delikaten Setup führte (für einen Wissenschaftler ist Drucken
<quote>das Auftragen einer strukturierten Ablagerung von verschiedenen Mustern aus Tinten- oder Toner-Partikeln
auf Papier-Substrate</quote>), startete er eine kleine Postgres-Datenbank mit Informationen über den Hardware-
und Treiber-Zoo, aus dem das damalige Linux-Drucken bestand. Diese Datenbank wurde zur Kern-Komponente der
heutigen Foomatic-Samllung von Werkzeugen und Daten. In der Zwischenzeit wurde auf eine XML-Struktur gewechselt.
</para>
</sect3>

<sect3>
<title>Foomatic's seltsamer Name</title>


<para>
<indexterm><primary>foomatic</primary></indexterm>
<quote>Warum der lustige Name?</quote> fragen Sie.
Als es wirklich losging, im Frühling 2000, war CUPS bei weitem nicht so populär, wie es heute ist, und die
meisten Systeme benutzten LPD, LPRng oder sogar PDQ. CUPS kam nur mit ein paar generischen Treibern (genug für
ein paar hundert verschiedene Druckermodelle). Diese unterstützten nicht soviele gerätespezifischen Optionen.
CUPS kam auch mit seinem eigenen eingebauten Raster-Filter (<parameter>pstoraster</parameter>, abgeleitet von
Ghostscript). Auf der anderen Seite bot CUPS brilliante Unterstützung für das <emphasis>controlling</emphasis>
aller Drucker-Optionen durch standardisierte und wohldefinierte PPD-Dateien. Und CUPS war dafür entworfen,
einfach erweiterbar zu sein.
</para>

<para>
Taylor hatte in seiner Datenbank bereits eine beachtliche Sammlung von Fakten über viel mehr Drucker und die
Ghostscript <quote>Treiber</quote>, mit denen sie liefen. Seine Idee, PPDs aus der Datenbank-Information zu
generieren, und diese dazu zu benutzen, um Standard-Ghostscript-Filter in CUPS zum Funktionieren zu bringen,
funktionierte sehr gut. Sie erschlug außerdem mehrere Fliegen mit einer Klappe:
</para>

<itemizedlist>
<listitem><para>Sie machte alle aktuellen und zukünftigen Ghostscript Filter-Entwicklungen für CUPS verfügbar.
</para></listitem>

<listitem><para>Sie machte eine Vielzahl von zusätzlichen Druckermodellen für CUPS-Anwender verfügbar (weil oft
der traditionelle Weg über Ghostscript der einzige verfügbare war).
</para></listitem>

<listitem><para>Sie brachte all den Benutzern, die Ghostscript-Filter benutzen wollten (oder mussten), die
vielen erweiterten Optionen von CUPS (Web-Interface, GUI-Treiber-Konfiguration).
</para></listitem>
</itemizedlist>
</sect3>

<sect3>
<title>cupsomatic, pdqomatic, lpdomatic, directomatic</title>


<para>
<indexterm><primary>cupsomatic</primary></indexterm>
<indexterm><primary>CUPS-PPD</primary></indexterm>
<indexterm><primary>PPD</primary><secondary>CUPS</secondary><see>CUPS-PPD</see></indexterm>
CUPS arbeitete mit einem schnell zusammen-gehackten Filter-Skript namens
<ulink url="http://www.linuxprinting.org/download.cgi?filename=cupsomatic&amp;show=0">cupsomatic.</ulink>
cupsomatic schleuste die Druckdatei durch Ghostscript, wobei es automatisch den ziemlich komplizierten Befehl
konstruierte, der dazu benötigt wurde. Es mußte nur noch ins CUPS-System kopiert werden, um das funktionieren
zu lassen. Um zu konfigurieren, wie cupsomatic den Ghostscript-Darstellungs-Prozess kontrolliert, braucht es
eine CUPS-PPD. Diese PPD wird direkt aus den Inhalten der Datenbank generiert. Für CUPS und die entsprechende
Drucker/Filter-Kombination erledigte ein anderes Perl-Skript die PPD-Generation. Nachdem das funktionierte,
implementierte Taylor innerhalb weniger Tage eine ähnliche Lösung für 2 andere Spooler. Die Namen, die für
diese Konfigurations-Generatoren gewählt wurden, waren
<ulink url="http://www.linuxprinting.org/download.cgi?filename=lpdomatic&amp;show=0">PDQ-O-Matic</ulink> (für PDQ)
und
<ulink url="http://www.linuxprinting.org/download.cgi?filename=lpdomatic&amp;show=0">LPD-O-Matic</ulink>
(für &smbmdash; Sie haben es erraten &smbmdash; LPD); die Konfiguration verwendete hier keine PPDs, sondern
andere spooler-spezifische Dateien.
</para>

<para>
Im Spätsommer jenes Jahres begann <ulink url="http://www.linuxprinting.org/till/">Till Kamppeter</ulink>, seine
Arbeit in die Datenbank einfliessen zu lassen. Kamppeter war von
<ulink url="http://www.mandrakesoft.com/">MandrakeSoft</ulink> angestellt worden, um deren Drucksystem auf CUPS
umzustellen, nachdem sie sein auf <ulink url="http://www.fltk.org/">FLTK</ulink> basierendes
<ulink url="http://cups.sourceforge.net/xpp/">XPP</ulink> gesehen hatten (ein GUI Frontend für den CUPS
lp-Befehl). Er fügte viele Informationen und neuen Druckern hinzu, entwickelte auch die Unterstützung für andere
Spooler, wie <ulink url="http://ppr.sourceforge.net/">PPR</ulink> (via ppromatic),
<ulink url="http://sourceforge.net/projects/lpr/">GNUlpr</ulink> und
<ulink url="http://www.lprng.org/">LPRng</ulink> (beide via eines erweiterten lpdomatic) und Spooler-loses
Drucken
(<ulink url="http://www.linuxprinting.org/download.cgi?filename=directomatic&amp;show=0">directomatic</ulink>).
</para>

<para>
Also, zur Beantwortung der Frage: <quote>Foomatic</quote> ist der allgemeine Namen für all den überlappenden
Code und die Daten hinter den <quote>*omatic</quote>-Skripts. Foomatic brauchte bis zur Version 2.0.x (hässliche)
Perl-Datenstrukturen, die an die CUPS-PPDs von Linuxprinting.org angehängt wurden. Es gabe verschiedene
<quote>*omatic</quote>-Skripts für jeden Spooler, genauso wie verschiedene Drucker-Konfigurations-Dateien.
</para>
</sect3>

<sect3>
<title>Die <emphasis>Grosse Vereinheitlichung</emphasis> ist erreicht</title>


<para>
<indexterm><primary>foomatic-rip</primary></indexterm>
Dies änderte sich alles mit Foomatic 2.9 (beta) und der <quote>stable release</quote> 3.0. Es wurde nunmehr
eine Annäherung aller *omatic-Skripts erreicht und wird nun <ulink
url="http://www.linuxprinting.org/foomatic2.9/download.cgi?filename=foomatic-rip&amp;show=0">foomatic-rip.</ulink>
genannt. Dieses einzelne Skript ist die Vereinheitlichung der davor verschiedenen spooler-spezifischen
*omatic-Skripts. foomatic-rip wird von all den verschiedenen Spoolern gleicherweise benutzt, und da es PPDs
lesen kann (sowohl die originalen PostScript-Drucker-PPDs wie auch die von Linuxprinting.org generierten), haben
plötzlich alle unterstützten Spooler die mächtigen Features der PPDs zur Verfügung. DIe Benutzer brauchen nur
foomatic-rip in ihr System stöpseln. Für die Benutzer gibt es erweiterte Unterstützung für Medien-Typen und
-Zufuhr &smbmdash; Papier-Grössen und -Schächte sind einfacher zu konfigurieren.
</para>

<para>
Weiters enthält die neue Generation der Linuxprinting.org-PPDs keine Perl-Datenstrukturen mehr. Wenn Sie der
Verwalter einer Distribution sind, und die vorhergehende Version von Foomatic verwendet haben, möchten Sie
vielleicht die neue Version ausprobieren, aber vergessen Sie nicht, einen neuen Satz von PPDs zu generieren,
mittels der neuen <ulink
url="http://www.linuxprinting.org/download/foomatic/foomatic-db-engine-3.0.0beta1.tar.gz">Datenbank-Engine!</ulink>
Privat-Anwender brauchen nur ein einzelnes neues PPD zu generieren, das spezifisch für ihren Drucker ist, unter
Befolgung <ulink
url="http://www.linuxprinting.org/kpfeifle/LinuxKongress2002/Tutorial/II.Foomatic-User/II.tutorial-handout-foomatic-user.html">dieser Schritte</ulink>, die im Foomatic-Tutorial oder in diesem Kapitel beschrieben sind. Diese
neuen Entwicklungen sind wirklich erstaunlich.
</para>

<para>
foomatic-rip ist ein sehr cleverer "Wrapper" um die Anforderung, Ghostscript mit verschiedener Syntax,
verschiedenen Optionen, Geräte-Auswahl, und/oder Filtern für jeden verschiedenen Drucker oder Spooler
auszuführen. Zur selben Zeit kann es die PPD, die einer Drucker-Queue zugeordnet ist, lesen, und den Druckauftrag
entsprechend der Benutzer-Auswahl modifizieren. Dazu kommt die 100% Übereinstimmung der Foomatic-PPDs mit der
Adobe-Spezifikation. Einige innovative Features des Foomatic-Konzepts werden die Benutzer überraschen. Es
unterstützt benutzerdefinierte Papiergrössen für viele Drucker und den Druck auf Medien aus verschiedenen
Schächten innerhalb desselben Auftrags (in beiden Fällen sogar dann, wenn es dafür keine Unterstützung von
Windows-basierenden Hersteller-Treibern gibt).
</para>
</sect3>

<sect3>
<title>Externe Treiberentwicklung</title>

<para>
Der Großteil der Treiberentwicklung passiert nicht innerhalb Linuxprinting.org. Die Treiber werden von
unabhängigen Maintainern geschrieben. Linuxprinting.org sammelt nur all die Information und speichert sie in
seiner Datenbank. Zusätzlich stellt es den <quote>Leim</quote> von Foomatic zur Verfügung, um die vielen Treiber
in jegliches moderne (oder alte) Drucksystem zu integrieren.
</para>

<para>
Wenn wir von den verschiedenen Treiber-Entwickler-Gruppen sprechen, die meiste Arbeit wird derzeit in drei
Projekten erledigt. Diese sind:
</para>

<itemizedlist>
<listitem><para><ulink
url="http://www-124.ibm.com/developerworks/oss/linux/projects/omni/">Omni</ulink>
&smbmdash; ein freies Software-Projekt von IBM, das versucht, deren Drucker-Treiber-Wissen aus den guten alten
OS/2-Zeiten in eine moderne, modulare, universelle Treiber-Architektur für Linux/UNIX zu konvertieren (immer
noch im Beta-Stadium). Dieses Projekt unterstützt derzeit 437 Modelle.</para></listitem>

<listitem><para><ulink url="http://hpinkjet.sf.net/">HPIJS</ulink> &smbmdash;
ein freies Software-Projekt von HP, um Unterstützung für deren eigene Modelle anzubieten (sehr ausgereift, der
Druck ist in den meisten Fällen perfekt und bietet volle Photo-Qualität). Dieses Projekt unterstützt derzeit
369 Modelle.</para></listitem>

<listitem><para><ulink
url="http://gimp-print.sf.net/">Gimp-Print</ulink> &smbmdash; ein freies Software-Projekt, gestartet von
Michael Sweet (auch ein führender CUPS-Entwickler), jetzt geleitet von Robert Krawitz, der ein erstaunliches
Level von Photo-Druck-QUalität erreicht hat (viele Epson-Anwender schwören, daß die Qualität besser ist als die
der Epson-Treiber für Microsoft-Plattformen). Dieses Projekt unterstützt derzeit 522 Modelle.</para></listitem>
</itemizedlist>
</sect3>

<sect3>
<title>Forums, Downloads, Tutorials, Howtos &smbmdash; auch für Mac OS X und kommerzielles UNIX</title>

<para>
Linuxprinting.org ist heute der One-Stop-Shop, um Druckertreiber herunterzuladen. Sehen Sie nach
Drucker-Informationen und <ulink
url="http://www.linuxprinting.org//kpfeifle/LinuxKongress2002/Tutorial/">Tutorials</ulink> oder lösen Sie
Probleme in den populären <ulink
url="http://www.linuxprinting.org/newsportal/">Foren.</ulink> Dieses Forum ist nicht nur für GNU/Linux-Anwender,
sondern auch für Admins <ulink
url="http://www.linuxprinting.org/macosx/">kommerzieller UNIX-Systeme</ulink>, und das ziemlich neue <ulink
url="http://www.linuxprinting.org/newsportal/thread.php3?name=linuxprinting.macosx.general">Mac
OS X Forum</ulink> wurde innerhalb einiger weniger Wochen zu einem der meist-frequentierten Foren.
</para>

<para>
Linuxprinting.org und die Foomatic-Treiber-Wrapper um Ghostscript sind nunmehr eine Standard Werkzeug-Kette für
das Drucken in allen wichtigen Distributionen. Die meisten haben auch CUPS darunter integriert. Während in den
letzten Jahren die meisten Drucker-Daten von Kamppeter (der für Mandrake arbeitet) hinzugefügt wurden, kamen
viele andere Beiträge von Leuten bei SuSE, Red Hat, Conectiva, Debian, und anderen. Hersteller-Neutralität ist
ein wichtiges Ziel des Foomatic-Projekts.
</para>

<note><para>
Till Kamppeter von MandrakeSoft leistet in seiner Freizeit hervorragende Arbeit, um Linuxprinting.org und
Foomatic zu pflegen. Wenn Sie diese oft nutzen, bitte senden Sie ihm doch eine kleine Mail, um Ihre Anerkennung
zu zeigen.
</para></note>
</sect3>

<sect3>
<title>Foomatic Datenbank-generierte PPDs</title>

<para>
Die Foomatic Datenbank ist selbst ein erstaunliches Stück Raffiniertheit. Sie enthält nicht nur die
Drucker- und Treiber-Informationen, sondern ist auf eine Art organisiert, daß sie PPD-Dateien ad hoc aus ihren
internen, auf XML basierenden Datensätzen generieren kann. Während diese PPDs der Adobe-Spezifikation für
PostScript Printer Descriptions (PPDs) entsprechen, betreiben Linuxprinting.org/Foomatic-PPDs normalerweise
keine PostScript-Drucker. Sie werden verwendet, um all die Features zu beschreiben, die Sie auf jedem beliebigen
Gerät verwenden können. Der hauptsächliche Trick ist eine zusätzliche Zeile, die nicht von der
Adobe-Spezifikation beachtet wird und mit dem Schlüsselwort <parameter>*cupsFilter</parameter> beginnt.
Sie teilt dem CUPS-Daemon mit, wie er mit der PostScript-Druckdatei weiter verfahren soll (ältere Foomatic-PPDs
benannten das cupsomatic-Filter-Skript, während die neueren PPDs foomatic-rip aufrufen). Dieses Filter-Skript
ruft Ghostscript auf dem Host-System auf (die empfohlene Variante ist ESP Ghostscript), um die erforderliche
Arbeit zu tun. foomatic-rip weiß, welchen Filter oder welche interne Geräte-Einstellung es von Ghostscript
verlangen muß, um den PostScript-Druckauftrag in ein Rasterformat zu wandeln, das passend für das Zielgerät ist.
Diese Verwendung von PPDs, um die Optionen von Nicht-PS-Druckern zu beschreiben, war eine Erfindung der
CUPS-Entwickler. Der Rest ist einfach. GUI-Werkzeuge (wie KDE's wunderbares <ulink
url="http://printing.kde.org/overview/kprinter.phtml">kprinter,</ulink> oder <ulink
url="http://gtklp.sourceforge.net/">gtklp</ulink> von GNOME, xpp und das CUPS-Web-Interface) lesen das PPD
genauso, und verwenden diese Information, um die verfügbaren Einstellungen dem Benutzer anzubieten, genauso wie
eine intuitive Menü-Auswahl.
</para>
</sect3>
</sect2>

<sect2>
<title>foomatic-rip und Foomatic-PPD Download und Installation</title>

<para>
Hier sind die erforderlichen Schritte, um einen von foomatic-rip betriebenen LaserJet 4 Plus-kompatiblen
Drucker in CUPS zu installieren (beachten Sie, daß aktuelle Distributionen von SuSE, UnitedLinux und Mandrake
möglicherweise mit einem kompletten Package von Foomatic-PPDs geliefert werden, plus dem Werkzeug
<command>foomatic-rip</command>. Der Besuch von Linuxprinting.org stellt sicher, daß Sie die aktuellsten
Treiber und PPD-Dateien haben):
</para>

<itemizedlist>
<listitem><para>Öffnen Sie Ihren Browser und besuchen Sie die Linuxprinting.org Druckerlisten-<ulink url="http://www.linuxprinting.org/printer_list.cgi">Seite.</ulink>
</para></listitem>

<listitem><para>Sehen Sie die komplette Liste von Druckern in der
<ulink url="http://www.linuxprinting.org/printer_list.cgi?make=Anyone">Datenbank.</ulink>.
</para></listitem>

<listitem><para>Wählen Sie Ihr Modell und klicken Sie auf den Link.
</para></listitem>

<listitem><para>Sie landen auf einer Seite, die alle funktionierenden Treiber für dieses Modell auflistet (es
gibt für alle Drucker zumindest <emphasis>einen</emphasis> empfohlenen Treiber. Probieren Sie den als erstes).
</para></listitem>

<listitem><para>In unserem Fall (HP LaserJet 4 Plus) landen wir beim Standard-Treiber für den
<ulink url="http://www.linuxprinting.org/show_printer.cgi?recnum=HP-LaserJet_4_Plus">HP-LaserJet 4 Plus.</ulink>
</para></listitem>

<listitem><para>Der empfohlene Treiber ist ljet4.</para></listitem>

<listitem><para>Verschiedene Links werden hier angeboten. Sie sollten sie alle besuchen, falls Sie noch nicht mit
der Linuxprinting.org-Datenbank vertraut sind.
</para></listitem>

<listitem><para>Es gibt einen Link auf die Datanbank-Seite für
<ulink url="http://www.linuxprinting.org/show_driver.cgi?driver=ljet4">ljet4.</ulink>
Auf der Seite des Treibers finden Sie wichtige und detaillierte Information, wie Sie den Treiber mit den
verschiedenen Spoolern verwenden können.
</para></listitem>

<listitem><para>Ein weiterer Link führt Sie auf die Homepage des Treibers oder dessen Autors.
</para></listitem>

<listitem><para>Wichtige Links sind diejenigen, die Ihnen Hinweise und Anleitungen zu
<ulink noescape="1" url="http://www.linuxprinting.org/cups-doc.html">CUPS</ulink>,
<ulink url="http://www.linuxprinting.org/pdq-doc.html">PDQ</ulink>,
<ulink url="http://www.linuxprinting.org/lpd-doc.html">LPD, LPRng und GNUlpr</ulink> geben,
genauso wie zu <ulink url="http://www.linuxprinting.org/ppr-doc.html">PPR</ulink>
oder <quote>spooler-freiem</quote> <ulink url="http://www.linuxprinting.org/direct-doc.html">Drucken.</ulink>
</para></listitem>

<listitem><para>Sie können das PPD in Ihrem Browser ansehen, mit diesem Link:
<ulink noescape="1" url="http://www.linuxprinting.org/ppd-o-matic.cgi?driver=ljet4&amp;printer=HP-LaserJet_4_Plus&amp;show=1">http://www.linuxprinting.org/ppd-o-matic.cgi?driver=ljet4&amp;printer=HP-LaserJet_4_Plus&amp;show=1</ulink>
</para></listitem> <listitem><para>Und das Wichtigste, Sie können das
<ulink url="http://www.linuxprinting.org/ppd-o-matic.cgi?driver=ljet4&amp;printer=HP-LaserJet_4_Plus&amp;show=0">PPD</ulink> auch generieren und herunterladen.
</para></listitem>

<listitem><para>Das PPD enthält all die Informationen, um unseren Drucker und den Treiber zu verwenden; sobald
es installiert ist, arbeitet es transparent für den Anwenden. Sie brauchen später nur noch Auflösung,
Papierformat, usw. aus dem Web-basierenden Menü, dem Druck-GUI-Dialog oder auf der Befehlszeile auswählen.
</para></listitem>

<listitem><para>Wenn Sie auf der Treiber-
<ulink url="http://www.linuxprinting.org/show_driver.cgi?driver=ljet4">Seite</ulink> angelangt sind,
können Sie den <quote>PPD-O-Matic</quote> Online-PPD-Generator verwenden.</para></listitem>

<listitem><para>Wählen Sie das genaue Modell aus, wählen Sie <guilabel>Download</guilabel> oder
<guilabel>Display PPD file</guilabel> und klicken Sie <guilabel>Generate PPD file</guilabel>.</para></listitem>

<listitem><para>Wenn Sie die PPD-Datei aus der Broswer-Ansicht speichern, verwenden Sie bitte nicht
Cut and Paste (da dies eventuell die Zeilenenden und Tabulatoren beschädigt, was das PPD eventuell in seiner
Pflichterfüllung hindert), sondern verwenden Sie <guimenuitem>Speichern unter...</guimenuitem> aus dem
Menü Ihres Browsers. (Am besten ist die Verwendung der Option <guilabel>Download</guilabel> direkt auf der
Web-Seite).</para></listitem>

<listitem><para>Ein weiterer interessanter Teil jeder Treiber-Seite ist der Button
<guimenuitem>Show execution details</guimenuitem>. Wenn Sie Ihr Druckermodell wählen und diesen Button klicken,
wird eine komplette Ghostscript-Befehlszeile angezeigt, die alle verfügbaren Optionen für diese
Drucker/Treiber-Kombination aufzählt. Dies ist eine gute Möglichkeit, <quote>Ghostscript durch Anwendung zu
erlernen</quote>. Es ist weiters ein hervorragender Schummelzettel für alle erfahrenen Anwender, die eine
gute Befehlszeile für irgendein verdammtes Druck-Skript rekonstruieren müssen, sich aber nicht mehr an die
exakte Syntax erinnern.</para></listitem>

<listitem><para>Irgendwann während Ihres Besuchs auf Linuxprinting.org speichern Sie Ihre PPD-Datei unter einem
passenden Platz auf Ihrer Festplatte, sagen wir <filename>/pfad/zu/ihrer.ppd</filename> (wenn Sie es vorziehen,
Ihre Drucker unter Verwendung des CUPS-Web-Interface zu installieren, speichern Sie das PPD in
<filename>/usr/share/cups/model/</filename> und starten CUPS neu).</para></listitem>

<listitem><para>Dann installieren Sie den Drucker mit einer entsprechenden Befehlszeile, wie dieser:
</para>

<para><screen>
&rootprompt;<userinput>lpadmin -p laserjet4plus -v parallel:/dev/lp0 -E \
	-P pfad/zu/mein-drucker.ppd</userinput>
</screen></para></listitem>

<listitem><para>Für alle neuartigen <quote>Foomatic-PPDs</quote> von Linuxprinting.org brauchen Sie auch den
speziellen CUPS-Filter namens foomatic-rip.
</para></listitem>

<listitem><para>Das foomatic-rip Perl-Skript selbst gibt ziemlich interessanten
<ulink url="http://www.linuxprinting.org/foomatic2.9/download.cgi?filename=foomatic-rip&amp;show=1">Lesestoff</ulink>
ab, da es durch Kamppeter's Inline-Kommentare gut dokumentiert ist (sogar Nicht-Perl-Hacker werden einiges über Drucken lernen, wenn sie es lesen).</para></listitem>

<listitem><para>Speichern Sie foomatic-rip entweder direkt in
<filename>/usr/lib/cups/filter/foomatic-rip</filename> oder sonstwo in Ihren  $PATH (und vergessen Sie nicht, es
für alle ausführbar zu setzen). Verwenden Sie auch hier nicht Cut and Paste, sondern verwenden Sie den
entsprechenden Link oder den Menü-Eintrag <guimenuitem>Speichern unter ...</guimenuitem> Ihres Browsers.
</para></listitem>

<listitem><para>Wenn Sie foomatic-rip in Ihrem $PATH speichern, legen Sie einen Symlink an:
<screen>
&rootprompt;<userinput>cd /usr/lib/cups/filter/ ; ln -s `which foomatic-rip'</userinput>
</screen>
</para>

<para>
CUPS wird diesen neu verfügbaren Filter beim Neustart von cupsd entdecken.
</para></listitem>
</itemizedlist>

<para>
Sobald Sie auf eine Queue drucken, die mit dem Foomatic-PPD installiert wurde, fügt CUPS die entsprechenden
Befehle und Kommentare in die resultierende PostScript-Datei ein. foomatic-rip kann diese lesen und mit ihnen
umgehen, und verwendet einige speziell codierte Foomatic-Kommentare, die in die Auftragsdatei eingebettet sind.
Diese werden wiederum dazu verwendet (transparent für Sie, den Anwender), um die komplizierte
Ghostscript-Befehlszeile zu konstruieren, die dem Druckertreiber exakt mitteilt, wie die ausgegebenen Rasterdaten
auszusehen haben, und welche Druckerbefehle in den Datenstrom einzubetten sind. Sie brauchen:
</para>

<itemizedlist>

<listitem><para>Eine <quote>foomatic+irgendwas</quote> PPD &smbmdash; aber das ist nicht genug, um mit CUPS zu
drucken (es ist nur <emphasis>eine</emphasis> wichtige Komponente).
</para></listitem>

<listitem><para>Das <parameter>foomatic-rip</parameter> Filter-Skript (Perl) in
<filename>/usr/lib/cups/filters/</filename>.</para></listitem>

<listitem><para>Perl, damit foomatic-rip laufen kann.</para></listitem>

<listitem><para>Ghostscript (weil es die Hauptarbeit macht, kontrolliert von der Kombination
PPD/foomatic-rip), um die passenden Rasterdaten für Ihr Druckermodell zu produzieren.
</para></listitem>

<listitem><para>Ghostscript <emphasis>muss</emphasis> (abhängig von Ihrem Treiber/Modell) Unterstützung für
ein bestimmtes Gerät mitbringen, das den gewählten Treiber für Ihr Modell repräsentiert (wie von
<command>gs -h</command> gezeigt).</para></listitem>

<listitem><para>foomatic-rip braucht eine neue Version PPDs (PPD-Versionen für cupsomatic funktionieren nicht
mit foomatic-rip).</para></listitem>
</itemizedlist>
</sect2>
</sect1>

<sect1>
<title>Seitenabrechnung mit CUPS</title>

<para>
<indexterm><primary>CUPS</primary><secondary>Seitenabrechnung</secondary></indexterm>
Es gibt oft Nachfragen bezüglich Druck-Quotas, wo Samba-Benutzer (also Windows-Clients) nicht mehr als eine
bestimmte Anzahl von Seiten oder Datenmenge pro Tag, Woche oder Monat drucken dürfen sollen. Dieses Feature
hängt vom eingesetzten Drucksystem ab. Samba's Teil ist es, die Druckaufträge von den Clients zu empfangen
(gefiltert <emphasis>oder</emphasis> ungefiltert) und diese an das Drucksystem weiterzugeben.
</para>

<para>
Natürlich könnte man sich sowas mit seinen eigenen Skripts zusammenbauen. Aber es gibt CUPS. CUPS unterstützt
Quotas, die basierend auf der Auftragsgrösse, der Anzahl der Seiten oder beidem festgelegt werden können, und
jede zeitliche Periode umspannen können, die Sie wollen.
</para>

<sect2>
<title>Quotas einrichten</title>

<para>
<indexterm><primary>CUPS</primary><secondary>quotas</secondary></indexterm>
Dies ist ein Beispiel, wie root ein Druck-Quota in CUPS einrichten könnte, unter der Annahme, daß es einen
Drucker namens <quote>quotadrucker</quote> gibt:

</para>


<para>
<indexterm><primary>lpadmin</primary></indexterm>
	<screen>
&rootprompt;<userinput>lpadmin -p quotadrucker -o job-quota-period=604800 \
	-o job-k-limit=1024 -o job-page-limit=100</userinput>
</screen></para>

<para>
Dies würde jeden einzelnen Benutzer darauf beschränken, 100 Seiten oder 1024 KB (was auch immer zuerst eintrifft)
innerhalb der letzten 604800 Sekunden (entspricht einer Woche) zu drucken.
</para>
</sect2>

<sect2>
<title>Korrektes und inkorrektes Abrechnen</title>

<para>
Damit CUPS richtig zählt, muß die Druckdatei durch den CUPS-pstops-Filter, ansonsten verwendet es einen
Ersatzwert von <quote>eins</quote>. Manche Druckdateien passieren diesen Filter nicht (z.B. Bilddateien), jedoch
sind diese ohnehin meist einseitige Aufträge. Das bedeutet, Aufträge von proprietären Treibern für den
Zieldrucker, die auf den Clients laufen, die von CUPS/Samba als <quote>raw</quote> weitergegeben werden (also ohne
Filterung) werden auch als einseitige Aufträge gezählt!
</para>

<para>
Sie müssen PostScript von den Clients senden (d.h., dort einen PostScript-Treiber ausführen), um eine Chance
auf korrekte Abrechnung zu bekommen. Wenn der Drucker ein Nicht-PS-Modell ist, müssen Sie CUPS die Wandlung der 
Auftragsdatei ein ein druckfertiges Format für den Zieldrucker durchführen lassen. Dies funktioniert derzeit
für ungefähr eintausend verschiedene Druckermodelle. Linuxprinting hat eine Treiber-
<ulink url="http://www.linuxprinting.org/printer_list.cgi">Liste.</ulink>
</para>
</sect2>

<sect2>
<title>Adobe- und CUPS-PostScript-Treiber für Windows Clients</title>

<para>
Vor CUPS 1.1.16 war Ihre einzige Option, den Adobe-PostScript-Treiber auf den Windows Clients zu verwenden.
Die Ausgabe dieses Treibers wurde auf der Seite von CUPS/Samba nicht immer durch den 
<command>pstops</command>-Filter geschleust, und daher auch nicht korrekt gezählt (der Grund ist, daß oft,
abhängig vom verwendeten PPD, ein PJL-Header vor das tatsächliche PostScript gesetzt wurde, was CUPS zum
Überspringen von <command>pstops</command> veranlasste und es direkt zum <command>pstoraster</command>-Schritt
brachte).
</para>

<para>
Seit CUPS 1.1.16 können Sie den CUPS-PostScript-Treiber für Windows <?latex \linebreak ?>NT/200x/XP Clients
verwenden (welcher im Download-Bereich von <filename>http://www.cups.org/</filename> als
<filename>cups-samba-1.1.16.tar.gz</filename> zu finden ist). Er funktioniert <emphasis>nicht</emphasis>
für Windows 9x/ME Clients, garantiert jedoch:
</para>

<itemizedlist>

<listitem><para> <indexterm><primary>PJL</primary></indexterm>keinen PJL-Header zu schreiben.</para></listitem>

<listitem><para>nach wie vor alle PJL-Optionen zu lesen und zu unterstützen, die im Treiber-PPD benannt sind.
</para></listitem>

<listitem><para>daß die Datei durch den <command>pstops</command>-Filter auf dem CUPS/Samba-Server gefiltert wird.
</para></listitem>

<listitem><para>korrekte Seitenzählung der Druckdatei.</para></listitem>
</itemizedlist>

<para>
Sie können mehr über das Setup dieser Kombination in der manpage für <command>cupsaddsmb</command> lesen (welche
nur vorhanden ist, wenn CUPS installiert ist, und nur aktuell seit CUPS 1.1.16).
</para>
</sect2>

<sect2>
<title>Die Syntax der Datei page_log</title>

<para>
<indexterm><primary>page_log</primary></indexterm>
Dies sind die Punkte, die CUPS in <filename>page_log</filename> für jede Seite eines Auftrags protokolliert:
</para>

<itemizedlist>
<listitem><para>Druckername</para></listitem>

<listitem><para>Benutzername</para></listitem>

<listitem><para>Auftrags-ID</para></listitem>

<listitem><para>Zeit des Drucks</para></listitem>

<listitem><para>Die Seitenzahl</para></listitem>

<listitem><para>Die Anzahl der Kopien</para></listitem>

<listitem><para>Ein Informations-String für die Verrechnung (optional)</para></listitem>

<listitem><para>Der Host, der den Auftrag gesendet hat (seit Version 1.1.19)</para></listitem>
</itemizedlist>

<para>
Hier ein Auszug aus der Datei <filename>page_log</filename> meines CUPS-Servers, um das Format und die
enthaltenen Begriffe zu illustrieren:
</para>

<para><screen>
tec_IS2027 kurt 401 [22/Apr/2003:10:28:43 +0100] 1 3 #marketing 10.160.50.13
tec_IS2027 kurt 401 [22/Apr/2003:10:28:43 +0100] 2 3 #marketing 10.160.50.13
tec_IS2027 kurt 401 [22/Apr/2003:10:28:43 +0100] 3 3 #marketing 10.160.50.13
tec_IS2027 kurt 401 [22/Apr/2003:10:28:43 +0100] 4 3 #marketing 10.160.50.13
Dig9110 boss 402 [22/Apr/2003:10:33:22 +0100] 1 440 finance-dep 10.160.51.33
</screen></para>

<para>
Dies war die Auftrags-ID <parameter>401</parameter>, gedruckt auf <parameter>tec_IS2027</parameter>
vom Benutzer <parameter>kurt</parameter>, ein 64-Seiten-Auftrag, gedruckt in 3 Kopien und verrechnet an
<parameter>#marketing</parameter>, gesendet von der IP-Adresse <constant>10.160.50.13.</constant>
 Der nächste Auftrag hatte die ID <parameter>402</parameter>, wurde vom Benutzer <parameter>boss</parameter>
von der IP-Adresse <constant>10.160.51.33</constant> gesendet, druckte von einer Seite 440 Kopien und
soll an <parameter>finance-dep</parameter> verrechnet werden.
</para>
</sect2>

<sect2>
<title>Mögliche Mängel</title>

<para>
Welche Mängel gibt es bei diesem Quota-System?
</para>

<itemizedlist>
<listitem><para>Die oben genannten (falsch protokollierter Auftrag im Fall von Drucker-Hardware-Ausfall, usw.).
</para></listitem>

<listitem><para>
In Wirklichkeit zählt CUPS die Auftrags-Seiten, die in der <emphasis>Software</emphasis> verarbeitet werden (also
durch den RIP gehen), und nicht die physischen Seiten, die den Drucker verlassen. Daher wird der Seitenzähler,
wenn es bei der ersten von tausend Seiten einen Papierstau gibt, der den Drucker zum Abbruch des Auftrags zwingt,
nach wie vor auf 1000 Seiten für diesen Auftrag stehen.</para></listitem>


<listitem><para>Alle Quotas sind dieselben für alle Benutzer (keine Flexibilität, um dem Boss ein höheres Quota
als dem Angestellten zu geben) und es gibt keine Unterstützung für Gruppen.
</para></listitem>

<listitem><para>Keine Möglichkeit, um die momentane Balance auszulesen, oder den 
<quote>verbrauchten</quote> Anteil des aktuellen Quotas.</para></listitem>

<listitem><para>Ein Benutzer, der 99 Seiten eines 100-Seiten-Quotas verbraucht hat, ist nach wie vor imstande,
einen 1000-Seiten-Auftrag zu senden und zu drucken.
</para></listitem>

<listitem><para>Ein Benutzer, dem ein Auftrag abgelehnt wird, da er sein Quota erreicht hat, bekommt keine
verständliche Fehlermeldung von CUPS außer
<quote>client-error-not-possible</quote>.</para></listitem>
</itemizedlist>
</sect2>

<sect2>
<title>Zukünftige Entwicklungen</title>

<para>
Dies ist das beste derzeit verfügbare System, und es gibt bedeutende Verbesserungen, die in Entwicklung für
CUPS 1.2 sind:
</para>

<itemizedlist>
<listitem><para>Die Seitenzählung wird in die Backends verlagert (diese reden direkt mit dem Drucker und erhöhen
den Zähler synchron mit dem tatsächlichen Druckvorgang; daher wird ein Papierstau bei der fünften Seite auch den
Zähler bei fünf stoppen).
</para></listitem>

<listitem><para>Quotas werden flexibler behandelt werden.</para></listitem>

<listitem><para>Möglicherweise wird es Unterstützung dafür geben, daß sich Benutzer schon vorab über ihre Konten
informieren können.
</para></listitem>

<listitem><para>Vielleicht gibt es dann auch Unterstützung für andere Werkzeuge zu diesem Thema.
</para></listitem>
</itemizedlist>
</sect2>

<!-- FIXME
<sect2>
<title>Other Accounting Tools</title>

<para>
PrintAnalyzer, pyKota, printbill, LogReport.
</para>
</sect2>
-->
</sect1>

<sect1>
<title>Zusätzliches Material</title>

<para>
Eine Druckerqueue mit <emphasis>keinem</emphasis> assoziierten PPD ist ein 
<quote>raw</quote> Drucker und alle Dateien gehen direkt an den Drucker, sobald sie vom Spooler empfangen werden.
Die Ausnahme sind die Dateien vom Typ <parameter>application/octet-stream</parameter>, die das Feature
pass-through aktiviert haben müssen. <quote>Raw</quote> Queues führen überhaupt keine Filterung durch, sie geben
die Datei direkt an das CUPS-Backend weiter. Dieses Backend ist verantwortlich für das Senden der Daten an das 
Gerät (wie in der <quote>device URI</quote>-Notation: <filename>lpd://, socket://,
smb://, ipp://, http://, parallel:/, serial:/, usb:/</filename>, und so weiter).
</para>

<para>
cupsomatic/Foomatic sind <emphasis>keine</emphasis> nativen CUPS-Treiber, und sie werden nicht mit CUPS 
geliefert. Sie sind ein Dritt-Hersteller-Zusatz, der auf Linuxprinting.org entwickelt wird. Als solches sind
sie ein brillanter Hack, um alle Modelle (angetrieben von Ghostscript-Treibern/Filtern in traditionellen
Spoolern) auch via CUPS zu betreiben, mit derselben Qualität (gut oder schlecht!) wie in diesen anderen
Spoolern. <parameter>cupsomatic</parameter> ist nur ein Hilfsmittel, um an dieser Stelle in der CUPS-Filterkette
eine Ghostscript-Befehlszeile auszuführen, wo normalerweise der native CUPS-Filter 
<parameter>pstoraster</parameter> <quote>anspringen</quote> würde. cupsomatic übergeht pstoraster, nimmt die
Druckdatei von CUPS in Beschlag und leitet Sie durch Ghostscript um. CUPS akzeptiert das, weil die zugeordnete
cupsomatic/foomatic-PPD angibt:

<filterline>
  *cupsFilter:  "application/vnd.cups-postscript 0 cupsomatic"
</filterline>

Diese Zeile bewegt CUPS dazu, die Datei an cupsomatic zu übergeben, sobald es sie erfolgreich in den MIME-Typ
<parameter>application/vnd.cups-postscript</parameter> gewandelt hat. Diese Umwandlung passiert nicht für
Aufträge von Windows, die automatisch als
<parameter>application/octet-stream</parameter> typisiert werden, mit den begleitenden Änderungen in
<filename>/etc/cups/mime.types</filename>.
</para>

<para>
CUPS ist weitgehend konfigurierbar und flexibel, sogar was seinen Filtermechanismus betrifft. Ein weiterer
<quote>Workaround</quote> in manchen Situationen wäre es, Einträge in <filename>/etc/cups/mime.types</filename>
zu haben, wie folgend:

<filterline>
 application/postscript           application/vnd.cups-raw  0  -
 application/vnd.cups-postscript  application/vnd.cups-raw  0  -
</filterline>

Dies würde verhindern, daß jegliche PostScript-Dateien gefiltert werden (sie werden dann eigentlich durch den
virtuellen Filter <emphasis>nullfilter</emphasis> gefiltert, bezeichnet mit <quote>-</quote>). Das könnte
nur für PS-Drucker hilfreich sein. Wenn Sie PS-Code auf Nicht-PS-Druckern drucken wollen (sofern diese 
ASCII-Textdruck beherrschen), könnte ein Eintrag wie dieser helfen:

<filterline>
 */*           application/vnd.cups-raw  0  -
</filterline>

der <emphasis>alle</emphasis> Dateien ohne weitere Bearbeitung an das Backend weiterschickt.
</para>

<para>
Sie könnten den folgenden Eintrag haben:

<filterline>
application/vnd.cups-postscript application/vnd.cups-raw 0 \
	my_PJL_stripping_filter
</filterline>

Sie werden einen <parameter>mein_PJL_entfernungs_filter</parameter> schreiben müssen (dies könnte ein 
Shell-Skript sein), der die PS-Daten analysiert und das unerwünschte PJL entfernt. Dies muß konform zum 
CUPS-Filter-Design passieren (hauptsächlich, empfangen und weitergeben der Parameter Druckername, Job-ID,
Benutzername, Jobtitle, Kopien, Druckoptionen und eventuell der Dateiname). Es wird als für alle ausführbar
in <filename>/usr/lib/cups/filters/</filename> installiert und wird von CUPS aufgerufen, wenn es einen
MIME-Typen <parameter>application/vnd.cups-postscript</parameter> erkennt.
</para>

<para>
CUPS kann mit <parameter>-o job-hold-until=indefinite</parameter> umgehen.
Das hält den Auftrag in der Queue auf Stillstand. Er wird nur auf manuelle Veranlassung des Druck-Operators
gedruckt. Dies ist eine Anforderung in vielen Reproduktions-Abteilungen, wo ein paar wenige Operatoren die
Aufträge von vielen hundert Benutzern auf irgendeiner grossen Maschine verwalten, wo keinem Benutzer direkter
Zugriff gestattet ist (wo z.B. die Operatoren das richtige Papier laden müssen, bevor sie den 
10000-Seiten-Auftrag starten, der vom Marketing für das Mailing eingelangt ist, usw.).
</para>
</sect1>

<sect1>
<title>Auto-Löschen oder Erhaltung der CUPS-Spool-Dateien</title>

<para>
Samba-Druckdateien durchlaufen zwei Spool-Verzeichnisse. Eines ist das Eingangsverzeichnis, das von Samba 
verwaltet wird (im Parameter <smbconfoption><name>path</name><value>/var/spool/samba</value></smbconfoption>
im Abschnitt <smbconfsection>[printers]</smbconfsection> von &smb.conf; festgelegt). Das andere ist das
Spool-Verzeichnis Ihres UNIX-Drucksystems. Für CUPS ist das normalerweise <filename>/var/spool/cups/</filename>,
gesetzt in der Anweisung <filename>RequestRoot /var/spool/cups</filename> in der Datei
<filename>cupsd.conf</filename>.
</para>

<sect2>
<title>Erklärung von CUPS-Konfigurations-Einstellungen</title>

<para>
Einige wichtige Parameter in der CUPS-Konfigurations-Datei <filename>cupsd.conf</filename> sind:
</para>

<variablelist>

<varlistentry><term>PreserveJobHistory Yes</term>
<listitem><para>
Dies beläßt einige Details von Aufträgen im <quote>Gedächtnis</quote> von cupsd (es hält die Dateien
c12345, c12346, usw. im CUPS-Spool-Verzeichnis, die einen ähnlichen Job machen wie die altmodischen 
BSD-LPD-Kontroll-Dateien). Der voreingestellte Wert dieses Parameters ist <quote>Yes</quote>.
</para></listitem></varlistentry>

<varlistentry><term>PreserveJobFiles Yes</term>
<listitem><para>
Das beläßt die Auftragsdateien selbst im <quote>Gedächtnis</quote> von cupsd (es hält die Dateien
d12345, d12346 etc. im CUPS-Spool-Verzeichnis). Der voreingestellte Wert dieses Parameters ist <quote>No</quote>.
</para></listitem></varlistentry>

<varlistentry><term><emphasis><quote>MaxJobs 500</quote></emphasis></term>
<listitem><para>
Diese Anweisung kontrolliert die maximale Anzahl von Aufträgen, die im Speicher gehalten werden. Sobald die 
Anzahl der Aufträge das Limit erreichen, wird der älteste abgeschlossene Auftrag automatisch aus dem System
entfernt, um Platz für den neuen zu machen. Wenn alle Aufträge nach wie vor in Schwebe oder aktiv sind, wird
der neue Auftrag abgelehnt. Setzt man dieses Maximum auf 0, wird diese Funktionalität deaktiviert. 
Der voreingestellte Wert dieses Parameters ist 0.
</para></listitem></varlistentry>
</variablelist>

<para>
(Es gibt auch noch zusätzliche Einstellungen für <parameter>MaxJobsPerUser</parameter> und
<parameter>MaxJobsPerPrinter</parameter>...)
</para>
</sect2>

<sect2>
<title>Vorbedingungen</title>

<para>
Damit alles so funktioniert, wie besprochen, brauchen Sie drei Dinge:
</para>

<itemizedlist>
<listitem><para>Einen Samba-smbd, der gegen <filename>libcups</filename> kompiliert wurde (Sie können das unter
Linux mit <userinput>ldd `which smbd'</userinput> prüfen).</para></listitem>

<listitem><para>Die Einstellung
		<smbconfoption><name>printing</name><value>cups</value></smbconfoption> 
		in der Samba-&smb.conf;.</para></listitem>

<listitem><para>Die Einstellung
		<smbconfoption><name>printcap</name><value>cups</value></smbconfoption>
		in der Samba-&smb.conf;.</para></listitem>
</itemizedlist>

<note><para>
In diesem Fall werden alle anderen manuell gesetzten Druck-bezogenen Befehle (wie
<smbconfoption><name>print command</name></smbconfoption>,
<smbconfoption><name>lpq command</name></smbconfoption>,
<smbconfoption><name>lprm command</name></smbconfoption>,
<smbconfoption><name>lppause command</name></smbconfoption> oder
<smbconfoption><name>lpresume command</name></smbconfoption>) ignoriert und sollten normalerweise keinerlei
Einfluß mehr auf Ihren Druck haben.
</para></note>
</sect2>

<sect2>
<title>Manuelle Konfiguration</title>

<para>
Wenn Sie Dinge manuell tun wollen, ersetzen Sie 
<smbconfoption><name>printing</name><value>cups</value></smbconfoption> durch
<smbconfoption><name>printing</name><value>bsd</value></smbconfoption>. Dann kann Ihr manuell gesetzter 
Befehlssatz funktionieren (Ich habe das <emphasis>nicht</emphasis> getestet), und 
<smbconfoption><name>print command</name><value>lp -d %P %s; rm %s"</value></smbconfoption> könnte das tun, was 
Sie brauchen.
</para>
</sect2>
</sect1>

<sect1>
<title>Aus CUPS auf Windows-Drucker drucken</title>

<para>
Von Zeit zu Zeit taucht die Frage auf, wie man <emphasis>von</emphasis> Samba <emphasis>auf</emphasis>
einen Windows-Drucker druckt? Normalerweise erfolgt die lokale Verbindung vom Windows-Rechner zum Drucker
via USB oder Parallel-Kabel, aber das macht Samba nichts aus. Hier muß nur eine SMB-Verbindung zum
Windows-Rechner geöffnet werden. Natürlich muß der Drucker zuvor freigegeben werden. Wie Sie bereits 
gelernt haben, verwendet CUPS <emphasis>Backends</emphasis>, um mit den Druckern und anderen Servern zu
kommunizieren. Um mit unter Windows freigegebenen Druckern zu kommunizieren, müssen Sie das Backend
<filename>smb</filename> (welch Überraschung!) verwenden. Prüfen Sie, ob es dieses im 
CUPS-Backend-Verzeichnis gibt. Dieses liegt üblicherweise in <filename>/usr/lib/cups/backend/</filename>.
Sie sollten dort eine Datei namens <filename>smb</filename> vorfinden. Diese sollte ein Symlink auf
<filename>smbspool</filename> sein, und diese Datei muß existieren und ausführbar sein:
</para>

<para><screen>
&rootprompt;<userinput>ls -l /usr/lib/cups/backend/</userinput>
total 253
drwxr-xr-x    3 root   root     720 Apr 30 19:04 .
drwxr-xr-x    6 root   root     125 Dec 19 17:13 ..
-rwxr-xr-x    1 root   root   10692 Feb 16 21:29 canon
-rwxr-xr-x    1 root   root   10692 Feb 16 21:29 epson
lrwxrwxrwx    1 root   root       3 Apr 17 22:50 http -&gt; ipp
-rwxr-xr-x    1 root   root   17316 Apr 17 22:50 ipp
-rwxr-xr-x    1 root   root   15420 Apr 20 17:01 lpd
-rwxr-xr-x    1 root   root    8656 Apr 20 17:01 parallel
-rwxr-xr-x    1 root   root    2162 Mar 31 23:15 pdfdistiller
lrwxrwxrwx    1 root   root      25 Apr 30 19:04 ptal -&gt; /usr/sbin/ptal-cups
-rwxr-xr-x    1 root   root    6284 Apr 20 17:01 scsi
lrwxrwxrwx    1 root   root      17 Apr  2 03:11 smb -&gt; /usr/bin/smbspool
-rwxr-xr-x    1 root   root    7912 Apr 20 17:01 socket
-rwxr-xr-x    1 root   root    9012 Apr 20 17:01 usb

&rootprompt;<userinput>ls -l `which smbspool`</userinput>
-rwxr-xr-x    1 root   root  563245 Dec 28 14:49 /usr/bin/smbspool
</screen></para>

<para>
Wenn der Symlink nicht existiert, legen Sie ihn an:
</para>

<para><screen>
&rootprompt;<userinput>ln -s `which smbspool` /usr/lib/cups/backend/smb</userinput>
</screen></para>

<para>
<command>smbspool</command> wurde von Mike Sweet (von den CUPS-Leuten) geschrieben. Es ist in Samba inkludiert.
Es kann auch zum Drucken auf andere Subsysteme als CUPS verwendet werden, um Aufträge an Windows-Druckfreigaben
zu spoolen. Um den Drucker <replaceable>winprinter</replaceable> unter CUPS einzurichten, müssen Sie einen 
Treiber dafür haben. Prinzipiell bedeutet das, daß die Druckdaten auf dem CUPS/Samba-Rechner in ein für den
Drucker verdaubares Format gewandelt werden müssen (der Windows-Rechner ist unfähig, irgendwelche von Ihnen
gesendete Daten zu konvertieren). Das bedeutet auch, daß Sie imstande sein sollten, auf den Drucker zu drucken, 
wenn er direkt an den CUPS/Samba-Rechner angeschlossen wäre. Das ist es auch, was Sie zur Fehlersuche tun 
sollten, um zu prüfen, ob dieses Glied der Verarbeitungs-Kette intakt ist. Dann fahren Sie damit fort, die
Netzwerk-Verbindung/Authentifikation zum/am Windows-Rechner zu prüfen, usw.
</para>

<para>
Um einen Drucker mit dem Backend <parameter>smb</parameter> unter CUPS zu installieren, verwenden Sie diesen
Befehl:
</para>

<para><screen>
&rootprompt;<userinput>lpadmin -p winprinter -v smb://WINDOWSNETBIOSNAME/printersharename \
  -P /path/to/PPD</userinput>
</screen></para>

<para>
Das PPD muß imstande sein, CUPS dazu anzuweisen, die Druckdaten für das Zielgerät zu generieren. Für PS-Drucker
verwenden Sie einfach das PPD, das mit dem Windows NT PostScript-Treiber verwendet würde. Aber was machen Sie, 
wenn der Drucker nur mit einem Passwort zugänglich ist? Oder wenn der Drucker-Server Mitglied einer anderen
Arbeitsgruppe ist? Dafür wurde vorgesorgt: Sie können die erforderlichen Parameter als Teil der
<filename>smb://</filename> Geräte-URI angeben:
</para>

<itemizedlist>
	<listitem><filename>smb://ARBEITSGRUPPE/WINDOWSNETBIOSNAME/druckerfreigabenname</filename></listitem>
	<listitem><filename>smb://benutzername:passwort@ARBEITSGRUPPE/WINDOWSNETBIOSNAME/druckerfreigabenname</filename></listitem>
	<listitem><filename>smb://benutzername:passwort@WINDOWSNETBIOSNAME/druckerfreigabenname</filename></listitem>
</itemizedlist>

<para>
Beachten Sie, daß die Geräte-URI in der Prozessliste des Samba-Servers sichtbar ist (d.h., wenn jemand den Befehl
<command>ps -aux</command> unter Linux verwendet), sogar wenn der Benutzername und die Passwörter bereinigt
werden, bevor Sie in die Logfiles geschrieben werden. Also ist dies eine inhärent unsichere Option, jedoch ist
es die einzige. Verwenden Sie dies nicht, wenn Sie Ihre Passwörter schützen wollen. Geben Sie besser den Drucker
so frei, daß man kein Passwort benötigt! Das Drucken wird nur funktionieren, wenn Sie eine funktionierende
Netbios-Namensauflösung haben. Beachten Sie, daß dies eine Eigenschaft von CUPS ist, und Sie nicht 
notwendigerweise smbd laufen haben müssen.
</para>
</sect1>

<sect1>
<title>Mehr CUPS-Filterketten</title>

<para>
Die folgenden Diagramme <quote>enthüllen</quote>, wie CUPS mit Druckaufträgen umgeht.
</para>

<image id="cups1"><imagefile>cups1</imagefile><imagedescription>Filterkette 1.</imagedescription></image>

<image id="cups2"><imagefile>cups2</imagefile><imagedescription>Filterkette mit cupsomatic</imagedescription></image>

</sect1>

<sect1>
	<title>Gängige Fehler</title>

	<sect2>
		<title>Windows 9x/ME Client kann keinen Treiber installieren</title>

		<para>Für Windows 9x/ME benötigen die Clients Druckernamen, die maximal acht Zeichen lang sind
		(oder <quote>8 plus 3 Zeichen Suffix</quote>); andernfalls werden die Treiberdateien nicht
		übertragen, wenn Sie sie von Samba herunterladen wollen.</para>

	</sect2>

	<sect2>
		<title><quote>cupsaddsmb</quote> fragt immer wieder nach dem root-Passwort</title>

		<para>Verwenden Sie <smbconfoption><name>security</name><value>user</value></smbconfoption>? 
		Haben Sie <command>smbpasswd</command> verwendet, um root ein Samba-Konto zu geben?
		Sie können zwei Dinge tun: ein anderes Terminal öffnen und <command>smbpasswd -a root</command>
		ausführen, um das Konto anzulegen und im ersten Terminal damit fortfahren, das neue Passwort
		dort einzugeben. Oder Sie brechen die Schleife ab, indem Sie zweimal ENTER drücken (ohne zu
		versuchen, ein Passwort einzugeben).</para>

		<para>
		Wenn der Fehler lautet: <quote>tree connect failed: NT_STATUS_BAD_NETWORK_NAME</quote>,
		haben Sie vielleicht vergessen, das Verzeichnis <filename>/etc/samba/drivers</filename> 
		anzulegen.
		</para>

	</sect2>

	<sect2>
		<title><quote>cupsaddsmb</quote> Fehler</title>

		<para>
		Die Verwendung von <quote>cupsaddsmb</quote> gibt die Meldung 
		<quote>No PPD file for printer...</quote>, obwohl die Datei vorhanden ist. Was kann das Problem
		sein?
		</para>

		<para>Haben Sie die Drucker-Freigabe in CUPS aktiviert? D.h., haben Sie einen Abschnitt
		<parameter>&lt;Location /printers&gt;....&lt;/Location&gt;</parameter> in der Datei
		<filename>cupsd.conf</filename> Ihres CUPS-Servers, die dem Host, von dem aus Sie
		<quote>cupsaddsmb</quote> auszuführen versuchen, den Zugriff erlaubt? Es 
		<emphasis>könnte</emphasis> ein Thema sein, wenn Sie cupsaddsmb übers Netz verwenden, oder mit
		dem Parameter <option>-h</option>: 
		<userinput>cupsaddsmb -H sambaserver -h cupsserver -v printername</userinput>.
		</para>

		<para>Ist die Anweisung <parameter>TempDir</parameter> in
		<filename>cupsd.conf</filename> auf einen gültigen Wert gesetzt und schreibbar?
		</para>

	</sect2>

	<sect2>
		<title>Client kann sich nicht mit dem Samba-Drucker verbinden</title>

	<para>Verwenden Sie <command>smbstatus</command>, um zu prüfen, welcher Benutzer Sie aus der Sicht von
	Samba sind. Haben Sie die Rechte, um in die Freigabe <smbconfsection>[print$]</smbconfsection> zu
	schreiben?
	</para>

	</sect2>

	<sect2>
	<title>Neue Probleme: Wiederverbindung mit anderem Konto unter Windows 200x/XP</title>

<para>Sobald Sie als falscher Benutzer verbunden sind (z.B., als <constant>nobody</constant>, was oft geschieht,
wenn Sie <smbconfoption><name>map to guest</name><value>bad user</value></smbconfoption> gesetzt haben),
wird der Windows Explorer es nicht akzeptieren, wenn Sie sich als ein anderer Benutzer anzumelden versuchen.
Nicht ein Byte wird zu Samba übertragen werden, aber Sie werden immer noch eine dumme Fehlermeldung sehen, die
Sie glauben läßt, daß Samba den Zugriff verweigert hat. Verwenden Sie <command>smbstatus</command>, um nach
aktiven Verbindungen zu sehen. Killen Sie die PIDs. Sie können sich noch immer nicht neu verbinden und bekommen
die gefürchtete Meldung <computeroutput>You can't connect with a second account from the same
machine</computeroutput>, sobald Sie es versuchen. Und Sie sehen kein einziges Byte bei Samba ankommen (sehen
Sie die Logs; verwenden Sie <quote>ethereal</quote>), das einen neuerlichen Verbindungsversuch anzeigt. 
Schliessen Sie alle Explorer-Fenster. Das läßt Windows vergessen, was es in seinem Speicher als aufgebaute
Verbindungen gepuffert hat. Dann verbinden Sie sich neu als der <quote>richtige</quote> Benutzer. Die beste 
Methode ist es, ein DOS-Terminal-Fenster zu verwenden und <emphasis>zuerst</emphasis> 
<userinput>net use z: \\&example.server.samba;\print$ /user:root</userinput> auszuführen. Überprüfen Sie
mit <command>smbstatus</command>, daß Sie mit einem anderen Konto angemeldet sind. Jetzt öffnen Sie den Folder
<guilabel>Drucker und Faxgeräte</guilabel> (auf dem Samba-Server in der <guilabel>Netzwerkumgebung</guilabel>),
klicken Sie mit rechts auf den betreffenden Drucker und wählen Sie 
<guibutton>Verbinden...</guibutton></para></sect2>

<sect2>
<title>Vermeiden Sie es, als der falsche Benutzer mit dem Samba-Server verbunden zu sein</title>
	
<para>Sie sehen per <command>smbstatus</command>, daß Sie als der Benutzer nobody angemeldet sind; dabei wollen
Sie root sein oder printer admin. Das kommt eventuell von
<smbconfoption><name>map to guest</name><value>bad user</value></smbconfoption>, das Sie stillschweigend unter 
dem Gästekonto angemeldet hat, als Sie (vielleicht unabsichtlich) einen falschen Benutzernamen angegeben haben.
Entfernen Sie <smbconfoption><name>map to guest</name></smbconfoption>, wenn Sie dies vermeiden wollen.
</para></sect2>

<sect2>
<title>Upgrade von Adobe-Treibern auf CUPS-Treiber</title>

<para>
Diese Information kam von einem Posting in der Mailing-Liste, das Probleme beim Upgrade von den Adobe-Treibern 
auf die CUPS-Treiber auf Microsoft Windows NT/200x/XP Clients beschrieb.
</para>

<para>Löschen Sie zuerst alle alten Drucker, die die Adobe-Treiber verwenden. Dann löschen Sie alle alten 
Adobe-Treiber. (Unter Windows 200x/XP, Rechtsklick in den Hintergrund des Ordners
<guilabel>Drucker und Faxgeräte</guilabel>, Wählen von <guimenuitem>Servereigenschaften</guimenuitem>,
<guilabel>Treiber</guilabel>, und hier löschen).</para></sect2>

<sect2><title>Ich kann <quote>cupsaddsmb</quote> nicht auf einem Samba-Server verwenden, der PDC ist</title>
<para>Verwenden Sie den <quote>nackten</quote> root Benutzernamen? Versuchen Sie es so:
<userinput>cupsaddsmb -U <replaceable>DOMAINNAME</replaceable>\\root -v
<replaceable>druckername</replaceable></userinput> (Beachten Sie die beiden Backslashes: der erste wird 
benötigt, um das <quote>escaping</quote> des zweiten zu bewirken).</para></sect2>

<sect2><title>Ein gelöschter Windows 200x Druckertreiber wird immer noch angezeigt</title>
<para>Das Löschen eines Druckers auf dem Client löscht nicht gleichzeitig den Treiber (zur Überprüfung,
Rechtsklick in den Hintergrund des Ordners
<guilabel>Drucker und Faxgeräte</guilabel>, Wählen von <guimenuitem>Servereigenschaften</guimenuitem>,
<guilabel>Treiber</guilabel>). Dieselben alten Treiber werden wiederverwendet, wenn Sie versuchen, einen Drucker
mit demselben Namen zu installieren. Wenn Sie auf einen neuen Treiber aktualisieren wollen, löschen Sie zuerst
die alten. Das Löschen ist nur möglich, wenn kein anderer Drucker den selben Treiber verwendet.</para></sect2>

<sect2><title>Windows 200x/XP "Lokale Sicherheits-Richtlinien"</title>
<para>Lokale Sicherheits-Richtlinien können eventuell die Installation unsignierter Treiber verhindern.
Sie können sogar generell die Installation von Drucker-Treibern verbieten.
</para></sect2>

<sect2><title>Administrator kann keine Drucker für alle lokalen Benutzer installieren</title>
<para>Windows XP behandelt SMB-Drucker auf einer <quote>per-user</quote>-Basis.
Das bedeutet, daß jeder Benutzer den Drucker selbst installieren muß. Um einen Drucker zu haben, der für jeden
verfügbar ist, möchten Sie vielleicht die integrierten IPP-Client-Fähigkeiten von Win XP nutzen. Fügen Sie 
einen Drucker mit dem Druck-Pfad <parameter>http://cupsserver:631/printers/druckername</parameter> hinzu.
Wir suchen nach wie vor nach einer Lösung dieses Problems. Vielleicht könnte ein Anmelde-Skript automatisch
Drucker für alle Benutzer installieren.</para></sect2>

<sect2><title>FIXME : Print Change Notify Functions on NT-clients</title>
<para>For print change, notify functions on NT++ clients.
Diese müssen zuerst den <command>Server</command>-Dienst ausführen (umbenannt auf
<command>Datei- &amp; und Druckerfreigabe für Microsoft-Netzwerke</command> in XP).</para></sect2>

<sect2>
<title>Win XP-SP1</title>

<para>Win XP-SP1 führte eine Point and Print Beschränkungs-Richtlinie ein (diese Beschränkung gilt nicht für
die Benutzergruppen
<quote>Administrator</quote> oder <quote>Power User</quote>). Im Gruppenrichtlinien-Editor gehen Sie auf
<guimenu>Benutzerkonfiguration -> Administrative Vorlagen ->
 Systemsteuerung -> Drucker</guimenu>. Diese Richtlinie ist automatisch aktiviert und auf
<constant>Benutzer können Point and Print nur für Computer in der eigenen Gesamtstruktur verwenden.</constant>.
Sie müssen dies eventuell auf <constant>Deaktiviert</constant> oder <constant>Point and Print nur mit folgenden
Servern</constant> setzen, um Treiberdownloads von Samba zu ermöglichen.
</para>
</sect2>

<sect2>
<title>Drucker-Optionen für aller Benutzer können nicht unter Windows 200x/XP gesetzt werden</title>

<para>Wie machen Sie das? Ich wette, auf die falsche Art (es ist auch nicht einfach herauszufinden).
Es gibt drei verschiedene Arten, Sie zu einem Dialog zu bringen, der <emphasis>scheinbar</emphasis> all
diese Dinge setzen kann. Alle drei Dialoge <emphasis>sehen</emphasis> gleich aus, jedoch tut nur einer das, was
Sie beabsichtigen. Sie müssen Administrator sein, oder Druck-Administrator, um dies für alle Benutzer tun zu
können. Hier sehen Sie, wie ich das in XP mache:
</para>

<orderedlist numeration="upperalpha">

<listitem><para>Die erste falsche Art:

<orderedlist>
<listitem><para>Öffnen von <guilabel>Drucker und Faxgeräte</guilabel>.</para></listitem>

<listitem><para>Rechtsklick auf den Drucker 
(<guilabel>netzwerkdrucker auf cupshost</guilabel>) und Auswahl von <guimenuitem>Druckeinstellungen</guimenuitem>
im Kontextmenü.</para></listitem>

<listitem><para>Sehen Sie sich diesen Dialog genau an, und versuchen Sie, sich genau zu merken, wie er aussieht.
</para></listitem>
</orderedlist>
</para>
</listitem>

<listitem><para>Die zweite falsche Art:

<orderedlist>
<listitem><para>Öffnen von <guilabel>Drucker und Faxgeräte</guilabel>.</para></listitem>

<listitem><para>Rechtsklick auf den Drucker
(<guilabel>netzwerkdrucker auf cupshost</guilabel>) und Auswahl von <guimenuitem>Eigenschaften</guimenuitem>
im Kontextmenü.</para></listitem>

<listitem><para>Klick auf <guilabel>Allgemein</guilabel>.</para></listitem>

<listitem><para>Klick auf <guibutton>Druckeinstellungen...</guibutton></para></listitem>

<listitem><para>Ein neuer Dialog öffnet sich. Halten Sie diesen Dialog geöffnet und gehen Sie zurück zum
ersten Dialog.</para></listitem>
</orderedlist>
</para>
</listitem>

<listitem><para>Die dritte, und richtige Art:

<orderedlist>

<listitem><para>Öffnen von <guilabel>Drucker und Faxgeräte</guilabel>.</para></listitem>

<listitem><para>Klick auf <guilabel>Erweitert</guilabel>. (Wenn alles <quote>grau ist</quote>, dann sind Sie 
nicht als Benutzer mit ausreichenden Rechten angemeldet).</para></listitem>

<listitem><para>Klicken Sie auf den Button <guibutton>Druckeinstellungen</guibutton>.</para></listitem>

<listitem><para>Auf irgendeinem der beiden erscheinenden <quote>Karteikarten</quote> klicken Sie auf
den Button <guibutton>Erweitert...</guibutton>.</para></listitem>

<listitem><para>Ein neuer Dialog öffnet sich. Vergleichen Sie Ihn mit dem anderen, identisch aussehenden aus
Variante <quote>A</quote> oder <quote>B</quote>.</para></listitem>
</orderedlist>
</para>
</listitem>
</orderedlist>

<para>
Sehen Sie irgendeinen Unterschied? Ich auch nicht. Wie auch immer, nur der letzte, zu dem Sie nach Befolgung
von Variante <quote>C</quote> gelangt sind, wird all die Einstellungen dauerhaft speichern und zu 
Voreinstellungen für neue Benutzer machen. Wenn Sie wollen, daß alle Clients die selben Voreinstellungen 
erhalten, müssen Sie diese Schritte <emphasis>als Administrator</emphasis> 
(<smbconfoption><name>printer admin</name></smbconfoption> in &smb.conf;) durchführen, 
<emphasis>bevor</emphasis> ein Client den Treiber herunterlädt (die Clients können später ihre
<emphasis>per-user-Standards</emphasis> setzen, indem sie die obigen Prozeduren <emphasis>A</emphasis> oder
<emphasis>B</emphasis> befolgen).</para></sect2>

<sect2><title>Die gängigsten Schnitzer in den Treiber-Einstellungen auf Windows-Clients</title>
<para>Verwenden Sie nicht <parameter>Optimize for
Speed</parameter>, sondern verwenden Sie stattdessen <parameter>Optimize for
Portability</parameter> (Adobe-PS-Treiber). Verwenden Sie nicht
<parameter>Page Independence: No</parameter>: sondern verwenden Sie immer
<parameter>Page Independence: Yes</parameter> (Microsoft PS-Treiber und CUPS-PS-Treiber für Windows NT/200x/XP).
Wenn es irgendwelche Probleme mit Schriften gibt, verwenden Sie <parameter>Download as Softfont into 
printer</parameter> (Adobe-PS-Treiber). 
Wählen Sie für <guilabel>TrueType Download Options</guilabel> <constant>Outline</constant>.
Verwenden Sie PostScript Level 2, wenn Sie Probleme mit einem Nicht-PS-Drucker haben und Sie die Wahl haben.
</para></sect2>

<sect2><title><command>cupsaddsmb</command> funktioniert nicht mit einem neu installierten Drucker</title>
<para>Symptom: Der letzte Befehl von <command>cupsaddsmb</command> schließt nicht erfolgreich ab:
<command>cmd = setdriver printername printername</command> gibt zurück:
NT_STATUS_UNSUCCESSFUL, dann wurde der Drucker eventuell noch nicht erfolgreich von Samba erkannt.
Scheint er in der Netzwerkumgebung auf? In <command>rpcclient hostname -c `enumprinters'</command>? Starten Sie
smbd neu (oder senden Sie ein <command>kill -HUP</command> an alle von <command>smbstatus</command> angezeigten
Prozesse) und versuchen Sie es erneut.</para></sect2>

<sect2>
<title>Die Berechtigungen von <filename>/var/spool/samba/</filename> werden nach jedem Reboot 
zurückgesetzt</title>
<para>Haben Sie aus Versehen das CUPS-Spool-Verzeichnis auf dasselbe Verzeichnis gesetzt?
(<parameter>RequestRoot /var/spool/samba/</parameter> in <filename>cupsd.conf</filename> oder
<smbconfoption><name>path</name></smbconfoption> im Abschnitt <smbconfsection>[printers]</smbconfsection>
in &smb.conf;). Diese Verzeichnisse <parameter>müssen</parameter> unterschiedlich sein.
Setzen Sie <parameter>RequestRoot /var/spool/cups/</parameter> in
<filename>cupsd.conf</filename> und <smbconfoption><name>path</name><value>
/var/spool/samba</value></smbconfoption> im Abschnitt <smbconfsection>[printers]</smbconfsection> von &smb.conf;.
Andernfalls wird cupsd die Berechtigungen seines Spool-Verzeichnisses bei jedem Neustart bereinigen, und das
Drucken wird nicht verlässlich funktionieren.</para></sect2>

<sect2>
<title>Eine Druck-Queue namens <quote>lp</quote> geht falsch mit Druckaufträgen um</title>

<para>
In diesem Fall schluckt eine Druck-Queue namens <quote>lp</quote> periodisch Aufträge und spuckt komplett
andere Dinge aus, als an sie gesendet wurden.
</para>

<para>
Es ist eine schlechte Idee, irgendeinen Drucker <quote>lp</quote> zu nennen. Das ist der traditionelle
UNIX-Namen für den Standard-Drucker. CUPS kann so eingerichtet werden, daß es automatisch
<quote>Implicit Classes</quote> anlegt. Das bedeutet, alle Drucker mit demselben Namen zu einem Geräte-Pool
zu gruppieren und eine Lastverteilung unter ihnen nach der Methode <quote>round-robin</quote> durchzuführen.
Die Wahrscheinlichkeit, daß jemand anderes auch einen Drucker namens <quote>lp</quote> hat, ist hoch. Es kann
sein, daß Sie seine Aufträge empfangen, und Ihre Aufträge an seinen Drucker senden. Um strenge Kontrolle
über die Druckernamen zu haben, setzen Sie <parameter>BrowseShortNames No</parameter>. Das stellt jeden Drucker
als <replaceable>druckername@cupshost</replaceable> dar und gibt Ihnen besseren Überblick darüber, was in einem
grossen Netzwerk passieren kann.</para></sect2>

<sect2><title>Standort der Adobe-PostScript-Treiber-Dateien für <quote>cupsaddsmb</quote></title>
<para>Verwenden Sie <command>smbclient</command>, um sich mit irgendeiner Windows-Box mit einem freigegebenen
PS-Drucker zu verbinden: <command>smbclient //windowsbox/print\$ -U guest</command>.
Sie können ins Unterverzeichnis <filename>W32X86/2</filename> vordringen, um mittels 
<command>mget ADOBE*</command> die Dateien (und andere) zu erhalten, oder ins Verzeichnis 
<filename>WIN40/0</filename>. Eine andere Möglichkeit ist es, die Dateien als <filename>*.exe</filename>-Package
von der Adobe-Website herunterzuladen.</para></sect2>
</sect1>

<sect1>
<title>Überblick über die CUPS-Druck-Prozesse</title>

<para>Ein vollständiger Überblick der CUPS-Druck-Prozesse kann im <link linkend="a_small">nächsten Flußdiagramm</link> gewonnen werden.</para>

<image id="a_small"><imagedescription>Übersicht über das Drucken mit CUPS.</imagedescription>
	<imagefile>a_small</imagefile>
</image>
</sect1>

</chapter>












