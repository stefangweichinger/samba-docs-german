<?xml version="1.0" encoding="ISO-8859-1"?>
<chapter id="AccessControls">
<chapterinfo>
	&author.jht;
	&author.jeremy;
	<author>&person.jelmer;<contrib>drawing</contrib></author>
	&author.jht;
    <pubdate>April 3 2003</pubdate>
	<author>&person.luft;<contrib>Deutsche Übersetzung</contrib></author>
</chapterinfo>
<title>Zugriffskontrollen für Dateien, Verzeichnisse und Netzwerk-Freigaben</title>

<para>
<indexterm><primary>ACLs</primary></indexterm>
Fortgeschrittene Windows-Benutzer sind häufig verwirrt, wenn sich eine Änderung der Besitzrexhte an Dateien oder Verzeichnissen
auf dem Samba-Server nicht so auswirkt, wie sie es erwarten. MS-Administratoren verwirrt es oft, wenn sie versuchen,
Ihre Daten mit Zugriffskontroll-Listen vor unerlaubten Zugriffen zu schützen.
</para>

<para>
Viele UNIX-Administratoren sind nicht mit der MS Windows-Umgebung vertraut.
Besondere Probleme ergeben sich aus den
Benutzerwünschen bezüglich der Kontrolle von Dateien und Verzeichnissen und deren Einrichtung.
</para>

<para>
Das Problem rührt aus den Unterschieden bei den Datei- und Verzeichnis-Benutzerrechten der beiden Systeme her. Diesen
Unterschied kann auch Samba nicht wirklich aus der Welt schaffen, aber es schafft eine Brücke
zwischen den Umgebungen.
</para>

<para>
<indexterm><primary>Erweiterte Attribute</primary></indexterm>
<indexterm><primary>ACLs</primary><secondary>POSIX</secondary></indexterm>
Die POSIX-(UNIX, LINUX-)Zugriffskontroll-Technologie (ACLs) gibt es schon seit Jahren, aber sie wurde nie sehr intensiv genutzt.
Dies erklärt vielleicht auch, warum es so lange gedauert hat, bis die die ACL-Technik in kommerzielle Linux-Produkte eingebunden wurde.
MS-Administratoren wird dies erstaunen, da diese Technik seit Jahren elementarer Bestandteil von Windows-Produkten ist.
</para>

<para>
Dieses Kapitel soll die Punkte im Einzelnen klären, die mit Samba-3 nötig und möglich sind,
damit Administratoren eine optimale 
Zugriffsverwaltung für ihre Windows-Benutzer einrichten können.
</para>

<para>
Samba ist nicht primär dafür gedacht, eine Unix-Plattform in eine Windows-Plattform zu verwandeln,
sondern soll die bestmögliche Kompatibilität zwischen den beiden Systemen schaffen.
</para>

<sect1>
<title>Möglichkeiten und Vorteile</title>

	<para>
	Samba ermöglicht eine hohe Flexibilität beim Systemzugriff. Hier sind es die
	Zugriffskontrollmöglichkeiten der aktuellen Version 3 von Samba.
	</para>

	<itemizedlist>
	<title>Samba-Zugriffskontrollmöglichkeiten</title>
		<listitem><para>
				<indexterm><primary>Berechtigungen</primary><secondary>UNIX-Datei und Verzeichnis</secondary></indexterm>
		<emphasis>Unix-Datei- und -Verzeichnis-Berechtigungen</emphasis>
		</para>

			<para>
			Samba arbeitet mit den UNIX-Dateizugriffskontrollen zusammen. Benutzer greifen dabei als Windows-Benutzer
			auf Samba zu. Informationen über den Benutzer werden beim Einloggen übergeben. Samba benutzt
			diese Login-Informationen, um zu entscheiden, ob einem Benutzer Zugriff auf Systemdaten gewährt werden soll oder nicht. Dieses
			Kapitel enthält eine Übersicht über UNIX-Berechtigungen für Nutzer, die diese nicht kennen oder diese für etwas verwirrend halten.
			</para>
		</listitem>

		<listitem><para>
		<emphasis>Samba-Netzlaufwerksdefinitionen</emphasis>
		</para>

			<para>
			Beim Konfigurieren von Netzlaufwerken mit Samba in der Datei smb.conf kann der Administrator
			Berechtigungen des darunter liegenden Dateisystems verändern und beeinflussen. Dies ermöglicht teilweise eine Annäherung
			an das Verhalten, das Windows-Benutzer erwarten. Dieser Weg ist aber nur selten die beste Lösung.
			Die grundlegenden Möglichkeiten werden hier beschrieben.
			</para>
		</listitem>

		<listitem><para>
		<emphasis>Samba-Netzlaufwerkskontroll-Listen</emphasis>
		<indexterm><primary>ACLs</primary><secondary>share</secondary></indexterm>
		</para>

			<para>
			Wie in Windows NT ist es auch in Samba möglich, Netzlaufwerkskontroll-Listen
			zu erstellen. Einige Anwender machen Gebrauch davon. Es ist zurzeit
			eine der leichtesten Möglichkeiten, Zugriffskontrolle zu erreichen, im
			Gegensatz zu anderen komplexeren Methoden.
			</para>
		</listitem>

		<listitem><para>
				<indexterm><primary>ACLs</primary><secondary>POSIX</secondary></indexterm>
				<indexterm><primary>ACLs</primary><secondary>Windows</secondary></indexterm>
		<emphasis>MS Windows-Zugriffskontroll-Listen und UNIX-Zugriffskontroll-Listen</emphasis>
		</para>

			<para>
			Der Gebrauch von UNIX-Kontroll-Listen ist nur möglich, wenn diese Funktionen
			in dem darunter liegenden Dateisystem implementiert sind.
			In jedem anderen Fall ist deren Nutzung nicht möglich.
			Aktuelle Unix-Systeme sollten diese Unterstützung bieten.
			Es gibt Patches für den Linux-Kernel, die diese Möglichkeit implementieren,
			falls sie noch nicht vorhanden ist.
			Viele Unix-Systeme werden mit der Unterstützung ausgeliefert, und in diesem
			Kapitel versuchen wir, den Benutzern deren Gebrauch zu erklären.
			</para>
		</listitem>
	</itemizedlist>

</sect1>

<sect1>
<title>Die Zugriffskontrollen des Dateisystems</title>

<para>
Es ist wichtig festzustellen, dass MS Windows ein völlig anderes Dateizugriffssystem benutzt als
UNIX-Systeme. Wir werden erst die Unterschiede erklären und dann zeigen, wie Samba hilft, diese Unterschiede zu überbrücken.
</para>

	<sect2>
	<title>Vergleich zwischen NTFS und dem UNIX-Dateisystem</title>

	<para>
<indexterm><primary>NTFS</primary></indexterm>
<indexterm><primary>Dateisystem</primary></indexterm>
<indexterm><primary>Dateisystem</primary><secondary>UNIX</secondary></indexterm>
<indexterm><primary>Dateisystem</primary><secondary>Windows</secondary></indexterm>
	Samba benutzt das UNIX-Dateisystem, d.h., Samba verhält sich innerhalb der Möglichkeiten des UNIX-Dateisystems.
	Aber Samba ist auch dafür verantwortlich, das Verhalten des Windows-Dateisystems nachzustellen.
	</para>

	<para>
	Glücklicherweise bietet Samba eine Reihe von Konfigurationsmöglichkeiten, um die Unterschiede zu
	überbrücken. Wir werden einige dieser Einstellungsmöglichkeiten betrachten, jedoch nicht alle.
	Wer mehr wissen möchte, sollte die Manpage der Datei smb.conf lesen.
	</para>

	<para>Im Folgenden sehen Sie einen Vergleich des UNIX-Dateisystems mit dem Dateisystem von Windows NT/200x:
	<indexterm><primary>Dateisystem</primary><secondary>Eigenschaftsvergleich</secondary></indexterm>

	</para>

	<variablelist>
		<varlistentry>
			<term>Namensraum</term>
			<listitem>
		<para>
		Windows-Dateinamen können 254 Zeichen lang sein, UNIX beherrscht bis zu 1023 Zeichen. Die
		Dateierweiterung beschreibt in Windows einen bestimmten Dateityp, in UNIX-Systemen ist das nicht zwingend so.
		</para>
		<para>
		Was unter Windows ein 'Ordner' ist, heißt in UNIX 'Verzeichnis'.
		</para>
			</listitem>
		</varlistentry>

		<varlistentry>
			<term>Groß-/Kleinschreibung</term>
			<listitem>
		<para>
		<indexterm><primary>8.3 Dateinamen</primary></indexterm>
		<indexterm><primary>Dateisystem</primary><secondary>Schreibweise sensitiv</secondary></indexterm>
		Im Allgemeinen sind Dateinamen unter Windows 8+3 Zeichen lang und werden in Großbuchstaben erstellt.
		Dateinamen, die länger sind, sind in ihrer Schreibweise case-insensitive
		(d.h., es spielt keine Rolle, ob sie groß- oder kleingeschrieben werden).
		</para>

		<para>
		Unter UNIX sind alle Dateien und Verzeichnisse case-sensitive
		(d.h., es spielt sehr wohl eine Rolle, ob ein Dateiname groß- oder kleingeschrieben wird).
		</para>
		<para>
		Im folgenden Beispiel würden die Dateinamen von Windows völlig gleich interpretiert
		werden, für UNIX wären es drei verschiedene Dateien:
		<screen>
				MYFILE.TXT
				MyFile.txt
				myfile.txt
		</screen></para>

		<para>
		Es wird ziemlich klar, dass diese Dateien in Windows nicht nebeneinander
		(im selben Ordner) stehen könnten, unter ist das UNIX jedoch jederzeit möglich.
		</para>
		<para>
		Was soll nun Samba tun, wenn es auf diese Dateien trifft? Die Lösung besteht darin,
		dass die erste Datei für Windows-Benutzer sichtbar ist, die anderen jedoch
		nicht verfügbar bzw. unsichtbar sind; eine andere Lösung ist nicht denkbar.
		</para>
			</listitem>
		</varlistentry>

		<varlistentry>
			<term>Verzeichnis-Trennzeichen</term>
			<listitem>

		<para>
				<indexterm><primary>Verzeichnis-Trennzeichen</primary></indexterm>
		MS Windows und DOS benutzen das Zeichen <constant>\</constant> (Backslash) als Verzeichnis-Trennzeichen, UNIX benutzt (wie im Internet üblich) den Slash
		<constant>/</constant> als Verzeichnis-Trennzeichen. 		
		Dies wird von Samba transparent (für den Windows-Benutzer unbemerkt) umgesetzt.
		</para>
			</listitem>
		</varlistentry>

		<varlistentry>
			<term>Laufwerksbezeichnung</term>
			<listitem>
		<para>
			<indexterm><primary>Laufwerksbezeichnung</primary></indexterm>
		In MS Windows werden verschiedene Festplatten-Partitionen mit Buchstaben belegt.
		<command>C:</command>
		Es gibt unter UNIX kein ähnliches Konzept, Festplatten-Teile (Partitionen) werden
		als Teil des Dateisystems eingebunden (gemountet).
		Was unter DOS <constant>C:\</constant> ist, wäre unter UNIX einfach
		<constant>/</constant> (root = Wurzel des Dateisystembaums).
		</para>
			</listitem>
		</varlistentry>

		<varlistentry>
			<term>Dateinamenskonvention</term>
			<listitem>
		<para>
			<indexterm><primary>Dateinamenskonvention</primary></indexterm>
		MS Windows kennt keine Dateien, deren Namen mit einem Punkt beginnen
		(<constant>.</constant>).
		In UNIX werden solche Dateien häufig in den <quote>Home</quote>-Verzeichnissen
		(Heimatverzeichnissen) von Benutzern gefunden.
		Punktdateien(<constant>.</constant>) sind typischerweise
		Start- oder Konfigurationsdateien für UNIX-Programme.
		</para>
			</listitem>
		</varlistentry>

		<varlistentry>
			<term>Verknüpfungen und Verkürzungen</term>
			<listitem>
		<para>
		<indexterm><primary>Links</primary><secondary>hard</secondary></indexterm>
		<indexterm><primary>Links</primary><secondary>soft</secondary></indexterm>
		<indexterm><primary>Short-Cuts</primary></indexterm>
		Unter Windows sind Verknüpfungen spezielle Dateitypen, die zum verkürzten
		Starten von Programmen in deren
		realen Ordner dienen. Auch unter UNIX gibt es Verknüpfungen und Verkürzungen,
		diese werden jedoch völlig unterschiedlich gehandhabt.
		</para>
		<para>
		Symbolische Verknüpfungen unter UNIX halten die aktuellen Informationen von Dateien oder Verzeichnissen.
		Schreib- und Lesezugriffe auf eine Verknüpfung verhalten sich genauso wie bei der originalen Datei.
		Symbolische Verknüpfungen nennt man auch weiche Verknüpfungen.
		Harte Verknüpfungen kennt MS Windows nicht,
		diese würden das Benutzen ein- und derselben Datei unter mehreren Namen gleichzeitig ermöglichen.
		</para>
			</listitem>
		</varlistentry>
	</variablelist>

	<para>
	Es gibt noch viele Unterschiede, die einem Windows-Administrator unangenehm im Umgang
	mit UNIX sein könnten.
	</para>

	</sect2>

	<sect2>
	<title>Verwaltung von Verzeichnissen</title>

	<para>
	Es gibt grundsätzlich drei Möglichkeiten, um Ordner (Verzeichnisse) zu verwalten:
	<command>create (erstellen)</command>, <command>delete (löschen)</command> und <command>rename (umbenennen )</command>.
	<table frame="all">
		<title>Verwaltung von Ordnern (Verzeichnissen) mit UNIX und Windows</title>
		<tgroup align="center" cols="3">
		<thead>
		<row><entry>Aktion</entry><entry>Windows-Befehl</entry><entry>UNIX-Befehl</entry></row>
		</thead>
		<tbody>
			<row><entry>create</entry><entry>md folder</entry><entry>mkdir folder</entry></row>
			<row><entry>delete</entry><entry>rd folder</entry><entry>rmdir folder</entry></row>
			<row><entry>rename</entry><entry>rename oldname newname</entry><entry>mv oldname newname</entry></row>
		</tbody>
	</tgroup>
	</table>
	</para>

	</sect2>

	<sect2>
	<title>Die Verwaltung der Zugriffskontrollen von Dateien und Ordnern (Verzeichnissen)</title>

	<para>
	<indexterm><primary>ACLs</primary><secondary>Dateisystem</secondary></indexterm>
	Jedem Administrator wird geraten, zusätzlich Handbücher zu diesem Thema zu studieren.
	Die meisten Fälle können mit den grundlegenden Zugriffsmöglichkeiten von UNIX gelöst werden,
	ohne die Technologien der Zugriffskontroll-Listen (ACLs) oder der erweiterten Attribute (EAs)
	zu verwenden.
	</para>

	<para>
	Die Datei- und Verzeichnisverwaltung von UNIX basiert auf den folgenden Zugriffsmöglichkeiten:
	<screen>
&prompt;<userinput>ls -la</userinput>
total 632
drwxr-xr-x   13 maryo   gnomes      816 2003-05-12 22:56 .
drwxrwxr-x   37 maryo   gnomes     3800 2003-05-12 22:29 ..
dr-xr-xr-x    2 maryo   gnomes       48 2003-05-12 22:29 muchado02
drwxrwxrwx    2 maryo   gnomes       48 2003-05-12 22:29 muchado03
drw-rw-rw-    2 maryo   gnomes       48 2003-05-12 22:29 muchado04
d-w--w--w-    2 maryo   gnomes       48 2003-05-12 22:29 muchado05
dr--r--r--    2 maryo   gnomes       48 2003-05-12 22:29 muchado06
drwsrwsrwx    2 maryo   gnomes       48 2003-05-12 22:29 muchado08
----------    1 maryo   gnomes     1242 2003-05-12 22:31 mydata00.lst
--w--w--w-    1 maryo   gnomes     7754 2003-05-12 22:33 mydata02.lst
-r--r--r--    1 maryo   gnomes    21017 2003-05-12 22:32 mydata04.lst
-rw-rw-rw-    1 maryo   gnomes    41105 2003-05-12 22:32 mydata06.lst
&prompt;
</screen>
	</para>

	<para>
	Die Reihen oben repräsentieren (von rechts nach links): die Berechtigung, die Anzahl der
	<quote>harten</quote> Links einer Datei, den Besitzer (einer Datei), die Besitzergruppe und die Größe in Bytes.
	</para>

	<para>
	In <link linkend="access1"/> finden Sie eine Übersicht.
	</para>

	<image id="access1"
scale="40"><imagedescription>Übersicht über die UNIX-Berechtigungen</imagedescription><imagefile>access1</imagefile></image>

	<para>
	Jedes Bit kann auch unbesetzt sein und wird durch ein Minus (-) dargestellt.

	<example>
		<title>Beispieldatei</title>
		<programlisting>
		-rwxr-x---   Bedeutet: Der Besitzer kann lesen, schreiben und ausführen.
		                       Die Gruppe kann lesen und ausführen.
		                       Andere haben keine Rechte.
		</programlisting>
	</example>

	</para>

	<para>
	Zusätzliche Möglichkeiten im Typen-Feld [type] sind: c = character device, b = block device, p = pipe device, s = UNIX-Domain-Socket.
	</para>

	<para>
	Die Zeichen <constant>rwxXst</constant> für die Berechtigungen für Nutzer, Gruppen und
	andere sind:
	lesen (r), schreiben (w), ausführen (oder Ordner-Zugriff) (x),
	exklusives Ausführen, wenn der Nutzer berechtigt für die Datei oder den Ordner ist (X),
	Setzen der ID des Nutzers bei Ausführung (s), Sticky-Bit (begleitendes Bit)(t).
	</para>

	<para>
	Wenn das Sticky-Bit auf einem Verzeichnis gesetzt ist, können darin enthaltene Dateien
	nur vom Nutzer root oder dem Ersteller der Dateien gelöscht werden. In jedem anderem Fall sind
	alle anderen Dateivorgänge (löschen, lesen, umbenennen) erlaubt.
	Das Sticky-Bit wird häufig für Verzeichnisse wie das /tmp-Verzeichnis benutzt, die
	gewöhnlich für jeden beschreibbar sind.
	 </para>

	<para>
	Wenn auf einem Verzeichnis das Gruppen- oder Nutzer-Identitätsbit gesetzt ist, dann
	erhalten Nutzer und Gruppen Berechtigungen auf darin
	enthaltene Dateien. Dies ermöglicht das Erstellen von Verzeichnissen, in denen alle
	Nutzer einer Gruppe auf eine Datei zugreifen können sollen, insbesondere dann, wenn 
	es nicht erwünscht ist, dass diese Datei exklusiv einem Benutzer gehört, der zu einer anderen primären Gruppe gehört als die übrigen Nutzer.
	</para>

	<para>
	Falls ein Verzeichnis auf <constant>drw-r-----</constant> gesetzt ist, heißt dies, dass
	der Eigner in ihm Dateien lesen und schreiben (erstellen) kann, aber dadurch, dass das Ausführen-Flag (x)
	nicht gesetzt ist, können die Dateien in diesem Verzeichnis von niemandem gesehen werden.
	Die Gruppe kann Dateien lesen, aber keine neuen anlegen. Falls Dateien in dem Verzeichnis
	für die Gruppe les- oder schreibbar gesetzt sind, können die Gruppenmitglieder diese
	schreiben oder löschen.
	</para>

	</sect2>

</sect1>

<sect1>
<title>Zugriffskontrollen für Freigabedefinitionen</title>


<para>
<indexterm><primary>Berechtigungen</primary><secondary>Freigabe</secondary></indexterm>
Die folgenden Parameter in den Dateisektionen von &smb.conf; definieren eine Freigabekontrolle oder betreffen
Zugriffskontrollen. Bevor Sie eine dieser folgenden Optionen benutzen, sehen Sie bitte in den Manpages für &smb.conf; nach.
</para>

	<sect2>
	<title>Benutzer- und gruppen-basierende Kontrollen</title>

	<para>
	Benutzer- und gruppen-basierende Kontrollen können sehr hilfreich sein.
	In manchen Situationen ist es sogar gewünscht,
	dass alle Dateisystem-Operationen behandelt werden, als wären sie von einem einzelnen
	Benutzer durchgeführt worden.
	Die Benutzung von <smbconfoption><name>force user</name></smbconfoption> und
	<smbconfoption><name>force group</name></smbconfoption>
	wird dies erreichen. In anderen Situationen ist es vielleicht notwendig, ein
	paranoides Maß an Kontrollen einzusetzen,
	um sicherzustellen, dass es nur bestimmten ausgewählten und autorisierten Personen möglich ist,
	auf eine Freigabe oder dessen Inhalt zuzugreifen. Hier kann die Benutzung von <smbconfoption><name>valid users</name></smbconfoption> oder
	<smbconfoption><name>invalid users</name></smbconfoption> am hilfreichsten sein.
	</para>

	<para>
	Wie immer ist es höchst ratsam, die einfachste Methode für die Verwaltung und die
	eindeutigste Methode für die Zugriffskontrolle zu verwenden. Denken Sie daran,
	dass nach dem Verlassen Ihrer Arbeit jemand anderes Unterstützung
	geben können muss, und wenn er eine große Baustelle vorfindet oder Ihre Vorgehensweise nicht
	versteht, kann es durchaus möglich sein, dass Samba gelöscht wird oder eine
	alternative Lösung eingesetzt wird.
	</para>

	<para>
	<link linkend="ugbc"/> zählt diese Kontrollen auf.
	</para>

	<table frame='all' pgwide='0' id="ugbc"><title>Benutzer- und gruppen-basierende Kontrollen</title>
	<tgroup cols='2'>
		<colspec align="left"/>
		<colspec align="justify" colwidth="1*"/>
		<thead>
		<row>
			<entry align="center">Kontrollparameter</entry>
			<entry align="center">Beschreibung - Ausführung - Hinweise</entry>
		</row>
		</thead>
		<tbody>
		<row>
			<entry><smbconfoption><name>admin users</name></smbconfoption></entry>
			<entry><para>
			Liste der Benutzer, denen Administrationsprivilegien auf der Freigabe
			erteilt werden.
			Sie werden alle Dateioperationen als Super-User (root) ausführen.
			Jeder Benutzer in dieser Liste wird in der Lage sein, alles auf der
			Freigabe zu machen,
			egal welche Dateiberechtigungen gesetzt wurden.
			</para></entry>
		</row>
		<row>
			<entry><smbconfoption><name>force group</name></smbconfoption></entry>
			<entry><para>
			Spezifiziert einen UNIX-Gruppennamen, der als primäre Standardgruppe
			allen Benutzern zugewiesen wird, die sich mit diesem Dienst verbinden.
			</para></entry>
		</row>
		<row>
			<entry><smbconfoption><name>force user</name></smbconfoption></entry>
			<entry><para>
			Spezifiziert einen UNIX-Benutzernamen, der als Standardbenutzer
			allen Benutzern zugewiesen wird,
			die sich mit diesem Dienst verbinden.
			Dies ist für das gemeinsame Nutzen von Dateien hilfreich.
			Die falsche Benutzung kann Sicherheitsprobleme verursachen.
			</para></entry>
		</row>
		<row>
			<entry><smbconfoption><name>guest ok</name></smbconfoption></entry>
			<entry><para>
			Falls dieser Parameter für einen Dienst gesetzt ist, wird kein Passwort
			verlangt, um sich mit diesem Dienst zu verbinden.
			Die Privilegien sind diejenigen des Gastzugangs.
			</para></entry>
		</row>
		<row>
			<entry><smbconfoption><name>invalid users</name></smbconfoption></entry>
			<entry><para>
			Liste der Benutzer, denen ein Anmelden an diesem Dienst nicht erlaubt wird.
			</para></entry>
		</row>
		<row>
			<entry><smbconfoption><name>only user</name></smbconfoption></entry>
			<entry><para>
			Kontrolliert, ob Verbindungen mit Benutzernamen,
			die nicht in der Liste enthalten sind, erlaubt werden.
			</para></entry>
		</row>
		<row>
			<entry><smbconfoption><name>read list</name></smbconfoption></entry>
			<entry><para>
			Liste der Benutzer, die einen Nur-Lesezugriff auf diesen Dienst haben.
			Benutzer in dieser Liste bekommen keinen Schreibzugriff, egal wie die
			Option 'read only' gesetzt wurde.
			</para></entry>
		</row>
		<row>
			<entry><smbconfoption><name>username</name></smbconfoption></entry>
			<entry><para>
			Sehen Sie in der &smb.conf;-Manpage für mehr Informationen
			nach -- dies ist ein komplexer Parameter, der häufig falsch angewendet wird.
			</para></entry>
		</row>
		<row>
			<entry><smbconfoption><name>valid users</name></smbconfoption></entry>
			<entry><para>
			Lister der Benutzer, denen das Anmelden an diesem Dienst erlaubt wird.
			</para></entry>
		</row>
		<row>
			<entry><smbconfoption><name>write list</name></smbconfoption></entry>
			<entry><para>
			Liste der Benutzer, denen Lese-Schreibzugriff auf diesen Dienst erlaubt wird.
			</para></entry>
		</row>
		</tbody>
	</tgroup>
	</table>

	</sect2>

	<sect2>
	<title>Kontrollen, die auf Datei- und Verzeichnis-Berechtigungen basieren</title>

	<para>
	Die folgenden auf Datei- und Verzeichnis-Berechtigungen basierenden Kontrollen können,
	wenn sie falsch angewendet werden, durch Fehlkonfigurationen
	zu erheblichen Schwierigkeiten bei der Fehlersuche führen.
	Benutzen Sie diese sparsam und sorgfältig. Durch die schrittweise Einführung einer Berechtigung nach der
	anderen können unerwünschte
	Nebeneffekte entdeckt werden. Im Fehlerfall kommentieren Sie alle aus und führen sie dann Schritt für Schritt in einer kontrollierten Art und Weise wieder ein.
	</para>

	<para>
	In <link linkend="fdpbc"/> finden Sie Informationen, die diese Parameter betreffen.
	</para>

	<table frame='all' id="fdpbc"><title>Auf Datei- und Verzeichnis-Berechtigungen basierende Kontrollen</title>
		<tgroup cols='2'>
			<colspec align="left"/>
			<colspec align="justify" colwidth="1*"/>
		<thead>
		<row>
			<entry align="center">Kontrollparameter</entry>
			<entry align="center">Beschreibung - Ausführung - Hinweise</entry>
		</row>
		</thead>
		<tbody>
		<row>
			<entry><smbconfoption><name>create mask</name></smbconfoption></entry>
			<entry><para>
			Sehen Sie in der &smb.conf;-Manpage nach.
			</para></entry>
		</row>
		<row>
			<entry><smbconfoption><name>directory mask</name></smbconfoption></entry>
			<entry><para>
			Die Oktal-Modi, die beim Konvertieren von DOS-Modi in UNIX-Modi
			während des Erzeugens von
			UNIX-Verzeichnissen benutzt werden.
			Siehe auch: directory security mask.
			</para></entry></row>
		<row>
			<entry><smbconfoption><name>dos filemode</name></smbconfoption></entry>
			<entry><para>
			Durch Einschalten dieses Parameters erlaubt man einem Benutzer,
			der Schreibzugriff auf eine Datei hat, die Berechtigungen auf diese zu ändern.
			</para></entry>
		</row>
		<row>
			<entry><smbconfoption><name>force create mode</name></smbconfoption></entry>
			<entry><para>
			Dieser Parameter spezifiziert eine Anzahl von UNIX-Mode-Bit-Berechtigungen,
			die immer auf eine Datei gesetzt werden, die durch Samba erzeugt wurde.
			</para></entry>
		</row>
		<row>
			<entry><smbconfoption><name>force directory mode</name></smbconfoption></entry>
			<entry><para>
			Dieser Parameter spezifiziert eine Anzahl von UNIX-Mode-Bit-Berechtigungen,
			die immer auf ein Verzeichnis gesetzt werden, das durch Samba erzeugt wurde.
			</para></entry>
		</row>
		<row>
			<entry><smbconfoption><name>force directory security mode</name></smbconfoption></entry>
			<entry><para>
			Kontrolliert Änderungen an UNIX-Berechtigungsbits, wenn ein Windows NT-Client
			UNIX-Berechtigungen eines Verzeichnisses manipuliert.
			</para></entry>
		</row>
		<row>
			<entry><smbconfoption><name>force security mode</name></smbconfoption></entry>
			<entry><para>
			Kontrolliert Änderungen an UNIX-Berechtigungsbits, wenn ein Windows NT-Client
			UNIX-Berechtigungen manipuliert.
			</para></entry>
		</row>
		<row>
			<entry><smbconfoption><name>hide unreadable</name></smbconfoption></entry>
			<entry><para>
			Verhindert, dass Clients die Existenz von Dateien sehen, die nicht lesbar sind.
			</para></entry>
		</row>
		<row>
			<entry><smbconfoption><name>hide unwriteable files</name></smbconfoption></entry>
			<entry><para>
			Verhindert, dass Clients die Existenz von Dateien sehen, die nicht schreibbar
			sind. Nicht beschreibbare Verzeichnisse werden wie gewöhnlich angezeigt.
			</para></entry>
		</row>
		<row>
			<entry><smbconfoption><name>nt acl support</name></smbconfoption></entry>
			<entry><para>
			Dieser Parameter kontrolliert, ob smbd versuchen wird, UNIX-Berechtigungen
			auf Windows NT-Zugriffsberechtigungslisten zu mappen.
			</para></entry>
		</row>
		<row>
			<entry><smbconfoption><name>security mask</name></smbconfoption></entry>
			<entry><para>
			Kontrolliert Änderungen an UNIX-Berechtigungsbits, wenn ein Windows NT-Client
			UNIX-Berechtigungen einer Datei manipuliert.
			</para></entry>
		</row>
		</tbody>
	</tgroup>
	</table>

	</sect2>

	<sect2>
	<title>Allgemeine Kontrollen</title>

	<para>
	Das Folgende ist dokumentiert, da es weit verbreitet ist, dass Administratoren unabsichtlich
	Barrieren beim Einrichten von Dateizugriffen dadurch aufbauen, dass sie die genauen
	Auswirkungen von Dateieinstellungen in &smb.conf; nicht verstehen (siehe <link linkend="mcoc"/>).
	</para>

	<table frame='all' id="mcoc"><title>Andere Kontrollen</title>
	<tgroup cols='2'>
		<colspec align="justify" colwidth="1*"/>
		<colspec align="justify" colwidth="1*"/>
		<thead>
		<row>
			<entry align="center">Kontrollparameter</entry>
			<entry align="center">Beschreibung - Ausführung - Hinweise</entry>
		</row>
		</thead>
		<tbody>
		<row>
			<entry><smbconfoption><name>case sensitive</name></smbconfoption>, <smbconfoption><name>default case</name></smbconfoption>, <smbconfoption><name>short preserve case</name></smbconfoption></entry>
			<entry><para>
			Dies bedeutet, dass alle Dateinamensanzeigen in case-sensitiver Art
			erfolgen. Die Dateien werden genau so mit dem exakten Namen angelegt,
			wie Samba den Dateinamen vom Windows-Client erhält.
			</para></entry>
		</row>
		<row>
			<entry><smbconfoption><name>csc policy</name></smbconfoption></entry>
			<entry><para>
			Client-seitige Caching-Richtlinie - ermöglicht parallele MS Windows
			client-seitige Datei-Caching-Fähigkeiten.
			</para></entry>
		</row>
		<row>
			<entry><smbconfoption><name>dont descend</name></smbconfoption></entry>
			<entry><para>
			Erlaubt das Spezifizieren einer kommata-getrennten Verzeichnisliste,
			die der Server immer leer anzeigt.
			</para></entry>
		</row>
		<row>
			<entry><smbconfoption><name>dos filetime resolution</name></smbconfoption></entry>
			<entry><para>
			Diese Option ist hauptsächlich als Kompatibilitätsoption für Visual C++ gedacht,
			wenn dieses auf einer Samba-Freigabe genutzt wird.
			</para></entry>
		</row>
		<row>
			<entry><smbconfoption><name>dos filetimes</name></smbconfoption></entry>
			<entry><para>
			DOS und Windows erlauben Benutzern, Zeitstempel auf Dateien zu ändern,
			wenn diese auf die Datei schreiben können.
			POSIX-Semantiken verhindern dies. Diese Option erlaubt DOS- und Windows-Verhalten.
			</para></entry>
		</row>
		<row>
			<entry><smbconfoption><name>fake oplocks</name></smbconfoption></entry>
			<entry><para>
			Oplocks sind das Verfahren, wie SMB-Clients die Erlaubnis eines Servers
			bekommen, Dateioperationen lokal zu cachen (zwischenzuspeichern).
			Falls ein Server
			Oplocks erlaubt, ist es dem Client freigestellt anzunehmen,
			dass er der einzige ist, der auf die Datei zugreift, und er kann das Datei-Caching
			aggressiv nutzen.
			</para></entry>
		</row>
		<row>
			<entry><smbconfoption><name>hide dot files</name></smbconfoption>, <smbconfoption><name>hide files</name></smbconfoption>, <smbconfoption><name>veto files</name></smbconfoption></entry>
			<entry><para>
			Hinweis: MS Windows Explorer erlaubt das Überschreiben von Dateien,
			die als versteckt markiert sind, so dass sie weiter sichtbar sind.
			</para></entry>
		</row>
		<row>
			<entry><smbconfoption><name>read only</name></smbconfoption></entry>
			<entry><para>
			Falls dieser Parameter 'yes' ist, können Benutzer eines Dienstes 
			Dateien im Diensteverzeichnis weder erzeugen noch ändern.
			</para></entry>
		</row>
		<row>
			<entry><smbconfoption><name>veto files</name></smbconfoption></entry>
			<entry><para>
			Liste von Dateien oder Verzeichnissen, die nicht sichtbar sind und auf die man auch nicht zugreifen kann.
			</para></entry>
		</row>
		</tbody>
	</tgroup>
	</table>

	</sect2>

</sect1>

<sect1>
<title>Zugriffskontrollen auf Freigaben</title>


	<para>
<indexterm><primary>Berechtigungen</primary><secondary>Freigabe ACLs</secondary></indexterm>
	Dieses Kapitel handelt davon, wie Samba für Zugriffskontroll-Einschränkungen bei
	Freigaben konfiguriert werden kann. Standardmäßig setzt Samba keine Einschränkungen auf
	die Freigabe selbst. Einschränkungen auf der Freigabe selbst
	können auf MS Windows NT4/200x/XP-Freigaben gesetzt werden. Dies kann ein effektives Verfahren sein,
 	um zu regeln, wer sich mit einer Freigabe verbinden darf. In Ermangelung spezifischer
	Einschränkungen sieht die Standardeinstellung vor, dem globalen Benutzer
	<constant>Jeder - Volle Kontrolle</constant> (volle Kontrolle, Ändern und Lesen) zu erlauben.
	</para>

	<para>
	Zurzeit stellt Samba kein Werkzeug zum Konfigurieren von Zugriffskontroll-Einstellungen
	auf einer Freigabe selbst zur Verfügung. Samba hat die Fähigkeit, Zugriffskontroll-Einstellungen
	zu speichern und damit zu arbeiten,
	aber der einzige Weg, diese Einstellungen zu erzeugen, ist der NT4 Server Manager oder die
	Windows 200x MMC für Computer-Verwaltung.
	</para>

	<para>
	Samba speichert die Zugriffskontroll-Einstellungen pro Freigabe in einer Datei
	namens <filename>share_info.tdb</filename>.
	Der Ablageort dieser Datei auf Ihrem System hängt davon ab, wie Sie Samba kompiliert haben.
	Der Standard-Ablageort für Sambas tdb-Dateien ist <filename>/usr/local/samba/var</filename>.
	Falls das <filename>tdbdump</filename>-Werkzeug auf Ihrem System kompiliert und installiert worden ist, können Sie den Inhalt dieser
	Datei wie folgt ausführen:
	<command>tdbdump share_info.tdb</command>, in dem Verzeichnis, das die tdb-Dateien enthält.
	</para>

	<sect2>
	<title>Verwaltung von Freigabeberechtigungen</title>

		<para>
		Das beste Werkzeug für eine Aufgabe ist plattformabhängig.
		Wählen Sie das beste Werkzeug für Ihre Umgebung.
		</para>

			<sect3>
			<title>Windows NT4 Workstation/Server</title>
			<para>
			Das Werkzeug, das Sie zum Verwalten von Freigabeberechtigungen auf
			einem Samba-Server nutzen müssen,
			ist der NT Server Manager. Der Server Manager wird mit den Windows NT4 			Server-Produkten, aber nicht mit Windows NT4 Workstation ausgeliefert.
			Sie können den NT Server Manager für MS Windows NT4 Workstation von
			Microsoft erhalten (Details weiter unten).
			</para>

			<?latex \newpage ?>

			<procedure>
			<title>Anweisungen</title>
			<step><para>
			Starten Sie den <application>NT4 Server Manager</application>, und klicken Sie
			auf den Samba-Server, den Sie administrieren möchten.
			In dem Menü wählen Sie <guimenu>Computer</guimenu>, dann klicken Sie
			auf <guimenuitem>Freigegebene Verzeichnisse</guimenuitem>.
			</para></step>

			<step><para>
			Klicken Sie auf die Freigabe, die Sie verwalten möchten, dann gehen Sie auf
			<guilabel>Eigenschaften</guilabel>
			und klicken auf die Registerkarte <guilabel>Berechtigungen</guilabel>.
			Jetzt können Sie Zugriffskontroll-Einstellungen nach Belieben
			hinzufügen und ändern.
			</para></step>
			</procedure>

			</sect3>

			<sect3>
			<title>Windows 200x/XP</title>

			<para>
			Auf <application>MS Windows NT4/200x/XP</application> werden
			Systemzugriffskontroll-Listen für Freigaben mit eigenen Werkzeugen gesetzt, meist durch den Dateimananger. In Windows 200x
			beispielsweise rechtsklicken Sie auf den Freigabeordner,
			wählen <guimenuitem>Freigabe</guimenuitem> und klicken dann auf
			<guilabel>Berechtigungen</guilabel>. Die Standardberechtigung
			unter Windows NT4/200x erlaubt <quote>jedem</quote> volle Kontrolle über
			die Freigabe.
			</para>

			<para>
			MS Windows 200x und spätere Versionen enthalten ein Werkzeug namens
			<application>Computerverwaltungs</application>-Snap-In für die
			Microsoft Management Konsole (MMC). Dieses Werkzeug befindet sich in der
			<guimenu>Systemsteuerung -> Verwaltung -> Computerverwaltung</guimenu>.
			</para>

			<procedure>
			<title>Anweisungen</title>
			<step><para>
			Nachdem Sie die MMC über das Computerverwaltungs-Snap-In gestartet haben,
			klicken Sie auf den Menüeintrag <guimenuitem>Action</guimenuitem>
			und wählen dann <guilabel>Mit einem anderen Computer verbinden</guilabel>.
			Falls Sie nicht an einer Domäne angemeldet sind,
			werden Sie aufgefordert, einen Domänenbenutzer und ein Passwort einzugeben.
			Dies wird Sie gegenüber der Domäne authentifizieren.
			Falls Sie bereits als ein Benutzer mit Administrationsrechten angemeldet sind,
			wird dieser Schritt nicht angeboten.
			</para></step>

			<step><para>
			Falls der Samba-Server nicht in der Box <guilabel>Computer auswählen</guilabel>
			angezeigt wird, geben Sie den Namen des Samba-Zielservers
			im Feld <guilabel>Name:</guilabel> ein. Klicken Sie jetzt auf den
			Button <guibutton>[+]</guibutton> neben
			<guilabel>Systemwerkzeuge</guilabel>, dann auf den Button
			<guibutton>[+]</guibutton> neben
			<guilabel>Freigabeordner</guilabel> im linken Bereich.
			</para></step>

			<step><para>
			Im rechten Bereich doppelklicken Sie auf die Freigabe, auf die Sie
			Zugriffskontroll-Berechtigungen vergeben möchten.
			Dann klicken Sie auf die Registerkarte
			<guilabel>Freigabe-Berechtigungen</guilabel>. Jetzt ist es möglich,
			Zugriffskontroll-Einheiten zu dem Freigabe-Ordner hinzuzufügen. Merken Sie sich,
			welchen Zugriffstyp (volle Kontrolle, ändern, lesen) Sie für jeden
			Eintrag vergeben möchten.
			</para></step>
			</procedure>

			<warning>
			<para>
			Seien Sie vorsichtig. Falls Sie alle Berechtigungen von dem
			<constant>Jeder</constant> Benutzer wegnehmen, ohne diesen Benutzer entfernt zu haben, wird anschließend kein Benutzer mehr in der Lage sein,
			auf die Freigabe zuzugreifen. Dies ist ein Ergebnis dessen,
			was als ACL-Präzedenz bekannt ist. <constant>Jeder</constant> mit dem Eintrag <emphasis>kein Zugriff</emphasis>
			heißt, dass <constant>MaryK</constant>, die Teil der Gruppe
			<constant>Jeder</constant> ist, keinen Zugriff hat, obwohl ihr explizit
			volle Zugriffsrechte gegeben wurden.
			</para>
			</warning>

			</sect3>
		</sect2>

</sect1>

<sect1>
<title>MS Windows-Zugriffskontroll-Listen (ACLs) und UNIX-Wechselwirkungen</title>

	<sect2>
		<title>Verwalten von UNIX-Berechtigungen durch NT-Sicherheitsdialoge</title>


		<para>
<indexterm><primary>Berechtigungen</primary><secondary>Datei/Verzeichnis ACLs</secondary></indexterm>
		Windows NT-Clients können ihre eigene Dialogbox für Sicherheitseinstellungen verwenden,
		um UNIX-Berechtigungen anzuzeigen und zu ändern.
		</para>

		<para>
		Diese Fähigkeit ist so umsichtig, dass die Sicherheit des UNIX-Hosts, auf dem
		Samba läuft, nicht gefährdet wird und dennoch alle Dateiberechtigungsregeln,
		die ein Samba-Administrator setzt, beachtet werden.
		</para>

		<para>
		Samba versucht nicht, die POSIX-ACLs zu übertreffen, so dass die vielen feiner
		abgestimmten Zugriffskontroll-Optionen, die
		Windows zur Verfügung stellt, einfach ignoriert werden.
		</para>

		<note>
		<para>
		Alle Zugriffe auf UNIX/Linux-Systemdateien durch Samba werden durch die
		Betriebssystem-Dateizugriffskontrollen kontrolliert.
		Bei der Fehlersuche nach Dateizugriffsproblemen ist es enorm wichtig, die
		Identität des Windows-Benutzers herauszufinden,
		wie sie von Samba an dieser Stelle des Dateizugriffs gesehen wird.
		Diese kann am besten durch die Samba-Protokolldateien ermittelt werden.
		</para>
		</note>
	</sect2>

	<sect2>
		<title>Anzeigen von Dateisicherheit auf einer Samba-Freigabe</title>

		<para>
		Von einem NT4/2000/XP-Client aus rechtsklicken Sie auf jede Datei oder
		Verzeichnis in einem Samba-
		gemounteten Laufwerksbuchstaben oder UNC-Pfad. Wenn das Menü aufgeht,
		klicken Sie auf den Eintrag <guilabel>Eigenschaften</guilabel>
		am Fuß des Menüs. Dies startet die Dialogbox <constant>Eigenschaften</constant>.
		Klicken Sie auf die Registerkarte
		<guilabel>Sicherheit</guilabel>, <guilabel>Erweitert</guilabel> und Sie werden drei Panels sehen:
		<guibutton>Berechtigungen</guibutton>,
		<guibutton>Überwachung</guibutton> und <guibutton>Besitzer</guibutton>. Der Button
		<guibutton>Überwachung</guibutton>
		wird entweder eine Fehlermeldung
		<errorname>`A requested privilege is not held by the client'</errorname>
		verursachen, falls der Benutzer kein NT-Administrator ist, oder einen Dialog erscheinen lassen,
		mit dem ein Administrator
		Überwachungsgrundlagen einer Datei hinzufügen kann, wenn der Benutzer als NT-Administrator
		angemeldet ist. Dieser Dialog funktioniert derzeit nicht mit einer Samba-Freigabe,
		da der einzige Button, der <guibutton>Hinzufügen</guibutton>-Button, es derzeit nicht zulässt, eine Benutzerliste anzuzeigen.
		</para>

	</sect2>

	<sect2>
		<title>Anzeigen von Dateieigentümern</title>

		<para>
		Wenn Sie auf den Button <guibutton>Eigentümer</guibutton> klicken, erscheint eine Dialogbox,
		die Ihnen zeigt, wem die betreffende Datei gehört.
		Der Name des Eigentümers wird wie folgt angezeigt:
		</para>

		<para>
		<command><quote>SERVER\Benutzer (Langer Name)</quote></command>
		</para>

		<para>
		<replaceable>SERVER</replaceable> ist der NetBIOS-Name des Samba-Servers,
		<replaceable>Benutzer</replaceable> der Name des UNIX-Benutzers, dem die Datei gehört,
		und <replaceable>(Langer Name)</replaceable> ist
		die Beschreibung, die den Benutzer ausweist (normalerweise wird dies im GECOS-Feld
		der UNIX-Passwortdatenbank gefunden).
		Klicken Sie auf den Button <guibutton>Abbrechen</guibutton>, um diesen Dialog zu
		entfernen.
		</para>

		<para>
		Falls der Parameter <smbconfoption><name>nt acl support</name></smbconfoption> auf
		<constant>false</constant> gesetzt ist,
		wird der Dateieigentümer als NT-Benutzer <emphasis>Jeder</emphasis> angezeigt.
		</para>

		<para>
		Mit dem <guibutton>Übernehmen</guibutton>-Button können Sie nicht die
		Eigentumsrechte an dieser Datei auf sich selbst setzen
		(ein Anklicken zeigt eine Dialogbox, die angibt, dass der Benutzer,
		als der Sie gerade auf dem NT-Client angemeldet sind, nicht gefunden werden kann).
		Der Grund hierfür ist, dass das Ändern der Eigentumsrechte auf eine Datei eine
		privilegierte Operation in UNIX ist, die ausschließlich dem Benutzer
		<emphasis>root</emphasis> obliegt. Indem Sie auf diesen Button klicken,
		veranlassen Sie NT dazu, die Eigentumsrechte einer Datei auf den am NT-Client
		gegenwärtig angemeldeten Benutzer zu übertragen; dies funktioniert
		jedoch zu diesem Zeitpunkt mit Samba nicht.
		</para>

		<para>
		Es gibt ein NT-Kommando, <command>chown</command>, das mit Samba funktioniert
		und es einem Benutzer, der mit Administratorprivilegien an
		einen Samba-Server als root angeschlossen ist, erlaubt, die Eigentumsrechte von
		Dateien sowohl auf lokaler NTFS-Dateisystemebene als auch auf entfernt gemounteten
		NTFS- oder Samba-Laufwerken zu setzen. Dies ist verfügbar als Teil der von
		Jeremy Allison vom Samba-Team geschriebenen <application>Seclib</application>-NT-Sicherheitsbibliothek, und Sie können es von der FTP-Hauptseite von Samba abrufen.
		</para>

	</sect2>

	<sect2>
		<title>Das Anzeigen von Datei- oder Verzeichnisberechtigungen</title>

		<para>
		Der dritte Button ist die Schaltfläche <guibutton>Berechtigungen</guibutton>.
		Wenn Sie sie anklicken, öffnet sich eine Dialogbox,
		die sowohl die Berechtigungen als auch den UNIX-Besitzer für die Datei und das Verzeichnis anzeigen.
		Der Eigentümer wird wie folgt angezeigt:
		</para>

		<para><command><replaceable>SERVER</replaceable>\
				<replaceable>Benutzer</replaceable>
				<replaceable>(Langer Name)</replaceable></command></para>

		<para><replaceable>SERVER</replaceable> ist der NetBIOS-Name des Samba-Servers,
		<replaceable>Benutzer</replaceable>
		ist der Name des UNIX-Benutzers, dem die Datei gehört, und
		<replaceable>(Langer Name)</replaceable> ist
		die Beschreibung, die den Benutzer ausweist (normalerweise wird dies im GECOS-Feld
		der UNIX-Passwortdatenbank gefunden).
		</para>

		<para>
		Falls der Parameter <smbconfoption><name>nt acl support</name></smbconfoption> 
		auf <constant>false</constant> gesetzt ist,
		wird der Dateieigentümer als NT-Benutzer <emphasis>Jeder</emphasis> angezeigt.
		</para>
		
		<para>
		Das Berechtigungsfeld wird bei Dateien und Verzeichnissen anders dargestellt, 
		also werde ich die Art, wie Dateiberechtigungen angezeigt werden, zuerst beschreiben.
		</para>

		<sect3>
			<title>Dateiberechtigungen</title>

			<para>Die Standard-UNIX-Drillinge Benutzer/Gruppe/Welt und die 
			korrespondierenden Berechtigungen 
			<constant>lesen, schreiben, ausführen</constant> 
			werden von Samba in ein aus drei Elementen bestehendes NT-ACL mit 
			den Bits <quote>r</quote>, <quote>w</quote> und <quote>x</quote>
			von Samba in ein aus drei Elementen bestehendes NT-ACL gemappt, wobei die Bits <quote>r</quote>, <quote>w</quote> und <quote>x</quote> auf passende NT-Berechtigungen gemappt werden. Die UNIX-Welt-Berechtigungen werden 
			in die globale NT-Gruppe <constant>Jeder</constant> gemappt,
			gefolgt von der Berechtigungsliste, die unter UNIX für Welt gilt. Die UNIX 
			Eigentümer- und Gruppenberechtigungen werden als ein NT-
			<guiicon>Benutzer</guiicon>-Symbol und ein NT-Symbol 
			<guiicon>lokale Gruppe</guiicon> angezeigt,
			beziehungsweise durch die nachfolgende Berechtigungsliste für den 
			UNIX-Benutzer und die UNIX-Gruppe.</para>

			<para>Dadurch, dass viele UNIX-Berechtigungssätze nicht auf allgemeine NT-Namen
			wie <constant>lesen</constant>,
			<constant>ändern</constant> oder <constant>volle Kontrolle</constant> passen,
			werden gemeinhin die Berechtigungen 
			durch Wörter wie <constant>Spezieller Zugriff</constant> in der 
			NT-Anzeigeliste angeführt.</para>

			<para>Doch was passiert, wenn die Datei keine Berechtigungen für eine bestimmte 
			UNIX-Benutzergruppe oder Welt-Komponente erlaubt?
			Um es zu ermöglichen, <quote>keine Berechtigungen</quote> zu sehen und zu 
			ändern, übergibt Samba das NT-ACL-Attribut 
			<constant>Eigentum übernehmen</constant> 
			(das keine Bedeutung für UNIX hat) und meldet eine Komponente ohne 
			Berechtigung, wie wenn das NT-Bit <command>O</command> gesetzt wäre.
			Dies wurde natürlich deshalb gewählt, um es wie eine Null aussehen zu 
			lassen, was bedeutet: Keine (Null) Berechtigungen. Weitere Details zu dieser
			Entscheidung werden weiter unten angeführt.</para>
		</sect3>

		<sect3>
			<title>Verzeichnis-Berechtigungen</title>

			<para>Verzeichnisse auf einem NTFS-Dateisystem haben zwei verschiedene 
			Berechtigungssätze. Der erste Satz ist die ACL, die
			auf das Verzeichnis selbst gesetzt ist. Sie wird normalerweise im ersten Satz 
			der Klammern im normalen NT-Stil <constant>RW</constant>
			angezeigt. Dieser erste Satz an Berechtigungen wird durch Samba in exakt 
			derselben Art und Weise erzeugt, wie es normale Dateiberechtigungen
			werden, und wird auch auf diesselbe Art und Weise angezeigt.</para>
			<para>Der zweite Satz von Verzeichnis-Berechtigungen hat keine echte Bedeutung 
			in der UNIX-Berechtigungs-Welt und repräsentiert
			die <constant>vererbten</constant> Berechtigungen, die jede Datei erben würde, die in 
			diesem Verzeichnis erzeugt wird.</para>

			<para>Samba vereinigt diese vererbten Berechtigungen für NT, indem es die 
			UNIX-Berechtigungsmodi als eine NT-ACL zurückgibt, so
			wie es eine Datei erhalten würde, die Samba für diese Freigabe erzeugt hat.</para>
		</sect3>
	</sect2>

	<sect2>
		<title>Ändern von Datei- oder Verzeichnis-Berechtigungen</title>

		<para>Das Ändern von Datei- und Verzeichnis-Berechtigungen ist genauso einfach wie das Ändern
		der Anzeige der Berechtigungen in der Dialogbox und das Klicken auf <guibutton>OK</guibutton>.
		Jedoch gibt es Einschränkungen, die ein Benutzer kennen sollte und die mit den Standard-Samba-Berechtigungsmasken und mit dem Vergeben von DOS-Attributen zu tun haben, die ebenfalls in diesem Zusammenhang
		berücksichtigt werden müssen.</para>

		<para>Falls der Parameter <smbconfoption><name>nt acl support</name></smbconfoption>
		auf <constant>false</constant> gesetzt ist, schlägt jeder Versuch, 
		Sicherheitsberechtigungen zu setzen,
		mit einer Meldung <errorname>'Zugriff verweigert'</errorname> fehl.</para>

		<para>Das Erste, was anzumerken ist, ist, dass der Button
		<guibutton>Hinzufügen</guibutton> 
		keine Samba-Benutzerliste zurückgeben wird (es wird eine Fehlermeldung ausgegeben, 
		die besagt
		<errorname>'Der Remoteprozedur-Aufruf schlug fehl und konnte nicht ausgeführt 
		werden'</errorname>).
		Das bedeutet, dass Sie nur die gegenwärtigen Benutzer/Gruppen/Welt-Berechtigungen, 
		die in der Dialogbox
		angezeigt werden, ändern können. Dies funktioniert deshalb so gut, weil es die 
		einzigen Berechtigungen sind,
		die UNIX augenblicklich hat.</para>

		<para>Falls ein Berechtigungsdrilling (entweder Benutzer, Gruppe oder Welt)
		von der Liste der Berechtigungen in der NT-Dialogbox entfernt wird und dann der
		<guibutton>OK</guibutton>-Button angeklickt wird, wird dies auf UNIX-Seite
		als <quote>keine Berechtigungen</quote> angewendet. Wenn Sie sich dann die Berechtigungen
		nochmals ansehen, wird der Eintrag <quote>keine Berechtigungen</quote> als das 
		NT-Flag <command>O</command> 
		wie oben beschrieben angezeigt. Dies erlaubt es Ihnen, Berechtigungen wieder auf 
		eine Datei oder Verzeichnis
		zu setzen, nachdem Sie diese von einer der Drillingskomponenten entfernt hatten.</para>

		<para>Weil UNIX nur die Bits <quote>r</quote>, <quote>w</quote> und <quote>x</quote> 
		einer NT-ACL unterstützt, werden diese ignoriert, falls andere
		NT-Sicherheitsattribute wie <constant>Löschzugriff</constant>
		ausgewählt wurden, falls diese auf einem Samba-Server angewandt werden.</para>

		<para>Wenn Berechtigungen auf ein Verzeichnis gesetzt werden, wird der zweite 
		Satz an Berechtigungen (im zweiten Klammern-Paar)
		standardmäßig auf alle Dateien in diesem Verzeichnis angewandt.
		Falls Sie dies nicht wünschen, müssen Sie die Auswahlbox 
		<guilabel>Berechtigungen auf existierende Dateien zurücksetzen</guilabel>
		in dem NT-Dialog vor einem Klicken auf <guibutton>OK</guibutton> abwählen.</para>

		<para>Falls Sie es wünschen, alle Berechtigungen von einer Benutzer/Gruppe/Welt-Komponente zu entfernen,
		können Sie entweder eine Komponente auswählen und auf den Button <guibutton>Entfernen</guibutton> klicken, oder
		setzen Sie die Komponente darauf, nur die spezielle Berechtigung <constant>Berechtigung übernehmen</constant> 
		(angezeigt als <command>O</command>) zu setzen.</para>
	</sect2>

	<sect2>
		<title>Die Wechselwirkung mit den Samba-Standard-Parametern <quote>create mask</quote></title>

		<para>Es gibt vier Parameter, die das Wechselspiel mit den Samba-Standard-Parametern 
		<parameter>create mask</parameter> kontrollieren.
		Diese sind:

		<itemizedlist>
			<listitem><smbconfoption><name>security mask</name></smbconfoption></listitem>
			<listitem><smbconfoption><name>force security mode</name></smbconfoption></listitem>
			<listitem><smbconfoption><name>directory security mask</name></smbconfoption></listitem>
			<listitem><smbconfoption><name>force directory security mode</name></smbconfoption></listitem>
		</itemizedlist>

		</para>

		<para>Sobald ein Benutzer auf <guibutton>OK</guibutton> klickt, um Berechtigungen zu setzen, mappt Samba
		die angegebenen Berechtigungen in einen Benutzer/Gruppe/Welt-Drillingssatz und gleicht dann die geänderten
		Berechtigungen für diese Datei mit den in <smbconfoption><name>security mask</name></smbconfoption> gesetzten Bits ab.
		Jedes geänderte Bit, das nicht mit <quote>1</quote> in diesem Parameter gesetzt wurde, bleibt in den 
		Dateiberechtigungen unberücksichtigt.</para>

		<para>Grundsätzlich werden Null-Bits in der <smbconfoption><name>security mask</name></smbconfoption>
		als ein Satz von Bits behandelt, die der Benutzer <emphasis>nicht</emphasis> ändern darf, Einer-Bits darf der Benutzer
		ändern.
		</para>

		<para>Falls er nicht ausdrücklich gesetzt worden ist, zeigt dieser Parameter standardmäßig auf denselben Wert wie
		der Parameter <smbconfoption><name>create mask</name></smbconfoption>. Um es einem Benutzer zu erlauben,
		alle Berechtigungen von Benutzer/Gruppe/Welt an einer Datei zu ändern, setzen Sie diesen Parameter auf 0777.
		</para>

		<para>Als Nächstes gleicht Samba die geänderten Berechtigungen einer Datei mit den Bits ab, die im
		<smbconfoption><name>force security mode</name></smbconfoption>-Parameter gesetzt sind. Jedes geänderte Bit
		wird passend zu den auf <quote>1</quote> gesetzten Bits in diesem Parameter zwangsläufig gesetzt.</para>

		<para>Grundsätzlich werden Bits aus dem Parameter <parameter>force security mode</parameter> als ein Satz von Bits
		behandelt, die der Benutzer immer auf <quote>an</quote> gesetzt hat, wenn die Sicherheit einer Datei geändert wird.
		</para>

		<para>Falls er nicht ausdrücklich gesetzt worden ist, zeigt dieser Parameter standardmäßig auf denselben Wert wie
		der Parameter <smbconfoption><name>force create mode</name></smbconfoption>. Um es einem Benutzer zu erlauben,
		alle Berechtigungen von Benutzer/Gruppe/Welt an einer Datei ohne Berechtigungen zu ändern, 
		setzen Sie diesen Parameter auf 000.
		Die Parameter <smbconfoption><name>security mask</name></smbconfoption> und <parameter>force security mode</parameter>
		werden angewendet, um die Anfragen in dieser Reihenfolge zu ändern.</para>
		
		<para>Für ein Verzeichnis wird Samba dieselben Operationen durchführen, wie zuvor für eine Datei beschrieben. Es wird jedoch der Parameter <parameter>directory security mask</parameter> anstatt des
		Parameters <parameter>security mask</parameter> und Parameter <parameter>force directory security mode</parameter>
		anstatt des Parameters <parameter>force security mode</parameter> angewandt.</para>

		<para>Der Parameter <smbconfoption><name>directory security mask</name></smbconfoption> 
		ist standardmäßig auf denselben Wert wie der Parameter <parameter>directory mask</parameter> 
		gesetzt, und der Parameter <parameter>force directory security mode</parameter> ist standardmäßig
		auf denselben Wert wie der Parameter <smbconfoption><name>force directory mode</name></smbconfoption> 
		gesetzt.
		Auf diese Weise erzwingt Samba die Einschränkungen bei Berechtigungen, die ein Administrator auf einer
		Samba-Freigabe gesetzt hat, während den Benutzern weiterhin erlaubt wird, innerhalb dieser Einschränkung
		die Berechtigungsbits zu ändern.</para>

		<para>Falls Sie eine Freigabe aufsetzen möchten, die es Benutzern erlaubt, die volle Kontrolle bei der
		Änderung von Berechtigungsbits auf ihren eigenen Dateien und Verzeichnissen auszuüben, und die es nicht erfordert, irgendwelche
		Bits auf <quote>an</quote> zu verstellen, dann setzen Sie die folgenden Parameter in der &smb.conf; Datei
		innerhalb des freigabe-spezifischen Abschnitts:
		</para>

		<smbconfblock>
			<smbconfoption><name>security mask</name><value>0777</value></smbconfoption>
			<smbconfoption><name>force security mode</name><value>0</value></smbconfoption>
			<smbconfoption><name>directory security mask</name><value>0777</value></smbconfoption>
			<smbconfoption><name>force directory security mode</name><value>0</value></smbconfoption>
		</smbconfblock>
	</sect2>

	<sect2>
		<title>Die Wechselwirkung mit den Standard-Samba-Dateiattribut-Vergaben</title>

		<note>
		<para>Samba vergibt einige der DOS-Attribut-Bits (wie z.B. <quote>Nur lesen</quote>)
		in den UNIX-Berechtigungen einer Datei. Dies bedeutet, dass es einen
		Konflikt zwischen den Berechtigungsbits, die durch den Sicherheitsdialog gesetzt wurden,
		und den Berechtigungen geben kann, die durch die Vergabe von Dateiattributen gesetzt wurden.
		</para>
		</note>

		<para>Falls eine Datei für den Eigentümer keinen UNIX-Lesezugriff hat, wird diese
		als <quote>Nur lesen</quote> in dem Standarddialog der Registerkarte <guilabel>Dateiattribute</guilabel> angezeigt.
		Leider ist dieser Dialog derselbe, der die Sicherheitsinformationen in einer anderen Registerkarte
		enthält.
		</para>

		<para>Der Eigentümer kann dadurch fälschlicherweise glauben, die Berechtigungen dadurch ändern zu können, weil es ihm anscheinend erlaubt wird, Lesezugriff durch Nutzung des Sicherheitsdialoges zu bekommen; er klickt
		auf <guibutton>OK</guibutton>, um zurück zu der Registerkarte mit den Standardattributen zu gelangen,
		klickt auf <guibutton>OK</guibutton> in diesem Dialog, und NT setzt die Dateiberechtigungen 
		auf Nur-lesen zurück (weil dies die Attribute in diesem Dialog ihm sagen). Dies bedeutet: Klicken Sie - nachdem Sie
		die Berechtigungen gesetzt und auf <guibutton>OK</guibutton> zum Zurückgehen auf den Attributdialog geklickt haben - immer auf <guibutton>Abbrechen</guibutton> statt auf <guibutton>OK</guibutton>, 
		um sicherzustellen, dass Ihre Änderungen nicht überschrieben werden.</para>
	</sect2>
</sect1>

<sect1>
<title>Gängige Fehler</title>

<para>
Datei-, Verzeichnis- und Freigabezugriffsprobleme tauchen häufig auf der Mailingliste auf. Die folgenden Beispiele wurden
in letzter Zeit in der Maillingliste behandelt.
</para>


	<sect2>
	<title>Benutzer können nicht auf eine öffentliche Freigabe schreiben</title>

	<para>
	<quote>
	Wir haben einige Schwierigkeiten mit Datei/Verzeichnis-Berechtigungen. Ich kann mich als Admin-User (root) an
	einer Domäne anmelden, und es gibt eine öffentliche Freigabe, auf der jeder die Berechtigung zum Erzeugen und
	Ändern von Dateien haben sollte, aber nur root kann Dateien ändern, sonst niemand. Wir müssen dauernd auf dem
	Server <userinput>chgrp -R users *</userinput> und <userinput>chown -R nobody *</userinput> eingeben, um den
	anderen Benutzern das Ändern von Dateien zu erlauben.
	</quote>
	</para>

	<para>
	Es gibt viele Möglichkeiten, dieses Problem zu lösen, und hier sind ein paar Hinweise:
	</para>

	<procedure>
		<step>
			<para>
			Gehen Sie auf die oberste Ebene des Verzeichnisses, das freigegeben ist.
			</para>
		</step>

		<step>
			<para>
			Setzen Sie die Benutzer und Gruppe als Eigentümer auf das, was öffentlich sein soll
			<screen>
&prompt;find 'directory_name' -type d -exec chown user.group {}\;
&prompt;find 'directory_name' -type d -exec chmod 6775 'directory_name'
&prompt;find 'directory_name' -type f -exec chmod 0775 {} \;
&prompt;find 'directory_name' -type f -exec chown user.group {}\;
</screen>
			</para>

			<note><para>
			Das oben Aufgeführte setzt das <constant>Sticky-Bit</constant> auf alle Verzeichnisse.
			Lesen Sie in Ihren UNIX/Linux-Manpages nach, was dies bewirkt. Es veranlasst das Betriebssystem,
			auf alle Dateien in Ihren Verzeichnissen den Eigentümer des Verzeichnisses zu setzen.
			</para></note>
		</step>
		<step>
			<para>

			Das Verzeichnis heißt: <replaceable>/foobar</replaceable>
<screen>
&prompt;<userinput>chown jack.engr /foobar</userinput>
</screen>
			</para>

			<note><para>
				<para>Dies ist dasselbe wie:</para>
<screen>
&prompt;<userinput>chown jack /foobar</userinput>
&prompt;<userinput>chgrp engr /foobar</userinput>
</screen>
			</para></note>
		</step>
		<step>
			<para>Geben Sie jetzt Folgendes ein:

<screen>
&prompt;<userinput>chmod 6775 /foobar</userinput>
&prompt;<userinput>ls -al /foobar/..</userinput>
</screen>

			</para>

			<para>Dann sollten Sie dies sehen:
<screen>
drwsrwsr-x  2 jack  engr    48 2003-02-04 09:55 foobar
</screen>
			</para>
		</step>
		<step>

		<para>Geben Sie jetzt dies ein:
<screen>
&prompt;<userinput>su - jill</userinput>
&prompt;<userinput>cd /foobar</userinput>
&prompt;<userinput>touch Afile</userinput>
&prompt;<userinput>ls -al</userinput>
</screen>
		</para>

		<para>
		Sie sollten nun sehen, dass die Datei <filename>Afile</filename>, die von Jill erzeugt worden ist, die Eigentumsrechte
		und Berechtigungen von Jack hat, so wie hier:
<screen>
-rw-r--r--  1 jack  engr     0 2003-02-04 09:57 Afile
</screen>
		</para>
		</step>

		<step>
		<para>
		Fügen Sie jetzt in Ihrer &smb.conf; für die Freigabe Folgendes ein:
		<smbconfblock>
<smbconfoption><name>force create mode</name><value>0775</value></smbconfoption>
<smbconfoption><name>force directory mode</name><value>6775</value></smbconfoption>
		</smbconfblock>
		</para>

		<note><para>
		Diese Maßnahmen werden nur dann gebraucht, wenn Ihre Benutzer nicht Mitglied der Gruppe sind, die
		Sie benutzt haben. Das ist dann der Fall, wenn Sie innerhalb des Betriebssystems keine Schreibberechtigung
		auf das Verzeichnis haben.
		</para>
		</note>

		<para>
		Eine Alternative ist es, in der &smb.conf; diesen Eintrag für die Freigabe zu setzen:
		<smbconfblock>
<smbconfoption><name>force user</name><value>jack</value></smbconfoption>
<smbconfoption><name>force group</name><value>engr</value></smbconfoption>
		</smbconfblock>
		</para>
	</step>
	</procedure>
	</sect2>


	<sect2>
		<title>Dateioperationen, die als <emphasis>root</emphasis> mit <emphasis>force user</emphasis> ausgeführt wurden</title>

		<para>
		Wenn Sie einen Benutzer in <smbconfoption><name>admin users</name></smbconfoption> haben, wird Samba für
		diesen Benutzer Dateioperationen immer als <emphasis>root</emphasis> ausführen, sogar wenn
		<smbconfoption><name>force user</name></smbconfoption> gesetzt wurde.
		</para>
	</sect2>

	<sect2>
		<title>MS Word mit Samba ändert den Eigentümer einer Datei</title>

		<para>
		<emphasis>Frage:</emphasis> <quote>Wenn Benutzer B ein Word-Dokument abspeichert, das Benutzer A
		gehört, ist anschließend der Eigentümer der aktualisierten Datei Benutzer B.
		Warum macht Samba das? Wie kann ich das beheben?</quote>
		</para>

		<para>
		<emphasis>Antwort:</emphasis> Word macht Folgendes, wenn Sie ein Word-Dokument ändern: Es erzeugt
		ein NEUES Dokument mit einem temporären Namen. Word schließt dann das alte Dokument und löscht es. Dann
		benennt Word das neue Dokument in den Original-Dateinamen um.
		Es gibt keinen Mechanismus, durch den Samba in irgendeiner Weise wissen kann, dass das neue Dokument wirklich
		dem Eigentümer der Originaldatei gehören sollte. Samba hat keine Möglichkeit zu erfahren, dass MS Word die
		Datei umbenannt hat. Samba ist nur in der Lage zu sagen, dass die Datei, die erzeugt wurde, eine NEUE
		Datei ist, aber nicht, dass die Applikation (Word) diese aktualisiert hat.
		</para>

		<para>
		Es gibt einen Workaround, um diese Berechtigungsprobleme zu lösen. Dieser Workaround setzt voraus, dass Sie
		verstehen, wie Sie das Verhalten des Dateisystems innerhalb der Datei &smb.conf; steuern können, und wissen, wie ein UNIX-Dateisystem funktioniert. Setzen Sie <command>chmod g+s `directory_name'</command> auf das Verzeichnis, in dem Sie
		Word-Dokumente ändern möchten. 
		Dies stellt sicher, dass alle Dateien mit der Gruppe erzeugt werden, der das Verzeichnis gehört.
		In dem Abschnitt in der &smb.conf;, der die Freigabe deklariert, setzen Sie:
		</para>

		<para>
		<smbconfblock>
                <smbconfoption><name>force create mode</name><value>0660</value></smbconfoption>
                <smbconfoption><name>force directory mode</name><value>0770</value></smbconfoption>
		</smbconfblock>
		</para>

		<para>
		Diese beiden Einstellungen stellen sicher, dass alle Verzeichnisse und Dateien, die in der Freigabe
		erzeugt werden, durch den Eigentümer und die Gruppe les- und schreibbar sind, die auf das Verzeichnis
		selbst gesetzt sind.
		</para>

	</sect2>

</sect1>

</chapter>
