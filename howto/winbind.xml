<?xml version="1.0" encoding="ISO-8859-1"?>
<chapter id="winbind">

<chapterinfo>
	<author>
		<firstname>Tim</firstname><surname>Potter</surname>
		<affiliation>
			<orgname>Samba Team</orgname>
			<address><email>tpot@linuxcare.com.au</email></address>
		</affiliation>
	</author>
	&author.tridge;
	<author>
		<firstname>Naag</firstname><surname>Mummaneni</surname>
		<affiliation>
			<address><email>getnag@rediffmail.com</email></address>
		</affiliation>
		<contrib>Notes for Solaris</contrib>
	</author>
	<author>
		<firstname>John</firstname><surname>Trostel</surname>
		<affiliation>
			<address><email>jtrostel@snapserver.com</email></address>
			<orgname>SNAP</orgname>
		</affiliation>
	</author>
	&author.jelmer;
	&author.jht;
	<author>&person.sgw;<contrib>Deutsche Übersetzung</contrib></author>
</chapterinfo>

<title>Winbind: Benutzung von Domänenkonten</title>

<sect1>
	<title>Eigenschaften und Vorzüge</title>

	<para>
	Die Integration von UNIX und Microsoft Windows NT durch eine einheitliche Anmeldung 
	(<quote>unified logon</quote>) galt
	lange Zeit als <quote>heiliger Gral</quote> in heterogenen EDV-Umgebungen.
	</para>

	<para>
	Es gibt eine weitere Sache, ohne welche die UNIX und Microsoft Windows Netwerk
	Interoperabilität leiden würde. Es ist zwingend notwendig, daß es einen Mechanismus
	gibt, mit dem es möglich ist, Dateien über UNIX-Systeme hinweg bereitzustellen und 
	gleichzeitig die Integrität der Domänen-Benutzer- und Gruppenrechte zu wahren. 
	</para>

	<para>
	<emphasis>winbind</emphasis> ist ein Bestandteil der Samba-Suite, der das 
	Problem der einheitlichen Anmeldung löst. Winbind benutzt eine UNIX-Implementierung der 
	Microsoft RPC Aufrufe, Steckbare Authentisierungs-Module (PAM) und den Name Service Switch,
	um Windows NT Domänenbenutzer auf UNIX-Systemen als UNIX-Benutzer erscheinen und arbeiten 
	zu lassen. Dieses Kapitel beschreibt das System von winbind, erklärt die Funktionsweise,
	wie es konfiguriert wird und wie es intern arbeitet.
	</para>

	<para>
	Winbind stellt drei unterschiedliche Funktionen zur Verfügung:
	</para>

	<itemizedlist>
		<listitem><para>
		Die Authentifizierung der Benutzerbeglaubigung (mittels PAM)
		</para></listitem>

		<listitem><para>
		Die Auflösung der Identität (mittels NSS)
		</para></listitem>

		<listitem><para>
		Winbind hält eine Datenbank namens winbind_idmap.tdb, in welcher die 
		Zuordnungen zwischen den UNIX UIDs / GIDs und den NT SIDs vermerkt sind.
		Diese Zuordnungen sind nur für Benutzer und Gruppen, welche nicht über eine
		lokale UID/GID verfügen. Winbind sichert die Zusammengehörigkeit zwischen der
		UID/GID, zugeteilt aus dem idmap uid/gid Bereich, und der NT SID.
		Wenn <parameter>idmap backend</parameter> auf den Wert ldapsam:url anstatt
		der Nutzung einer lokalen Datei gesetzt ist, dann holt Winbind diese
		Informationen aus der LDAP-Datenbank.
		</para></listitem>
	</itemizedlist>

	<note><para>
	Wenn <command>winbindd</command> nicht läuft, dann wird der smbd 
	(welcher <command>winbindd</command> aufruft)
	auf die nur lokal vorhandenen Informationen der <filename>/etc/passwd</filename> 
	und <filename>/etc/group</filename> 
	ohne eine dynamische Zuordnung zurückgreifen.
	</para></note>

FIXME --- 
	<!--	<figure id="winbind_idmap"><title></title>
	<mediaobject>
	<imageobject role="latex"><imagedata fileref="projdoc/imagefiles/idmap_winbind_no_loop" scale="50" scalefit="1"/></imageobject>
	<imageobject><imagedata fileref="projdoc/imagefiles/idmap_winbind_no_loop.png" scale="50" scalefit="1"/></imageobject>
	</mediaobject>
	</figure>-->

</sect1>


<sect1>
	<title>Einführung</title>
	
	<para>Es ist wohl bekannt, daß UNIX und Windows NT verschiedene Modelle zur Repräsentation von
	Benutzer- und Gruppen-Information haben, und verschiedene Technologien nutzen, um diese zu 
	implementieren. Diese Tatsache macht es schwierig, die beiden Systeme auf befriedigende Weise zu
	integrieren.
	</para>
	
	<para>Eine gängige Lösung ist es, identisch benannte Benutzerkonten sowohl im Windows- wie auch im
	UNIX-System anzulegen, und die Samba-Suite dafür zu nutzen, Datei- und Druckdienste zwischen den beiden
	Systemen anzubieten. Diese Lösung ist jedoch weit davon entfernt, perfekt zu sein, da das 
	Hinzufügen und Löschen von Benutzern auf beiden Gruppen von Maschinen zur lästigen Pflicht wird, und
	zwei Sätze Passwörter benötigt werden &smbmdash; beides führt zu Synchronisations-Problemen zwischen
	Windows und UNIX, und zur Verwirrung der Benutzer.</para>
	
	<para>Wir trennen das Problem der einheitlichen Anmeldung für UNIX-Maschinen in drei kleinere Probleme:
	</para>
	
	<itemizedlist>
		<listitem><para>Das Beziehen von Windows NT Benutzer- und Gruppen-Information.
		</para></listitem>
		
		<listitem><para>Die Authentifikation von Windows NT Benutzern.
		</para></listitem>
		
		<listitem><para>Das Ändern von Passwörtern der Windows NT Benutzer.
		</para></listitem>
	</itemizedlist>


	<para>Im Idealfall würde eine weitblickende Lösung des <quote>unified logon</quote>-Problems alle
	oben genannten Teilprobleme ohne Duplikation von Informationen auf den UNIX-Systemen lösen, und ohne
	zusätzliche Arbeiten für den System-Administrator zu verursachen, wenn er Benutzer und Gruppen auf
	den einzelnen Systemen administriert. Das Winbind-System bietet eine einfache und elegante Lösung
	für alle drei Teile des <quote>unified logon</quote>-Problems an.
	</para>
</sect1>


<sect1>
	<title>Was Winbind anbietet</title>

	<para>Winbind vereint UNIX und Windows NT Konten-Verwaltung, indem es einer UNIX-Box erlaubt,
	ein vollwertiges Mitglied einer NT-Domäne zu werden. Sobald dies erfolgt ist, sieht die UNIX-Box
	die NT-Benutzer und -Gruppen als ob sie <quote>native</quote> UNIX-Benutzer und -Gruppen wären,
	was die Benutzung der NT-Domäne in fast derselben Art erlaubt, wie NIS+ in reinen UNIX-Umgebungen
	verwendet wird.</para>
	
	<para>Das Endergebnis ist, daß wann immer ein Programm auf der UNIX-Maschine das Betriebssystem
	nach einem Benutzer- oder Gruppen-Namen fragt, die Anfrage an den NT-Domänen-Controller weitergegeben
	wird, der diese Namensabfrage durchführt. Weil Winbind sich auf einem sehr tiefgreifenden Level
	ins Betriebssystem einhängt (via der NSS-Namensauflösungs-Module in der C-Library), ist diese
	Umleitung zum NT-Domänen-Controller völlig transparent.</para>
	
	<para>Die Benutzer auf der UNIX-Maschine können dann NT-Benutzer- und NT-Gruppen-Namen 
	so verwenden, als ob sie <quote>native</quote> UNIX-Namen wären. Sie können mittels chown
	Eigentümer von Dateien werden, so daß die Dateien NT-Domänen-Benutzern gehören, oder sich sogar
	auf einer UNIX-Maschine anmelden und eine UNIX-X-Window-Session als Domänen-Benutzer ausführen.</para>

	<para>Das einzige sichtbare Anzeichen, daß Winbind verwendet wird, ist, daß Benutzer- und Gruppen-Namen
	die Form <constant>DOMÄNE\benutzer</constant> und <constant>DOMÄNE\gruppe</constant> annehmen. Das ist
	notwendig, da dies Winbind erlaubt, zu erkennen, wenn eine Umleitung zum Domänen-Controller
	erforderlich ist, und auf welche Domäne sich diese Anfrage bezieht.</para>

	<para>Zusätzlich bietet Winbind einen Authentifikations-Dienst, der sich ins PAM-System
	(Pluggable Authentication Modules) einhängt, um die Authentifikation via einer NT-Domäne allen
	PAM-fähigen Applikationen anzubieten. Diese Fähigkeit löst das Problem der Synchronisation von 
	Passwörtern zwischen Systemen, da alle Passwörter an einem Platz allein gespeichert werden - am
	Domänen-Controller.</para>

	<sect2>
		<title>Zielgruppen</title>
		
		<para>Winbind zielt auf Organisationen ab, die eine existierende, auf NT-Domänen
		basierende Infrastruktur haben, in die sie UNIX-Maschinen integrieren wollen. Winbind
		erlaubt diesen Organisationen, UNIX-Maschinen einzusetzen, ohne eine separate Struktur
		für deren Konten aufrechterhalten zu müssen. Dies vereinfacht den administrativen Overhead
		der Integration von UNIX in einer NT-basierenden Organisation.</para>

                <para>Eine weitere interessante Art, in der wir erwarten, daß Winbind eingesetzt wird, ist
		als zentraler Teil von UNIX-basierenden Geräten. Solche Geräte, die Datei- und Druck-Dienste für
		MS-basierende Netzwerke anbieten, können Winbind einsetzen, um nahtlose Integration in die
		Domäne zu erreichen</para>
	</sect2>
</sect1>



<sect1>
	<title>Wie Winbind arbeitet</title>
	
	<para>Das Winbind-System ist rund um eine Client-Server-Architektur entworfen. 
	Ein <command>winbindd</command>-Daemon mit langer Laufzeit hört auf einem UNIX-Domänen-Socket auf 
	ankommende Anfrage. Diese Anfragen (<quote>Requests</quote>) werden von den NSS- und PAM-Clients
	generiert und sequentiell verarbeitet.</para>

        <para>Die Technologien, die zur Implementation von Winbind verwendet werden, werden nachfolgend
	im Detail beschrieben.</para>

	<sect2>
		<title>Microsoft Remote Procedure Calls</title>
		
		<para>In den letzten paar Jahren wurden von verschiedenen Samba-Team-Mitgliedern
		Anstrengungen unternommen, die verschiedenen Aspekte des Systems
		<quote>Microsoft Remote Procedure Call</quote> (MSRPC) zu entschlüsseln.
		Dieses System wird für die meisten netzwerkbasierenden Operationen zwischen
		Windows-NT-Maschinen verwendet, inklusive Fernwartung, Benutzer-Authentifikation und
		Druck-Spooling. Obwohl diese Arbeit ursprünglich zur Unterstützung der 
		Primär-Domänen-Controller-Funktionalitäten (PDC) in Samba getan wurde, hat sie auch eine
		Menge Code hervorgebracht, die für andere Zwecke eingesetzt werden kann.</para>
			
		<para>Winbind verwendet verschiedene MSRPC-Aufrufe, um Domänen-Benutzer und -Gruppen
		aufzuzählen, und detaillierte Informationen über einzelne Benutzer oder Gruppen zu
		beziehen. Andere MSRPC-Aufrufe können zur Authentifikation von NT-Domänen-Benutzern verwendet 
		werden und zum Ändern von Benutzer-Passwörtern. Durch direktes Abfragen eines Windows-PDCs
		stellt Winbind die Zuordnung von NT-Konteninformation auf UNIX-Benutzer- und Gruppen-Namen her.
		</para>
	</sect2>
	
	<sect2>
		<title>Microsoft Active Directory</title>

		<para>
		Seit dem späten 2001 hat Samba die Fähigkeiten, mit Microsoft Windows 2000 über dessen
		<quote>Native Mode</quote> Protokolle zusammenzuarbeiten, anstatt mittels der NT4 RPC Dienste.
		Unter Verwendung von LDAP und Kerberos kann ein Domänen-Mitglied, das Winbind ausführt,
		Benutzer und Gruppen genau in derselben Art aufzählen wie es ein Windows 200x Client würde,
		und schafft damit eine viel effizientere und effektivere Winbind-Implementation.                
                </para>
	</sect2>
	
	<sect2>
		<title>Name Service Switch</title>
		
		<para>Der Name Service Switch, oder NSS, ist eine Funktionalität, die in vielen 
		UNIX-Betriebssystemen vorhanden ist. Es erlaubt das Auflösen von System-Information, wie
		Hostnamen, Mail-Aliases oder Benutzerinformationen, unter Verwendung verschiedener Quellen.
		Zum Beispiel kann eine Standalone-UNIX-Workstation ihre Systeminformationen aus einer Reihe
		von einfachen Dateien im lokale Dateisystem beziehen. Eine vernetzte Workstation könnte zuerst
		versuchen, die Systeminformationen aus den lokalen Dateien zu beziehen, dann eine NIS-Datenbank
		oder einen DNS-Server nach Informationen zu Hostnamen befragen.</para>

                <para>Das NSS Applikations-Programmier-Interface erlaubt es Winbind, sich selbst als Quelle für
		Systeminformationen anzubieten, wenn UNIX-Benutzer- und Gruppen-Namen aufgelöst werden sollen.
		Winbind verwendet dieses Interface und Informationen, die mittels MSRPC-Aufrufen von einem
		Windows NT Server bezogen wurden, um eine neue Informationsquelle zur Verfügung zu stellen.
		Unter Verwendung von Standard-UNIX-Bibliotheks-Aufrufen kann man die Benutzer und Gruppen
		auf einer UNIX-Maschine, die Winbind ausführt, auflisten, und alle Benutzer und Gruppen in
		einer NT-Domäne sehen, plus diejenigen jeglicher Vertrauens-Domäne, als ob sie lokale
		Benutzer und Gruppen wären.</para>

                <para>Die primäre Steuerdatei für NSS ist
		<filename>/etc/nsswitch.conf</filename>. 
		Wenn eine UNIX-Applikation eine Anfrage stellt, durchsucht die C-Library 
		<filename>/etc/nsswitch.conf</filename> nach einer Zeile, die dem erfragten Dienst entspricht,
		z.B. dem Dienst <quote>passwd</quote>, der verwendet wird, wenn nach Benutzer- oder Gruppen-Namen
		gesucht wird. Diese Konfigurations-Zeile gibt an, welche Implementation dieses Diensts
		versucht werden soll, und in welcher Reihenfolge. Wenn die Zeile lautet:</para>

		<para><screen>
		passwd: files example
		</screen></para>

		<para>dann wird die C-Library zuerst ein Modul namens
		<filename>/lib/libnss_files.so</filename> laden, gefolgt vom Modul
		<filename>/lib/libnss_example.so</filename>. Die C-Library wird dynamisch jedes dieser Module
		der Reihe nach laden und die Auflösungs-Funktionen innerhalb jeden Moduls ausführen, um zu 
		versuchen, die Anfrage aufzulösen. Sobald dies geschehen ist, gibt die C-Library das Ergebnis
		an die Anwendung zurück.</para>
		
		<para>Dieses NSS-Interface bietet eine einfache Möglichkeit, Winbind in das Betriebssystem
		einzuhängen. Alles, was getan werden muß, ist <filename>libnss_winbind.so</filename> in 
		<filename>/lib/</filename> zu plazieren, dann <quote>winbind</quote> an der richtigen
		Stelle in <filename>/etc/nsswitch.conf</filename> hinzuzufügen. Die C-Library wird dann
		Winbind zur Namensauflösung aufrufen.</para>
	</sect2>
	
	<sect2>
		<title>Pluggable Authentication Modules</title>
		
		<para>Pluggable Authentication Modules, auch als PAM bekannt, 
		sind ein System zum Abstrahieren von Authentifikations- und Authorisations-Technologien.
		Mit einem PAM-Modul ist es möglich, verschiedene Authentifikations-Methoden für verschiedene
		Systemanwendungen zu spezifizieren, ohne diese Anwendungen neu kompilieren zu müssen.
		PAM ist weiters hilfreich beim Implementieren einer speziellen Richtlinie für die
		Authorisation. Zum Beispiel könnte ein System-Administrator Konsolen-Logins nur den Benutzern
		erlauben, die in der lokalen Passwort-Datei gespeichert sind, und Netzwerk-Logins nur Benutzern,
		die in einer NIS-Datenbank gespeichert sind.</para>

                <para>Winbind nutzt das Authentifikations-Management- und Passwort-Management-PAM-Interface, um
		Windows-NT-Benutzer in ein UNIX-System zu integrieren. Das erlaubt es Windows-NT-Benutzern, sich
		an einer UNIX-Maschine anzumelden, und gegen einen passenden PDC authentifiziert zu werden. Diese
		Benutzer können außerdem ihre Passwörter ändern, und diese Veränderung findet direkt auf dem PDC
		statt.</para>

                <para>
		PAM wird über die Bereitstellung von Steuerdateien im Verzeichnis	
		<filename>/etc/pam.d/</filename> gesteuert. für jeden Dienst, der Authentifikation
                benötigt. Wenn eine Authentifikations-Anfrage von einer Anwendung gestellt wird, liest der
		PAM-Code in der C-Library aus dieser Steuerdatei, welche Module für diese Authentifikation
		geladen werden müssen, und in welcher Reihenfolge. Das Interface vereinfacht das
		Hinzufügen neuer Authentifikations-Dienste zu Winbind. Alles, was getan werden muß, ist
		das Kopieren des Moduls <filename>pam_winbind.so</filename> in das Verzeichnis 
		<filename>/lib/security/</filename>, und daß die Steuerdateien der relevanten Dienste
		aktualisiert werden, um Authentifikation via Winbind zu erlauben. Sehen Sie die PAM-Dokumentation
		in <link linkend="pam"/> für mehr Informationen dazu.</para>
	</sect2>
	
	
	<sect2>
		<title>Zuordnung von Benutzer- und Gruppen-IDs</title>
		
		<para>Wenn ein Benutzer oder eine Gruppe unter Windows NT/200x angelegt wird, wird ihm/ihr ein
		<quote>numerical relative identifier</quote> (RID) zugeordnet. Das ist etwas anders als in UNIX,
		welches einen Nummernbereich für Benutzer und denselben Nummernbereich für Gruppen hat.
		Es ist die Aufgabe von Winbind, die RIDs in UNIX-IDs zu konvertieren und vice versa. Wenn Winbind
		konfiguriert wird, wird ihm ein Teil des UNIX-Benutzer-ID-Namensraums und ein Teil des
		UNIX-Gruppen-ID-Namensraums zugewiesen, um darin die Windows NT Benutzer und Gruppen zu 
		speichern. Wenn ein Windows-NT-Benutzer zum ersten Mal aufgelöst werden soll, wird ihm die
		nächste freie UNIX-ID aus dem Bereich zugewiesen. Der selbe Prozess wird für Windows-NT-Gruppen
		angewendet. Im Laufe der Zeit hat Winbind dann alle Windows-NT-Benutzer und -Gruppen
		entsprechenden UNIX-Benutzer und -Gruppen zugewiesen.</para>

		<para>Die Ergebnisse dieser Zuordnung wird dauerhaft in einer ID-Zuordnungs-Datenbank
		abgelegt (gespeichert in einer tdb-Datenbank). Das gewährleistet die konsistente Zuordnung
		von RIDs auf UNIX-IDs.</para>
	</sect2>
	
	
	<sect2>
		<title>Das Cachen der Resultate</title>

		<para>
<indexterm><primary>SAM</primary></indexterm>
		Ein aktives System kann sehr viele Anfragen nach Benutzer- und Gruppen-Namen generieren.
		Um die Netzwerklast dieser Anfragen zu reduzieren, verwendet Winbind ein Caching-Schema, das
		auf der SAM-Sequenznummer beruht, die von NT-Domänen-Controllern zur Verfügung gestellt wird.
		Benutzer- oder Gruppen-Information, die von einem PDC zurückgegeben wird, wird von Winbind 
		gemeinsam mit einer auch vom PDC vergebenen Sequenznummer gepuffert. Diese Sequenznummer
		wird von Windows NT erhöht, wann immer irgendeine Benutzer- und Gruppen-Information
		verändert wird. Wenn ein gepufferter Eintrag veraltet ist, wird die Sequenznummer vom PDC
		abgefragt, und mit der Sequenznummer des Cache-Eintrags verglichen. Stimmen die beiden nicht
		überein, wird die gepufferte Information verworfen, und die aktuelle Information direkt
		vom PDC abgefragt.</para>
	</sect2>
</sect1>


<sect1>
	<title>Installation und Konfiguration</title>
	
<sect2>
<title>Einführung</title>

<para>
Dieser Abschnitt beschreibt die Abläufe, die notwendig sind, um Winbind in Betrieb zu nehmen. Winbind kann
Zugriffs- und Authentifikations-Verwaltung für Windows-Domänen-Benutzer zur Verfügung stellen, durch Verwendung
eines Windows NT oder Windows 200x PDC, für normale Dienste wie telnet und ftp genauso wie für Samba.
</para>

<itemizedlist>
<listitem>
	<para>
	<emphasis>Warum sollte ich das tun?</emphasis>
	</para>
	
	<para>Dies erlaubt dem Samba-Administrator, auf dem Authentifikations-Mechanismus am Windows NT/200x PDC
	für die Authentifikation von Domänen-Mitgliedern aufzubauen. Windows NT/200x-Benutzer müssen nicht länger
	Konten auf dem Samba-Server haben.
	</para>
</listitem>

<listitem>
	<para>
	<emphasis>Wer sollte dieses Dokument lesen?</emphasis>
	</para>
	
	<para>
	Dieses Dokument ist für System-Administratoren gedacht. Wenn Sie Samba auf einem Datei-Server
	implementieren und Sie wollen (ziemlich einfach) bestehende Windows NT/200x-Benutzer von Ihrem
	PDC auf dem Samba-Server integrieren, ist dieses Dokument das richtige für Sie.
	</para>
</listitem>
</itemizedlist>
</sect2>


<sect2>
<title>Anforderungen</title>

<para>
Wenn Sie eine Samba-Konfigurationsdatei haben, die Sie momentan benutzen, 
<emphasis>SICHERN SIE DIE DATEI!</emphasis>
Wenn Ihr System bereits PAM verwendet <emphasis>SICHERN SIE</emphasis> die Inhalte des Verzeichnisses
<filename>/etc/pam.d</filename>! Wenn Sie noch keine Bootdiskette angelegt haben, 
<emphasis>ERSTELLEN SIE JETZT EINE!</emphasis>
</para>

<para>
Das Herumdrehen an den PAM-Konfigurationsdateien kann es nahezu unmöglich machen, sich an Ihrer Maschine
anzumelden. Darum wollen Sie imstande sein, im <quote>single user mode</quote> Ihre Maschine neu zu booten, und
Ihr Verzeichnis <filename>/etc/pam.d</filename> in den Urzustand zu versetzen, wenn Sie irgendwie frustriert
mit Ihren Fortschritten sind.
</para>

<para>
Die letzte Version von Samba-3 beinhaltet einen funktionierenden Winbind-Daemon. Bitte besuchen Sie die
<ulink url="http://samba.org/">Samba Website</ulink>, oder, noch besser, Ihren nächsten Samba-Mirror, um
Anleitungen zum Download des Quellcodes zu erhalten.
</para>

<para>
Um Domänen-Benutzern die Fähigkeit zu verleihen, auf Samba-Freigaben und -Dateien zuzugreifen, wie auch
auf möglicherweise andere von Ihrer Samba-Maschine angebotenen Dienste, muß PAM auf dieser Maschine ordnungsgemäß
auf dieser Maschine eingerichtet sein. Um die Winbind-Module zu kompilieren, sollten Sie zumindest die 
PAM-Entwickler-Bibliotheken auf Ihrem System installiert haben. Bitte sehen Sie dazu auch die PAM-Website
<ulink url="http://www.kernel.org/pub/linux/libs/pam/"/>.
</para>
</sect2>

<sect2>
<title>Testen</title>

<para>
Bevor Sie beginnen, ist es möglicherweise das Beste, all die Samba-bezogenen Daemons zu killen, die auf Ihrem
Server laufen. Killen Sie all die &smbd;, &nmbd;, und &winbindd; -Prozesse, die da laufen. Um PAM zu verwenden,
stellen Sie sicher, daß Sie das Standard-PAM-Paket haben, das die Verzeichnis-Struktur 
<filename>/etc/pam.d</filename> unterstützt, das die PAM-Module beinhaltet, die von PAM-fähigen Diensten
verwendet werden, einige PAM-Bibliotheken, und die Einträge in <filename>/usr/doc</filename> und
<filename>/usr/man</filename> für PAM. Winbind kann besser in Samba kompiliert werden, wenn auch das Paket
pam-devel installiert ist. Dieses Paket beinhaltet die Header-Dateien, die zum Kompilieren PAM-fähiger
Anwendungen benötigt werden.
</para>

<sect3>
<title>Konfigurieren Sie <filename>nsswitch.conf</filename> und die 
Winbind-Bibliotheken unter Linux und Solaris</title>

<para>
PAM ist eine Standard-Komponente der meisten aktuellen UNIX/Linux-Systeme. Unglücklicherweise installieren
wenige Systeme die <filename>pam-devel</filename>-Bibliotheken, die benötigt werden, um ein PAM-fähiges
Samba zu kompilieren. Zusätzlich kann Samba-3 automatisch die Winbind-Dateien in die benötigten Verzeichnisse
auf Ihrem System installieren, bevor Sie also zu tief graben, prüfen Sie zuerst, ob die nachfolgende
Konfiguration wirklich notwendig ist. Es kann sein, daß Sie nur <filename>/etc/nsswitch.conf</filename>
konfigurieren müssen.
</para>

<para>
Die Bibliotheken zur Ausführung des &winbindd;-Daemons durch nsswitch müssen in die entsprechenden
Verzeichnisse kopiert werden:
</para>

<para>
<screen>
&rootprompt;<userinput>cp ../samba/source/nsswitch/libnss_winbind.so /lib</userinput>
</screen>
</para>

<para>
Ich habe weiters herausgefunden, daß der folgende Symlink angelegt werden muß:
</para>

<para>
&rootprompt; <userinput>ln -s /lib/libnss_winbind.so /lib/libnss_winbind.so.2</userinput>
</para>

<para>Und im Falle von Sun Solaris:</para>
<screen>
&rootprompt;<userinput>ln -s /usr/lib/libnss_winbind.so /usr/lib/libnss_winbind.so.1</userinput>
&rootprompt;<userinput>ln -s /usr/lib/libnss_winbind.so /usr/lib/nss_winbind.so.1</userinput>
&rootprompt;<userinput>ln -s /usr/lib/libnss_winbind.so /usr/lib/nss_winbind.so.2</userinput>
</screen>

<para>
Nun müssen Sie als root die Datei <filename>/etc/nsswitch.conf</filename> editieren, um Benutzer- und 
Gruppen-Einträge vom &winbindd;-Daemon sichtbar zu machen. Mein Eintrag in 
<filename>/etc/nsswitch.conf</filename> sieht nach dem Editieren so aus:
</para>

<para><programlisting>
	passwd:     files winbind
	shadow:     files 
	group:      files winbind
</programlisting></para>

<para>	
Die vom Daemon <command>winbindd</command> benötigten Bibliotheken werden automatisch in den Cache von
<command>ldconfig</command> eingetragen, sobald Ihr System das nächste Mal neu startet, aber es geht
schneller (und ohne Reboot), wenn Sie das händisch tun:
</para>

<para>
&rootprompt;<userinput>/sbin/ldconfig -v | grep winbind</userinput>
</para>

<para>
Dies macht <filename>libnss_winbind</filename> für winbindd verfügbar und gibt eine Bestätigung zurück.
</para>

</sect3>

<sect3>
<title>NSS Winbind auf AIX</title>

<para>(Dieser Abschnitt ist nur für jene, die AIX betreiben.)</para>

<para>
Das Winbind AIX Identifikations-Modul wird als <filename>libnss_winbind.so</filename> im
nsswitch-Verzeichnis des Samba-Quellcodes kompiliert. Diese Datei kann ins Verzeichnis 
<filename>/usr/lib/security</filename> kopiert werden, und die AIX-Namens-Konvention würde sagen, daß
es WINBIND benannt werden sollte. Ein Absatz wie der folgende:
</para>

<para><programlisting>
WINBIND:
        program = /usr/lib/security/WINBIND
        options = authonly
</programlisting></para>

<para>
kann dann zu <filename>/usr/lib/security/methods.cfg</filename> hinzugefügt werden. Dieses Modul unterstützt
nur Identifikation, aber es gibt Erfolgsmeldungen über die Verwendung des Standard-Winbind-PAM-Modules für
Authentifikation. Seien Sie vorsichtig mit dem Konfigurieren ladbarer Authentifikationsmodule, da Sie es damit
unmöglich machen können, sich am System anzumelden. Mehr Informationen zur AIX Authentifikationsmodul-API finden
Sie unter <quote>Kernel Extensions and Device Support Programming Concepts for AIX</quote><ulink
url="http://publibn.boulder.ibm.com/doc_link/en_US/a_doc_lib/aixprggd/kernextc/sec_load_mod.htm">.
Chapter 18. Loadable Authentication Module Programming Interface</ulink>, und mehr Informationen zur Administration
der Module finden Sie unter
<ulink
url="http://publibn.boulder.ibm.com/doc_link/en_US/a_doc_lib/aixbman/baseadmn/iandaadmin.htm"> <quote>System
Management Guide: Operating System and Devices.</quote></ulink>
</para>
</sect3>

<sect3>
<title>Das Konfigurieren von smb.conf</title>

<para>
Einige Parameter werden in der Datei &smb.conf; benötigt, um das Verhalten von &winbindd; zu beeinflussen.
Diese werden in der <citerefentry><refentrytitle>winbindd</refentrytitle> 
<manvolnum>8</manvolnum></citerefentry> manpage
detaillierter beschrieben. Meine &smb.conf;, wie in <link linkend="winbindcfg"/> gezeigt, wurde verändert, um
die notwendigen Einträge im Abschnitt [global] zu inkludieren.
</para>

<para><smbconfexample id="winbindcfg">
		<title>smb.conf für Winbind</title>
<smbconfsection>[global]</smbconfsection>
     &lt;...&gt;
<smbconfcomment> Trenne Domäne und Benutzername durch '+', wie DOMÄNE+benutzername</smbconfcomment>
<smbconfoption><name>winbind separator</name><value>+</value></smbconfoption>
<smbconfcomment> Verwende UIDs von 10000 bis 20000 für Domänen-Benutzer</smbconfcomment>
<smbconfoption><name>idmap uid</name><value>10000-20000</value></smbconfoption>
<smbconfcomment> Verwende GIDs von 10000 bis 20000 für Domänen-Gruppen</smbconfcomment>
<smbconfoption><name>idmap gid</name><value>10000-20000</value></smbconfoption>
<smbconfcomment> Erlaube die Aufzählung von winbind-Benutzern und -Gruppen</smbconfcomment>
<smbconfoption><name>winbind enum users</name><value>yes</value></smbconfoption>
<smbconfoption><name>winbind enum groups</name><value>yes</value></smbconfoption>
<smbconfcomment> Gib winbind-Benutzern eine echte Shell (nur benötigt, wenn diese telnet-Zugriff haben)</smbconfcomment>
<smbconfoption><name>template homedir</name><value>/home/winnt/%D/%U</value></smbconfoption>
<smbconfoption><name>template shell</name><value>/bin/bash</value></smbconfoption>
</smbconfexample></para>

</sect3>


<sect3>
<title>Den Samba-Server der Domäne des PDCs anschliessen</title>

<para>
Geben Sie den folgenden Befehl ein, um den Samba-Server der Domäne des PDCs anzuschliessen, wobei 
<replaceable>DOMÄNE</replaceable> der Name Ihrer Windows-Domäne ist, und <replaceable>Administrator</replaceable>
der Name eines Domänen-Benutzers mit administrativen Rechten in der Domäne.
</para>
	

<para>
&rootprompt;<userinput>/usr/local/samba/bin/net rpc join -S PDC -U Administrator</userinput>
</para>


<para>
Die richtige Antwort auf diesen Befehl sollte sein: <quote>Joined the domain 
<replaceable>DOMÄNE</replaceable></quote>. 
</para>

</sect3>

<sect3>
<title>Starten und Testen des <command>winbindd</command>-Daemons</title>

<para>
Sie wollen eventuell Ihr Samba-Startskript verändern, um den winbindd-Daemon automatisch aufzurufen, wenn
die anderen Teile von Samba starten, aber es ist möglich, zuerst nur den Winbind-Teil alleine zu testen.
Um den Winbind-Dienst zu starten, geben Sie folgenden Befehl als root ein:
</para>
	
<para>
&rootprompt;<userinput>/usr/local/samba/bin/winbindd</userinput>
</para>

<note><para>
Obiges geht davon aus, daß Samba im Verzeichnis <filename>/usr/local/samba</filename> installiert wurde.
Sie müssen nach dem Pfad Ihrer Samba-Dateien suchen, falls dies auf Ihrem System nicht der Pfad zu 
<command>winbindd</command> ist.
</para></note>

<para>
Winbindd kann mittlerweile auch im <quote>dual daemon mode</quote> laufen. Das läßt ihn in Form von zwei
Prozessen laufen. Der erste beantwortet alle Anfragen aus dem Cache und beschleunigt damit die Antworten an
die Clients. Der andere Prozess aktualisiert den Cache für die Anfrage, die der erste Prozess gerade
beantwortet hat. Der Vorteil all dessen ist, daß die Antworten schneller sind und trotzdem richtig bleiben.
Sie aktivieren diesen Modus mittels der Option <option>-B</option> auf der Befehlszeile:
</para>

<para>
&rootprompt;<userinput>/usr/local/samba/bin/winbindd -B</userinput>
</para>

<para>
Ich bin immer paranoid und gehe sicher, daß der Daemon wirklich läuft.
</para>

<para>
&rootprompt;<userinput>ps -ae | grep winbindd</userinput>
</para>
<para>
Dieser Befehl sollte eine Ausgabe wie diese erzeugen, wenn der Daemon läuft, sollten Sie etwas wie das hier 
sehen:
</para>
<screen>
3025 ?        00:00:00 winbindd
</screen>

<para>
Nun zum Echt-Test, versuchen Sie, Informationen über die Benutzer auf Ihrem PDC zu erhalten:
</para>

<para>
&rootprompt;<userinput>/usr/local/samba/bin/wbinfo -u</userinput>
</para>

<para>	
Dies sollte eine Liste Ihrer Windows-Benutzer auf Ihrem PDC zurückgeben. Ich bekomme zum Beispiel das:
</para>

<para><screen>
	CEO+Administrator
	CEO+burdell
	CEO+Guest
	CEO+jt-ad
	CEO+krbtgt
	CEO+TsInternetUser
</screen></para>

<para>
Offensichtlich habe ich meine Domäne <quote>CEO</quote> benannt, und mein 
<smbconfoption><name>winbind separator</name></smbconfoption> ist <quote>+</quote>.
</para>

<para>
Sie können dasselbe tun, um Gruppeninformationen vom PDC zu erhalten:
</para>

<para><screen>
&rootprompt;<userinput>/usr/local/samba/bin/wbinfo -g</userinput>
	CEO+Domain Admins
	CEO+Domain Users
	CEO+Domain Guests
	CEO+Domain Computers
	CEO+Domain Controllers
	CEO+Cert Publishers
	CEO+Schema Admins
	CEO+Enterprise Admins
	CEO+Group Policy Creator Owners
</screen></para>

<para>
Die Funktion <command>getent</command> kann jetzt dafür verwendet werden, Gesamt-Listen von sowohl lokalen wie
auch PDC-Benutzern und -Gruppen zu erhalten. Versuchen Sie folgenden Befehl:
</para>

<para>
&rootprompt;<userinput>getent passwd</userinput>
</para>
	
<para>
Sie sollten eine Liste erhalten, die wie Ihre Datei <filename>/etc/passwd</filename> aussieht, gefolgt von den
Domänen-Benutzern mit ihren neuen UIDs, GIDs, home-Verzeichnissen und Standard-Shells.
</para>

<para>
Dasselbe kann für Gruppen geschehen:
</para>

<para>
&rootprompt;<userinput>getent group</userinput>
</para>

</sect3>


<sect3>
<title>Die init.d-Startskripts anpassen</title>

<sect4>
<title>Linux</title>

<para>
Der &winbindd;-Daemon muß starten, nachdem die &smbd;- und &nmbd;-Daemons laufen. Um diese Forderung zu
erfüllen, müssen Sie die Start-Skripts Ihres Systems anpassen. Sie finden sie in Red Hat Linux unter
<filename>/etc/init.d/smb</filename> und in Debian Linux unter 
<filename>/etc/init.d/samba</filename>. Editieren Sie Ihr Skript, um den &winbindd;-Daemon in der richtigen
Sequenz zu starten. Mein Start-Skript startet &smbd;, &nmbd;, und &winbindd; direkt aus dem Verzeichnis
<filename>/usr/local/samba/bin</filename>. Die Funktion <command>start</command> in diesem Skript sieht so aus:
</para>

<para><programlisting>
start() {
        KIND="SMB"
        echo -n $"Start des Diensts $KIND: "
        daemon /usr/local/samba/bin/smbd $SMBDOPTIONS
        RETVAL=$?
        echo
        KIND="NMB"
        echo -n $"Start des Diensts $KIND: "
        daemon /usr/local/samba/bin/nmbd $NMBDOPTIONS
        RETVAL2=$?
        echo
        KIND="Winbind"
        echo -n $"Start des Diensts $KIND: "
        daemon /usr/local/samba/bin/winbindd
        RETVAL3=$?
        echo
        [ $RETVAL -eq 0 -a $RETVAL2 -eq 0 -a $RETVAL3 -eq 0 ] &amp;&amp; \
		touch /var/lock/subsys/smb || RETVAL=1
        return $RETVAL
}
</programlisting></para>

<para>Wenn Sie winbindd im <quote>dual daemon mode</quote> ausführen wollen, ersetzen Sie die Zeile:
<programlisting>
        daemon /usr/local/samba/bin/winbindd
</programlisting>

in obigem Beispiel durch:

<programlisting>
        daemon /usr/local/samba/bin/winbindd -B
</programlisting>.
</para>

<para>
Die Funktion <command>stop</command> hat einen korrespondierenden Eintrag, um die Dienste herunterzufahren, und
sieht so aus:
</para>

<para><programlisting>
stop() {
        KIND="SMB"
        echo -n $"Stoppen des Diensts $KIND: "
        killproc smbd
        RETVAL=$?
        echo
        KIND="NMB"
        echo -n $"Stoppen des Diensts $KIND: "
        killproc nmbd
        RETVAL2=$?
        echo
        KIND="Winbind"
        echo -n $"Stoppen des Diensts $KIND: "
        killproc winbindd
        RETVAL3=$?
        [ $RETVAL -eq 0 -a $RETVAL2 -eq 0 -a $RETVAL3 -eq 0 ] &amp;&amp; \
		 rm -f /var/lock/subsys/smb
        echo ""
        return $RETVAL
}
</programlisting></para>
</sect4>

<sect4>
<title>Solaris</title>

<para>
Winbind funktioniert nicht unter Solaris 9, sehen Sie dazu <link linkend="winbind-solaris9"/>.
</para>

<para>
Unter Solaris müssen Sie das Start-Skript <filename>/etc/init.d/samba.server</filename> editieren. Es startet
üblicherweise nur smbd und nmbd, sollte jetzt aber auch winbindd starten. Wenn Sie Samba in
<filename>/usr/local/samba/bin</filename> installiert haben, sollte die Datei etwas wie das hier enthalten:
</para>

<para><programlisting>
	##
	## samba.server
	##

	if [ ! -d /usr/bin ]
	then                    # /usr nicht gemountet 
		exit
	fi

	killproc() {            # kill den/die angegebenen Prozess(e) 
		pid=`/usr/bin/ps -e |
		     /usr/bin/grep -w $1 |
		     /usr/bin/sed -e 's/^  *//' -e 's/ .*//'`
		[ "$pid" != "" ] &amp;&amp; kill $pid
	}
	 
	# Starte/stoppe die für den Samba-Server erforderlichen Prozesse


	case "$1" in

	'start')
	#
	# Editieren Sie diese Zeilen passend zu Ihrer Installation 
	# (Pfade, Arbeitsgruppe, Host)
	#
	echo Starten von SMBD
	   /usr/local/samba/bin/smbd -D -s \
		/usr/local/samba/smb.conf

	echo Starten von NMBD
	   /usr/local/samba/bin/nmbd -D -l \
		/usr/local/samba/var/log -s /usr/local/samba/smb.conf

	echo Starten von WINBINDD
	   /usr/local/samba/bin/winbindd
	   ;;

	'stop')
	   killproc nmbd
	   killproc smbd
	   killproc winbindd
	   ;;

	*)
	   echo "Usage: /etc/init.d/samba.server { start | stop }"
	   ;;
	esac
</programlisting></para>

<para>
Auch hier gilt, wenn Sie Samba im Again, if you would like to run Samba in <quote>dual daemon mode</quote>
ausführen wollen, ersetzen Sie:
<programlisting>
	/usr/local/samba/bin/winbindd
</programlisting>
in obigem Skript durch:
<programlisting>
	/usr/local/samba/bin/winbindd -B
</programlisting>
</para>

</sect4>

<sect4>
<title>Neustart</title>
<para>
Wenn Sie an diesem Punkt die Daemons &smbd;, &nmbd;, und &winbindd; neu starten, sollten Sie sich als 
Domänen-Mitglied mit dem Samba-Server verbinden können, genauso, als ob Sie ein lokaler Benutzer wären.
</para>
</sect4>
</sect3>

<sect3>
<title>Winbind und PAM konfigurieren</title>

<para>
Wenn Sie es bis hierher geschafft haben, wissen Sie, daß <command>winbindd</command> und Samba zusammenarbeiten.
Wenn Sie Winbind dazu verwenden wollen, Authentifikation für andere Dienste anzubieten, lesen Sie weiter.
Die PAM-Konfigurationsdateien müssen in diesem Schritt verändert werden. (Haben Sie auch nicht vergessen, Backups
der Dateien in <filename>/etc/pam.d</filename> anzulegen? Wenn doch, sichern Sie sie jetzt.)
</para>

<para>
Sie brauchen ein PAM-Modul, um winbindd mit diesen anderen Diensten zu verwenden. Dieses Modul wird im
Verzeichnis <filename>../source/nsswitch</filename> kompiliert, durch Ausführen dieses Befehls:
</para>

<para>
&rootprompt;<userinput>make nsswitch/pam_winbind.so</userinput>
</para>

<para>
im Verzeichnis <filename>../source</filename>. Die Datei
<filename>pam_winbind.so</filename> sollte zu Ihren anderen PAM-Sicherheits-Modulen kopiert werden.
Auf meinem RedHat-System war das das Verzeichnis <filename>/lib/security</filename>. Unter Solaris liegen die
PAM-Sicherheits-Module in <filename>/usr/lib/security</filename>.
</para>

<para>
&rootprompt;<userinput>cp ../samba/source/nsswitch/pam_winbind.so /lib/security</userinput>
</para>

<sect4>
<title>Linux/FreeBSD-spezifische PAM-Konfiguration</title>

<para>
Die Datei <filename>/etc/pam.d/samba</filename> muß nicht verändert werden. Ich habe diese Datei einfach so
belassen, wie Sie war:
</para>


<para><programlisting>
	auth    required        /lib/security/pam_stack.so service=system-auth
	account required        /lib/security/pam_stack.so service=system-auth
</programlisting></para>

<para>
Die anderen Dienste, die ich modifiziert habe, um die Verwendung von Winbind als Authentifikations-Dienst zu
erlauben, waren der normale Konsolen-Login (oder eine Terminal-Session), telnet-logins, und der ftp-Dienst. Um
diese Dienste zu aktivieren, müssen Sie zuerst die Einträge in <filename>/etc/xinetd.d</filename> (oder
<filename>/etc/inetd.conf</filename>) ändern. Red Hat Linux ab Version 7.1 verwendet die neue xinetd.d-Struktur,
in diesem Fall müssen Sie die Zeilen in <filename>/etc/xinetd.d/telnet</filename> und 
<filename>/etc/xinetd.d/wu-ftp</filename> ändern:
</para>

<para><programlisting>
	enable = no
</programlisting>
wird zu:
<programlisting>
	enable = yes
</programlisting></para>

<para>	
Damit der ftp-Dienst ordnungsgemäß arbeitet, müssen Sie auch die einzelnen Verzeichnisse für die 
Domänen-Benutzer auf dem Server angelegt haben, oder das home-Verzeichnis für die Domänen-Benutzer auf ein
allgemeines, gemeinsames Verzeichnis für alle Domänen-Benutzer gesetzt haben. Das kann einfach durch Setzen
des globalen Eintrags <smbconfoption><name>template homedir</name></smbconfoption> in &smb.conf; geschehen.
</para>

<para>
Die Datei <filename>/etc/pam.d/ftp</filename> kann verändert werden, um ftp-Zugriff in derselben Art wie
Samba-Zugriff zu erlauben. Meine Datei <filename>/etc/pam.d/ftp</filename> wurde so verändert:
</para>

<para><programlisting>
auth       required     /lib/security/pam_listfile.so item=user sense=deny \
	 file=/etc/ftpusers onerr=succeed
auth       sufficient   /lib/security/pam_winbind.so
auth       required     /lib/security/pam_stack.so service=system-auth
auth       required     /lib/security/pam_shells.so
account    sufficient   /lib/security/pam_winbind.so
account    required     /lib/security/pam_stack.so service=system-auth
session    required     /lib/security/pam_stack.so service=system-auth
</programlisting></para>

<para>
Die Datei <filename>/etc/pam.d/login</filename> kann fast genauso verändert werden, sie sieht jetzt so aus:
</para>

<para><programlisting>
auth       required     /lib/security/pam_securetty.so
auth       sufficient   /lib/security/pam_winbind.so
auth       sufficient   /lib/security/pam_UNIX.so use_first_pass
auth       required     /lib/security/pam_stack.so service=system-auth
auth       required     /lib/security/pam_nologin.so
account    sufficient   /lib/security/pam_winbind.so
account    required     /lib/security/pam_stack.so service=system-auth
password   required     /lib/security/pam_stack.so service=system-auth
session    required     /lib/security/pam_stack.so service=system-auth
session    optional     /lib/security/pam_console.so
</programlisting></para>

<para>
In diesem Fall habe ich die Zeilen <programlisting>auth sufficient /lib/security/pam_winbind.so</programlisting>
wie zuvor hinzugefügt, aber auch davor <programlisting>required pam_securetty.so</programlisting> eingefügt,
um root-Logins übers Netzwerk zu verbieten. Ich habe auch eine Zeile
<programlisting>sufficient /lib/security/pam_unix.so use_first_pass</programlisting>
nach der <command>winbind.so</command>-Zeile eingefügt, um die nervenden Doppel-Aufforderungen nach dem Passwort
loszuwerden.
</para>

</sect4>

<sect4>
<title>Solaris-spezifische Konfiguration</title>

<para>
Die Datei <filename>/etc/pam.conf</filename> muß geändert werden. Ich habe diese Datei geändert, so daß meine
Domänen-Benutzer sich sowohl lokal wie auch über telnet anmelden können.
Sie können die Datei <filename>pam.conf</filename> auf Ihre Bedürfnisse hin zuschneiden, aber seien Sie sich
dessen sicher, was Sie tun, da diese Änderungen im schlimmsten Fall Ihre Maschine in einem nahezu 
nicht-startfähigen Zustand zurücklassen. Folgendes sind meine Änderungen:
</para>

<para><programlisting>
#
#ident "@(#)pam.conf 1.14 99/09/16 SMI"
#
# Copyright (c) 1996-1999, Sun Microsystems, Inc.
# All Rights Reserved.
#
# PAM configuration
#
# Authentication management
#
login   auth required   /usr/lib/security/pam_winbind.so
login auth required  /usr/lib/security/$ISA/pam_UNIX.so.1 try_first_pass 
login auth required  /usr/lib/security/$ISA/pam_dial_auth.so.1 try_first_pass 
#
rlogin  auth sufficient /usr/lib/security/pam_winbind.so
rlogin  auth sufficient /usr/lib/security/$ISA/pam_rhosts_auth.so.1
rlogin auth required  /usr/lib/security/$ISA/pam_UNIX.so.1 try_first_pass
#
dtlogin auth sufficient /usr/lib/security/pam_winbind.so
dtlogin auth required  /usr/lib/security/$ISA/pam_UNIX.so.1 try_first_pass
#
rsh auth required /usr/lib/security/$ISA/pam_rhosts_auth.so.1
other   auth sufficient /usr/lib/security/pam_winbind.so
other auth required /usr/lib/security/$ISA/pam_UNIX.so.1 try_first_pass
#
# Account management
#
login   account sufficient      /usr/lib/security/pam_winbind.so
login account requisite /usr/lib/security/$ISA/pam_roles.so.1 
login account required /usr/lib/security/$ISA/pam_UNIX.so.1 
#
dtlogin account sufficient      /usr/lib/security/pam_winbind.so
dtlogin account requisite /usr/lib/security/$ISA/pam_roles.so.1 
dtlogin account required /usr/lib/security/$ISA/pam_UNIX.so.1 
#
other   account sufficient      /usr/lib/security/pam_winbind.so
other account requisite /usr/lib/security/$ISA/pam_roles.so.1 
other account required /usr/lib/security/$ISA/pam_UNIX.so.1 
#
# Session management
#
other session required /usr/lib/security/$ISA/pam_UNIX.so.1 
#
# Password management
#
#other   password sufficient     /usr/lib/security/pam_winbind.so
other password required /usr/lib/security/$ISA/pam_UNIX.so.1 
dtsession auth required /usr/lib/security/$ISA/pam_UNIX.so.1
#
# Support for Kerberos V5 authentication (uncomment to use Kerberos)
#
#rlogin auth optional /usr/lib/security/$ISA/pam_krb5.so.1 try_first_pass
#login auth optional /usr/lib/security/$ISA/pam_krb5.so.1 try_first_pass
#dtlogin auth optional /usr/lib/security/$ISA/pam_krb5.so.1 try_first_pass
#other auth optional /usr/lib/security/$ISA/pam_krb5.so.1 try_first_pass
#dtlogin account optional /usr/lib/security/$ISA/pam_krb5.so.1
#other account optional /usr/lib/security/$ISA/pam_krb5.so.1
#other session optional /usr/lib/security/$ISA/pam_krb5.so.1
#other password optional /usr/lib/security/$ISA/pam_krb5.so.1 try_first_pass
</programlisting></para>

<para>
Ich habe auch hier eine Zeile <parameter>try_first_pass</parameter> nach der Zeile mit 
<filename>winbind.so</filename>
eingefügt, um die Doppel-Aufforderungen nach den Passwörtern loszuwerden.
</para>

<para>
Jetzt starten Sie Samba neu, und versuchn, sich über die jeweilige Anwendung zu verbinden, die Sie in
pam.conf konfiguriert haben.
</para>

</sect4>

</sect3>

</sect2>

</sect1>

<sect1>
<title>Zusammenfassung</title>

<para>Das Winbind-System erlaubt unter Verwendung des Name Service 
Switch, Pluggable Authentication Modules, und entsprechender 
Microsoft RPC-Aufrufe nahtlose Integration von Microsoft Windows NT Domänen-Benutzern in ein UNIX-System.
Das Ergebnis ist eine grosse Verringerung des administrativen Aufwands, der zum Betrieb eines gemischten
UNIX- und NT-Netzwerks erforderlich ist.</para>

</sect1>

<sect1>
<title>Gängige Fehler</title>
	
	<para>Winbind hat eine Anzahl von Einschränkungen in der derzeit veröffentlichten Version. Wir hoffen,
	diese in zukünftigen Versionen beseitigen zu können:
	</para>

	<itemizedlist>
		<listitem><para>Winbind ist derzeit nur für die Betriebssysteme
		Linux, Solaris, AIX, und IRIX verfügbar, obwohl Portierungen auf andere Betriebssysteme
		sicherlich möglich sind. Um solche Portierungen zu ermöglichen, ist es erforderlich, daß die
		C-Library des jeweiligen Betriebssystems die Systeme Name Service Switch und Pluggable 
		Authentication Modules unterstützt. Das wird immer gängiger, da NSS und PAM immer mehr
		Unterstützung von UNIX-Herstellern gewinnen.</para></listitem>
		
		<listitem><para>Die Zuordnungen von Windows NT RIDs auf UNIX IDs wird nicht
		algorithmisch durchgeführt, und hängt von der Reihenfolge ab, in der die nicht-zugeordneten
		Benutzer/Gruppen von Winbind gesehen werden. Es kann schwierig werden, die 
		RID-zu-UNIX-ID-Zuordnungen wiederherzustellen, wenn die Datei, die diese Information enthält,
		beschädigt oder zerstört ist.</para>
                </listitem>
		
		<listitem><para>Derzeit berücksichtigt das Winbind-PAM-Modul die möglichen Zeitbeschränkungen
		nicht, die für Windows NT Domänen-Benutzer gesetzt sein können 
		(Workstation- und Login-Zeitbeschränkungen), diese muß der PDC erzwingen.</para></listitem>
	</itemizedlist>

	<sect2>
	<title>NSCD Problem Warnung</title>

	<?latex \nopagebreak ?>

	<warning><para>
	Führen Sie unter keinen Umständen <command>nscd</command> auf irgendeinem System aus, auf dem
	<command>winbindd</command> läuft.
	</para></warning>

	<para>
	Wenn <command>nscd</command> auf dem UNIX/Linux-System läuft, wird es selbst dann, wenn NSSWITCH
	korrekt konfiguriert ist, nicht möglich sein, Namen von Domänen-Benutzern und -Gruppen aufzulösen.
	</para>

	</sect2>

	<sect2>
	<title>Winbind löst keine Benutzer- und Gruppen-Namen auf</title>

	<para><quote>
	Meine Datei &smb.conf; ist ordnungsgemäß konfiguriert. Ich habe
	<smbconfoption><name>idmap uid</name><value>12000</value></smbconfoption>, 
	und <smbconfoption><name>idmap gid</name><value>3000-3500</value></smbconfoption> angegeben,
	und <command>winbind</command> läuft. Wenn ich folgendes tue, funktioniert es prächtig.
	</quote></para>

<para><screen>
&rootprompt;<userinput>wbinfo -u</userinput>
MITTELERDE+maryo
MITTELERDE+jackb
MITTELERDE+ameds
...
MITTELERDE+root

&rootprompt;<userinput>wbinfo -g</userinput>
MITTELERDE+Domain Users
MITTELERDE+Domain Admins
MITTELERDE+Domain Guests
...
MITTELERDE+Accounts

&rootprompt;<userinput>getent passwd</userinput>
root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/bin:/bin/bash
...
maryo:x:15000:15003:Mary Orville:/home/MITTELERDE/maryo:/bin/false
</screen></para>

<para><quote>
Aber dieser Befehl schlägt fehl:
<screen>
&rootprompt;<userinput>chown maryo a_file</userinput>
chown: `maryo': invalid user
</screen>
Das macht mich verrückt! Was kann da falsch sein?
</quote></para>

<para>
Das selbe Problem wie oben. Ihr System führt höchstwahrscheinlich <command>nscd</command> aus. Stoppen Sie
diesen Dienst und starten Sie ihn nicht mehr! Ihr Problem wird gelöst sein.
</para>

</sect2>
</sect1>

</chapter>
